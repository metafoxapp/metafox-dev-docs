openapi: 3.0.3
info:
  title: APIs
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost/api/v1'
paths:
  /advertise/advertise:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 38603.07340194
                view:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: ''
                  example: a
                end_date:
                  type: string
                  description: ''
                  example: libero
                status:
                  type: string
                  description: ''
                  example: reprehenderit
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 122164950.2
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 131714001.8746
                image:
                  type: object
                  description: ''
                  example: []
                  properties:
                    status:
                      type: string
                      description: 'This field is required when <code>image.temp_file</code> is present.'
                      example: distinctio
                    temp_file:
                      type: number
                      description: 'This field is required when <code>image.id</code> is <code>0</code>.'
                      example: 4.0
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://www.toy.org/rerum-eum-totam-dignissimos-et'
                image_tooltip:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ghjpfvjhyxdrxjekuvtxhtzblpnxydtwbhojewqnnkftrphkfpzlhyhrsxgzppxjfaaiqcxxtmnuixpcpncrwtruiidwqcelwqpzpbrwtdbtazrwdgppmtcsxrfifiqhrxebaa
                html_title:
                  type: string
                  description: 'This field is required when <code>creation_type</code> is <code>html</code>. Must not be greater than 25 characters.'
                  example: thuqcgajbolbammxujvqbzff
                html_description:
                  type: string
                  description: 'Must not be greater than 135 characters.'
                  example: xtflgdbfiznolihawtmtwzebjpgqyeuhufwqwrpfifzucrnvndc
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: oilgftnyzzyrcjjbomlxekejkqkpwsvsoznwynepaqsxqgwcdlpqpbxadmfrlvlkgdznvydldvkewgvbzok
                total_click:
                  type: string
                  description: ''
                  example: null
                total_impression:
                  type: string
                  description: ''
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - qui
                  items:
                    type: string
                is_active:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:53'
                end_date:
                  type: string
                  description: ''
                  example: null
                creation_type:
                  type: string
                  description: ''
                  example: animi
                location:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: ''
                  items:
                    type: string
              required:
                - placement_id
                - url
                - title
                - start_date
                - creation_type
      security: []
  '/advertise/advertise/active/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '183746'
        required: true
        schema:
          type: string
  '/advertise/advertise/hide/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hide.'
        example: '1'
        required: true
        schema:
          type: string
  '/advertise/advertise/report/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_type:
                  type: string
                  description: ''
                  example: consequuntur
                view:
                  type: string
                  description: ''
                  example: debitis
                start_date_month:
                  type: string
                  description: ''
                  example: et
                end_date_month:
                  type: string
                  description: ''
                  example: quo
                start_date_week:
                  type: string
                  description: ''
                  example: deleniti
                end_date_week:
                  type: string
                  description: ''
                  example: omnis
                start_date_day:
                  type: string
                  description: ''
                  example: ut
                end_date_day:
                  type: string
                  description: ''
                  example: velit
              required:
                - report_type
                - view
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the report.'
        example: '9'
        required: true
        schema:
          type: string
  /advertise/advertise/show:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 13.0
                location:
                  type: string
                  description: ''
                  example: sed
              required:
                - placement_id
      security: []
  '/advertise/advertise/total/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: saepe
              required:
                - type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the total.'
        example: '937'
        required: true
        schema:
          type: string
  '/advertise/advertise/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: wefxankoaxrgetneupkukuskfaftcobfryjukmpkmwtfsigyibzrcdxzhlcuwehspkpchibkalkrddkemgekvsqsssrsmmoctgo
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                age_from:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                age_to:
                  type: number
                  description: ''
                  example: 1246.855501
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - deleniti
                  items:
                    type: string
                location:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: ''
                  items:
                    type: string
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the advertise.'
        example: '290702843'
        required: true
        schema:
          type: string
  /advertise/invoice:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: omnis
                end_date:
                  type: string
                  description: ''
                  example: consequatur
                status:
                  type: string
                  description: ''
                  example: tenetur
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 115.4569
      security: []
  '/advertise/invoice/cancel/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '1'
        required: true
        schema:
          type: string
  /advertise/invoice/change:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 173409580.10969
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                item_type:
                  type: string
                  description: ''
                  example: repudiandae
                payment_gateway:
                  type: number
                  description: ''
                  example: 427598.29187
              required:
                - item_id
                - item_type
      security: []
  /advertise/invoice/payment:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 5605526.5882138
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                item_type:
                  type: string
                  description: ''
                  example: dolores
                payment_gateway:
                  type: number
                  description: ''
                  example: 441119.55489642
              required:
                - item_id
                - item_type
      security: []
  /advertise/sponsor:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: ut
                end_date:
                  type: string
                  description: ''
                  example: consequatur
                status:
                  type: string
                  description: ''
                  example: ut
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 13372055.213519
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: nkldhxwcjalmcpuebadsxezcoazrdpclodtzobrdckaebaknbiemnoedseyrzsmrerhwkiwncrqqpwaaakwmwymqboufozkxhlikpbcnmyzseottxymhikovwgyjdcwusnopqvxtxtjitrkrfrwlvvoydonlgvl
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - repellat
                  items:
                    type: string
                location:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: ''
                  items:
                    type: string
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:53'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: numquam
                item_id:
                  type: integer
                  description: ''
                  example: 9
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 65
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
  '/advertise/sponsor/active/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '40765'
        required: true
        schema:
          type: string
  /advertise/sponsor/feed:
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: nirdmguvzuwwqumkouhyhtbwfcclygbviccfzmpkxvsutmibclpkpqubetfugnuleoreufa
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - unde
                  items:
                    type: string
                location:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: ''
                  items:
                    type: string
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:53'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: est
                item_id:
                  type: integer
                  description: ''
                  example: 4
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 63
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
  '/advertise/sponsor/form/feed/{itemType}/{itemId}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: itemType
        description: ''
        example: iusto
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
  '/advertise/sponsor/form/{itemType}/{itemId}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: itemType
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/advertise/sponsor/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: ggianshufkbmkmssgcwqzcrllkynenehbzammuhgfohtzipfsvzgsrdwsauauolwnctupkptllguwwuwggnyviuafwdimohpdefawnoqfhgzmempbdefmelflqvexejvbzdosmnxjx
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example:
                    - null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - modi
                  items:
                    type: string
                location:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: ''
                  items:
                    type: string
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '33'
        required: true
        schema:
          type: string
  '/attachment/download/{id}':
    get:
      summary: 'Allow downloading resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '558'
        required: true
        schema:
          type: string
  /authorization/device:
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  description: ''
                  example: quam
                device_id:
                  type: string
                  description: ''
                  example: dolor
                device_uid:
                  type: string
                  description: ''
                  example: fuga
                token_source:
                  type: string
                  description: ''
                  example: provident
                platform:
                  type: string
                  description: ''
                  example: facere
                platform_version:
                  type: string
                  description: ''
                  example: at
                extra:
                  type: array
                  description: ''
                  example:
                    - facilis
                  items:
                    type: string
              required:
                - device_token
                - device_id
                - token_source
      security: []
  /captcha/verify:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                action_name:
                  type: string
                  description: ''
                  example: hic
                captcha:
                  type: string
                  description: ''
                  example: null
      security: []
  /chat:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ex
                room_id:
                  type: number
                  description: ''
                  example: 10.334887722
                last_message_id:
                  type: number
                  description: ''
                  example: 168074175.2
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: integer
                  description: ''
                  example: 1
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_id:
                  type: number
                  description: ''
                  example: 567194.71030527
                message:
                  type: string
                  description: ''
                  example: labore
                type:
                  type: string
                  description: ''
                  example: molestiae
                reply_id:
                  type: integer
                  description: ''
                  example: 12
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 673.0
                      status:
                        type: string
                        description: ''
                        example: reiciendis
      security: []
  /chat-room:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: integer
                  description: ''
                  example: 15
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                member_ids:
                  type: array
                  description: ''
                  example:
                    - 42.81972
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 117.498
      security: []
  /chat-room/addForm:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  /chat-room/mark-all-read:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_ids:
                  type: array
                  description: ''
                  example:
                    - 0.55
                  items:
                    type: number
      security: []
  '/chat-room/mark-read/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the mark read.'
        example: '16704'
        required: true
        schema:
          type: string
  '/chat-room/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the chat room.'
        example: '92087'
        required: true
        schema:
          type: string
  '/chat/download/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '35'
        required: true
        schema:
          type: string
  '/chat/react/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                react:
                  type: string
                  description: ''
                  example: sapiente
                remove:
                  type: boolean
                  description: ''
                  example: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the react.'
        example: '3011'
        required: true
        schema:
          type: string
  '/chat/remove/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the remove.'
        example: '3'
        required: true
        schema:
          type: string
  '/chat/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: qui
                type:
                  type: string
                  description: ''
                  example: in
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the chat.'
        example: '9'
        required: true
        schema:
          type: string
  /contact:
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ''
                  example: 16
                full_name:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: xgtojmvgeuktpotlkpaqsdsfrwrkvbtnkdmiozmydsdfqegpukzovlbbxevrizmfhftycuxdkaejwqtbxmgizpaswrxlkxjvstlbecwclnumbipvobwoztyuoizrcrwthgjxttpdwzjqlqjewvjszmordtmjglwaldejmvlrfvvobepeibbkbdicfymorsakjlluvzqz
                subject:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: evubrydopxknbvmlx
                email:
                  type: string
                  description: 'Must be a valid email address. Must be between 1 and 255 characters.'
                  example: mjfrfl
                message:
                  type: string
                  description: ''
                  example: beatae
                send_copy:
                  type: integer
                  description: ''
                  example: 6
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - category_id
                - full_name
                - subject
                - email
                - message
      security: []
  '/feed/history/{id}':
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the history.'
        example: '5'
        required: true
        schema:
          type: string
  /follow:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quo
                view:
                  type: string
                  description: ''
                  example: consequatur
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>following</code>.'
                  example: 116082469.9801
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 24032046.961
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 2078.0095513
              required:
                - user_id
      security: []
  '/follow/{id}':
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the follow.'
        example: '4679'
        required: true
        schema:
          type: string
  /forum:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 391.1
                view:
                  type: string
                  description: ''
                  example: doloribus
                forum_id:
                  type: number
                  description: ''
                  example: 476.65537163
                q:
                  type: string
                  description: ''
                  example: eos
                sort:
                  type: string
                  description: ''
                  example: voluptatibus
                sort_type:
                  type: string
                  description: ''
                  example: aut
                when:
                  type: string
                  description: ''
                  example: quia
                item_type:
                  type: string
                  description: ''
                  example: quaerat
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 144.0133
                parent_id:
                  type: number
                  description: ''
                  example: 781767.179
      security: []
  /forum-post:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 7.2
                q:
                  type: string
                  description: ''
                  example: quia
                view:
                  type: string
                  description: ''
                  example: illo
                sort:
                  type: string
                  description: ''
                  example: ut
                sort_type:
                  type: string
                  description: ''
                  example: nihil
                when:
                  type: string
                  description: ''
                  example: dolorem
                thread_id:
                  type: number
                  description: ''
                  example: 159.13539
                post_id:
                  type: number
                  description: ''
                  example: 58.643847261
                forum_id:
                  type: number
                  description: ''
                  example: 1673043.4
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 410434.9
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: number
                  description: ''
                  example: 2066385.9959156
                owner_id:
                  type: number
                  description: ''
                  example: 700.0
                text:
                  type: string
                  description: ''
                  example: at
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 81.14
                      status:
                        type: string
                        description: ''
                        example: et
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - thread_id
                - text
      security: []
  '/forum-post/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '597471'
        required: true
        schema:
          type: string
  '/forum-post/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 22818.9283563
                thread_id:
                  type: number
                  description: ''
                  example: 807422.19
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '28485'
  /forum-post/posters:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - thread_id
      security: []
  /forum-post/quote:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote_id:
                  type: number
                  description: ''
                  example: 0.109206
                text:
                  type: string
                  description: ''
                  example: eos
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 263562.02
                      status:
                        type: string
                        description: ''
                        example: nihil
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - quote_id
                - text
      security: []
  '/forum-post/quote/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '443'
        required: true
        schema:
          type: string
  '/forum-post/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: omnis
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 145468297.49
                      status:
                        type: string
                        description: ''
                        example: maxime
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the forum post.'
        example: '8'
        required: true
        schema:
          type: string
  '/forum-subs/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the forum sub.'
        example: '48'
        required: true
        schema:
          type: string
  /forum-thread:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 1
                user_id:
                  type: number
                  description: ''
                  example: 391007.39313
                q:
                  type: string
                  description: ''
                  example: quia
                view:
                  type: string
                  description: ''
                  example: rerum
                sort:
                  type: string
                  description: ''
                  example: est
                sort_type:
                  type: string
                  description: ''
                  example: voluptatem
                when:
                  type: string
                  description: ''
                  example: exercitationem
                forum_id:
                  type: number
                  description: ''
                  example: 5486.529179
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 5143.378972
      security: []
  '/forum-thread/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '911'
        required: true
        schema:
          type: string
  '/forum-thread/close/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_closed:
                  type: string
                  description: ''
                  example: eum
              required:
                - is_closed
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the close.'
        example: '443'
        required: true
        schema:
          type: string
  /forum-thread/copy:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 5594.0
                title:
                  type: string
                  description: 'Must be between  3 and 155 characters.'
                  example: pcuqfquijmligwbdkpsvlziqnlavssewmtlwfhwzyzujcpvpnestvmbpiqvweghasdjkghmphicnixdutyivbnloustzuoddcklqtbhvslfypireousmdytelveegzcageenv
                thread_id:
                  type: number
                  description: ''
                  example: 63978210.52
              required:
                - forum_id
                - title
                - thread_id
      security: []
  '/forum-thread/copy/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '769'
        required: true
        schema:
          type: string
  '/forum-thread/last-read/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
              required:
                - post_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the last read.'
        example: '989'
        required: true
        schema:
          type: string
  /forum-thread/merge:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 11205860.558875
                current_thread_id:
                  type: number
                  description: ''
                  example: 30662.34244193
                merged_thread_id:
                  type: number
                  description: ''
                  example: 13254207.90565
              required:
                - forum_id
                - current_thread_id
                - merged_thread_id
      security: []
  '/forum-thread/merge/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '5'
        required: true
        schema:
          type: string
  '/forum-thread/move/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '07047'
        required: true
        schema:
          type: string
  '/forum-thread/move/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 27656588.67462
              required:
                - forum_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the move.'
        example: '50787'
        required: true
        schema:
          type: string
  '/forum-thread/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor thread in feed.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 339.47714
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '5133'
        required: true
        schema:
          type: string
  '/forum-thread/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: quidem
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '713'
        required: true
        schema:
          type: string
  '/forum-thread/stick/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_sticked:
                  type: string
                  description: ''
                  example: sit
              required:
                - is_sticked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the stick.'
        example: '61'
        required: true
        schema:
          type: string
  '/forum-thread/subscribe/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_subscribed:
                  type: string
                  description: ''
                  example: et
              required:
                - is_subscribed
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscribe.'
        example: '188366'
        required: true
        schema:
          type: string
  /forum-thread/suggestion-search:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 18
                user_id:
                  type: number
                  description: ''
                  example: 5671277.89
                q:
                  type: string
                  description: ''
                  example: natus
                view:
                  type: string
                  description: ''
                  example: neque
                sort:
                  type: string
                  description: ''
                  example: eos
                sort_type:
                  type: string
                  description: ''
                  example: et
                when:
                  type: string
                  description: ''
                  example: veniam
                forum_id:
                  type: number
                  description: ''
                  example: 9164.4055
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 3.1
                exclude_thread_ids:
                  type: string
                  description: ''
                  example: quasi
      security: []
  '/forum-thread/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the forum thread.'
        example: '1'
        required: true
        schema:
          type: string
  /forum/option:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 55247.0885
                view:
                  type: string
                  description: ''
                  example: ipsum
                forum_id:
                  type: number
                  description: ''
                  example: 6.25002875
                q:
                  type: string
                  description: ''
                  example: quis
                sort:
                  type: string
                  description: ''
                  example: ducimus
                sort_type:
                  type: string
                  description: ''
                  example: voluptate
                when:
                  type: string
                  description: ''
                  example: laboriosam
                item_type:
                  type: string
                  description: ''
                  example: nam
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 19.23311
                parent_id:
                  type: number
                  description: ''
                  example: 24302.9309637
      security: []
  /group-announcement:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.8282
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 2.3455813
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 23152181.26767
                item_id:
                  type: number
                  description: ''
                  example: 115.9146073
                item_type:
                  type: string
                  description: ''
                  example: omnis
              required:
                - group_id
      security: []
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 142726842.71838
                item_id:
                  type: number
                  description: ''
                  example: 19.4544551
                item_type:
                  type: string
                  description: ''
                  example: vero
              required:
                - group_id
      security: []
  /group-announcement/hide:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 3515.1028
                ann_id:
                  type: number
                  description: ''
                  example: 63775032.9006
              required:
                - group_id
                - ann_id
      security: []
  /group-block:
    get:
      summary: 'Browse item'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 536716.9983
                q:
                  type: string
                  description: ''
                  example: ratione
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 176948.87
              required:
                - group_id
      security: []
    post:
      summary: 'Store item'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 46.8991934
                user_id:
                  type: number
                  description: ''
                  example: 1109171.7504292
                delete_activities:
                  type: number
                  description: ''
                  example: 6591429.2989
              required:
                - group_id
                - user_id
      security: []
  '/group-block/{id}':
    get:
      summary: 'View item'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update item'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Delete item'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 30.734
                user_id:
                  type: number
                  description: ''
                  example: 0.0
                delete_activities:
                  type: number
                  description: ''
                  example: 204.31
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group block.'
        example: '6'
        required: true
        schema:
          type: string
  /group-integrated/order:
    post:
      summary: 'Reorder example rule.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2324267.2398378
                names:
                  type: array
                  description: ''
                  example:
                    - ducimus
                  items:
                    type: string
              required:
                - group_id
      security: []
  '/group-integrated/{id}':
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group integrated.'
        example: '9'
        required: true
        schema:
          type: string
  /group-mute:
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 1093294.6213
                user_id:
                  type: number
                  description: ''
                  example: 4520091.7
              required:
                - group_id
                - user_id
      security: []
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: nisi
                group_id:
                  type: number
                  description: ''
                  example: 19.902
                limit:
                  type: number
                  description: ''
                  example: 15739648.234
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 46705311.8
                user_id:
                  type: number
                  description: ''
                  example: 396.1097
                expired_at:
                  type: string
                  description: ''
                  example: autem
              required:
                - group_id
                - user_id
      security: []
  '/group-mute/{id}':
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.0
                user_id:
                  type: number
                  description: ''
                  example: 1.029726
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group mute.'
        example: '2'
        required: true
        schema:
          type: string
  /group-unblock:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 88728585.42
                user_id:
                  type: number
                  description: ''
                  example: 89588.852914337
                delete_activities:
                  type: number
                  description: ''
                  example: 965280724.88152
              required:
                - group_id
                - user_id
      security: []
  /hashtag:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 6341.0
      security: []
  /hashtag/suggestion:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptatum
                limit:
                  type: number
                  description: ''
                  example: 307.356
      security: []
  /image-captcha/refresh:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /invite:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: tempora
                status:
                  type: string
                  description: ''
                  example: ut
                user_id:
                  type: number
                  description: ''
                  example: 2817682.8000732
                view:
                  type: string
                  description: ''
                  example: in
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 69744673.028
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                recipients:
                  type: array
                  description: ''
                  example:
                    - sint
                  items:
                    type: string
                message:
                  type: string
                  description: ''
                  example: nulla
      security: []
  /invite-code:
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 9.7844
                refresh:
                  type: number
                  description: ''
                  example: 3.10218
              required:
                - group_id
      security: []
  '/invite-code/accept/{code}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: code
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/invite-code/verify/{code}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: code
        description: ''
        example: eius
        required: true
        schema:
          type: string
  /invite/batch-delete:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 130944.94367
                  items:
                    type: number
      security: []
  /invite/batch-resend:
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 8957270.31
                  items:
                    type: number
      security: []
  '/invite/resend/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the resend.'
        example: '32826'
        required: true
        schema:
          type: string
  '/invite/{id}':
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the invite.'
        example: '53846'
        required: true
        schema:
          type: string
  '/layout/snippet/history/purge/{name}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: name
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/layout/snippet/history/{name}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: name
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  /layout/snippet/ping:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  /layout/snippet/publish:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /layout/snippet/purge:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/layout/snippet/revert/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the revert.'
        example: '7047'
        required: true
        schema:
          type: string
  /layout/snippet/theme:
    post:
      summary: 'Store snippet layout.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: nihil
                name:
                  type: string
                  description: ''
                  example: aut
                variant:
                  type: string
                  description: ''
                  example: voluptatem
                files:
                  type: array
                  description: ''
                  example:
                    - autem
                  items:
                    type: string
                active:
                  type: boolean
                  description: ''
                  example: false
              required:
                - theme
                - files
      security: []
  /layout/snippet/variant:
    post:
      summary: 'Store snippet layout.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: aspernatur
                variant:
                  type: string
                  description: ''
                  example: non
                files:
                  type: array
                  description: ''
                  example:
                    - ab
                  items:
                    type: string
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - variant
                - files
      security: []
  /live-video:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sit
                view:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>my</code>, <code>friend</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>all_streaming</code>, or <code>my_streaming</code>.'
                  example: friend
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_viewed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                when:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
                  example: all
                owner_id:
                  type: integer
                  description: ''
                  example: 3
                user_id:
                  type: integer
                  description: ''
                  example: 17
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: integer
                  description: ''
                  example: 10
                duration:
                  type: string
                  description: 'Must be one of <code>longer</code> or <code>shorter</code>.'
                  example: longer
                streaming:
                  type: number
                  description: ''
                  example: 320894.01
                is_featured:
                  type: number
                  description: ''
                  example: 26467.0
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: sint
                playback_ids:
                  type: array
                  description: ''
                  example:
                    - sint
                  items:
                    type: string
                owner_id:
                  type: number
                  description: ''
                  example: 329604.0
                privacy:
                  type: string
                  description: ''
                  example: earum
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: false
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 1019.0
                location:
                  type: array
                  description: ''
                  example:
                    - repellendus
                  items:
                    type: string
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - aperiam
                  items:
                    type: string
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
  '/live-video/approve/{id}':
    patch:
      summary: 'Approve live video.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '24509'
        required: true
        schema:
          type: string
  '/live-video/callback/{provider}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/live-video/end-live/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the end live.'
        example: '957167'
        required: true
        schema:
          type: string
  '/live-video/feature/{id}':
    patch:
      summary: 'Feature live video.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '2'
        required: true
        schema:
          type: string
  /live-video/go-live:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: eveniet
                playback_ids:
                  type: array
                  description: ''
                  example:
                    - officiis
                  items:
                    type: string
                owner_id:
                  type: number
                  description: ''
                  example: 65284.4
                privacy:
                  type: string
                  description: ''
                  example: quis
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: false
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 466.94539388
                location:
                  type: array
                  description: ''
                  example:
                    - nesciunt
                  items:
                    type: string
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - quidem
                  items:
                    type: string
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
  '/live-video/off-notification/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the off notification.'
        example: '205064'
        required: true
        schema:
          type: string
  '/live-video/on-notification/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the on notification.'
        example: '88'
        required: true
        schema:
          type: string
  '/live-video/ping-streaming/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ping streaming.'
        example: '3'
        required: true
        schema:
          type: string
  '/live-video/ping-viewer/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ping viewer.'
        example: '822'
        required: true
        schema:
          type: string
  '/live-video/remove-viewer/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the remove viewer.'
        example: '300'
        required: true
        schema:
          type: string
  '/live-video/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor live video in feed.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 1549.4345
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '7'
        required: true
        schema:
          type: string
  '/live-video/sponsor/{id}':
    patch:
      summary: 'Sponsor live video.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: odio
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '4'
        required: true
        schema:
          type: string
  '/live-video/update-viewer/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update viewer.'
        example: '479'
        required: true
        schema:
          type: string
  '/live-video/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                playback_ids:
                  type: array
                  description: ''
                  example:
                    - ex
                  items:
                    type: string
                status:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 171229576.6994
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: veritatis
                duration:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                title:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: array
                  description: ''
                  example:
                    - pariatur
                  items:
                    type: string
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - consequatur
                  items:
                    type: string
      security: []
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the live video.'
        example: '96'
        required: true
        schema:
          type: string
  /marketplace-invoice:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 5654.43731059
                payment_gateway:
                  type: number
                  description: ''
                  example: 54.034
              required:
                - id
                - payment_gateway
      security: []
  /marketplace-invoice/change:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 134.0
              required:
                - id
      security: []
  '/marketplace-invoice/repayment/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 12.5560265
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the repayment.'
        example: '762'
        required: true
        schema:
          type: string
  '/marketplace-invoice/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the marketplace invoice.'
        example: '9'
        required: true
        schema:
          type: string
  '/menu/{menuName}':
    get:
      summary: 'Show Menu.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: menuName
        description: ''
        example: et
        required: true
        schema:
          type: string
  /mfa/service:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  /mfa/user/auth:
    get:
      summary: 'Setup service form.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: odit
                resolution:
                  type: string
                  description: ''
                  example: quos
              required:
                - mfa_token
      security: []
    post:
      summary: 'Auth user.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: voluptatem
                verification_code:
                  type: string
                  description: 'The value format is invalid.'
                  example: '280691'
              required:
                - password
                - verification_code
      security: []
  /mfa/user/service/setup:
    get:
      summary: 'Setup service form.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: totam
                resolution:
                  type: string
                  description: ''
                  example: vitae
              required:
                - service
      security: []
  /music-genre:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 17.1418283
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                q:
                  type: string
                  description: ''
                  example: laborum
                level:
                  type: number
                  description: ''
                  example: 13011.1
                limit:
                  type: number
                  description: ''
                  example: 105866.891123
  /music/genre:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 7929253.4567
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                q:
                  type: string
                  description: ''
                  example: velit
                level:
                  type: number
                  description: ''
                  example: 78588.666187
                limit:
                  type: number
                  description: ''
                  example: 4067.101572075
  /music/album:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ex
                view:
                  type: string
                  description: ''
                  example: sint
                sort:
                  type: string
                  description: ''
                  example: non
                sort_type:
                  type: string
                  description: ''
                  example: dolorum
                when:
                  type: string
                  description: ''
                  example: voluptatem
                owner_id:
                  type: integer
                  description: ''
                  example: 12
                user_id:
                  type: number
                  description: ''
                  example: 985024.801
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 2.45
                genre_id:
                  type: number
                  description: ''
                  example: 16.7224
                category_id:
                  type: number
                  description: ''
                  example: 259.0
                is_featured:
                  type: number
                  description: ''
                  example: 6075197.52466
      security: []
  '/music/album/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '0961'
        required: true
        schema:
          type: string
  '/music/album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: doloribus
                sort_type:
                  type: string
                  description: ''
                  example: consequatur
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 15695.0
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '282527986'
        required: true
        schema:
          type: string
  '/music/album/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 198.36316
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '43'
        required: true
        schema:
          type: string
  '/music/album/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: et
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '581'
        required: true
        schema:
          type: string
  '/music/album/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Delete a resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the album.'
        example: '8'
        required: true
        schema:
          type: string
  /music/playlist:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: eius
                view:
                  type: string
                  description: ''
                  example: laboriosam
                sort:
                  type: string
                  description: ''
                  example: et
                sort_type:
                  type: string
                  description: ''
                  example: odit
                when:
                  type: string
                  description: ''
                  example: architecto
                user_id:
                  type: number
                  description: ''
                  example: 477420.2776226
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 290840.3708408
                genre_id:
                  type: integer
                  description: ''
                  example: 7
                category_id:
                  type: integer
                  description: ''
                  example: 18
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aut
                description:
                  type: string
                  description: ''
                  example: facere
                thumbnail:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 643858773.8019
                owner_id:
                  type: number
                  description: ''
                  example: 3864643.0
                privacy:
                  type: string
                  description: ''
                  example: quae
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 340.774806066
                      status:
                        type: string
                        description: ''
                        example: et
              required:
                - name
                - privacy
      security: []
  /music/playlist/add-song:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 142642.274271
                playlist_ids:
                  type: array
                  description: ''
                  example:
                    - 9842269.911
                  items:
                    type: number
              required:
                - item_id
      security: []
  '/music/playlist/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: dolorum
                sort_type:
                  type: string
                  description: ''
                  example: dolor
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 108014292.48846
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '9'
        required: true
        schema:
          type: string
  '/music/playlist/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 438863.49681137
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '22295'
        required: true
        schema:
          type: string
  '/music/playlist/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: impedit
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '19'
        required: true
        schema:
          type: string
  '/music/playlist/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update a resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                description:
                  type: string
                  description: ''
                  example: reprehenderit
                thumbnail:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 2665.19
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: minima
                owner_id:
                  type: number
                  description: ''
                  example: 1688458.4
                privacy:
                  type: string
                  description: ''
                  example: qui
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 8.5
                      status:
                        type: string
                        description: ''
                        example: impedit
              required:
                - name
                - privacy
      security: []
    delete:
      summary: 'Delete a resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the playlist.'
        example: '9079339'
        required: true
        schema:
          type: string
  /music/search:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  /music/song:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: est
                view:
                  type: string
                  description: ''
                  example: eius
                sort:
                  type: string
                  description: ''
                  example: quaerat
                sort_type:
                  type: string
                  description: ''
                  example: in
                when:
                  type: string
                  description: ''
                  example: aspernatur
                owner_id:
                  type: integer
                  description: ''
                  example: 9
                user_id:
                  type: number
                  description: ''
                  example: 3776.0
                genre_id:
                  type: number
                  description: ''
                  example: 8.75
                category_id:
                  type: integer
                  description: ''
                  example: 10
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 283.54703776
                is_featured:
                  type: number
                  description: ''
                  example: 43321679.0498
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: placeat
                description:
                  type: string
                  description: ''
                  example: reprehenderit
                file:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: string
                  description: ''
                  example: null
                genres:
                  type: array
                  description: 'This field is required when <code>genres</code> is present.'
                  example:
                    - 1.3924
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 1.1522
                privacy:
                  type: string
                  description: ''
                  example: qui
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 259829.570637
                      status:
                        type: string
                        description: ''
                        example: rerum
              required:
                - name
                - privacy
      security: []
  '/music/song/approve/{id}':
    patch:
      summary: 'Approve song.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '9070579'
        required: true
        schema:
          type: string
  '/music/song/download/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '399'
  '/music/song/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '6'
        required: true
        schema:
          type: string
  '/music/song/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 136755457.9445
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '1'
        required: true
        schema:
          type: string
  '/music/song/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: earum
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '8'
        required: true
        schema:
          type: string
  '/music/song/{id}/remove-from-playlist/{playlist_id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '030'
        required: true
        schema:
          type: string
      -
        in: path
        name: playlist_id
        description: 'The ID of the playlist.'
        example: doloremque
        required: true
        schema:
          type: string
  '/music/song/{id}/statistic/total-play':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '425'
        required: true
        schema:
          type: string
  '/music/song/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Delete a resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '377704'
        required: true
        schema:
          type: string
  /page:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: tenetur
                view:
                  type: string
                  description: ''
                  example: est
                sort:
                  type: string
                  description: ''
                  example: consequatur
                sort_type:
                  type: string
                  description: ''
                  example: expedita
                when:
                  type: string
                  description: ''
                  example: voluptatem
                category_id:
                  type: number
                  description: ''
                  example: 58.0
                owner_id:
                  type: integer
                  description: ''
                  example: 2
                user_id:
                  type: number
                  description: ''
                  example: 59.04317
                is_featured:
                  type: number
                  description: ''
                  example: 1.2129274
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 3.0
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ut
                category_id:
                  type: number
                  description: ''
                  example: 10.7482169
                text:
                  type: string
                  description: ''
                  example: sit
                users:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 25817840.27
              required:
                - name
      security: []
  /page-admin:
    get:
      summary: 'Display a listing of the admin resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: facilis
                page_id:
                  type: number
                  description: ''
                  example: 18970.045254
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 54502257.530422
                view:
                  type: string
                  description: ''
                  example: cupiditate
                not_invite_role:
                  type: number
                  description: ''
                  example: 29.0
                excluded_user_id:
                  type: number
                  description: ''
                  example: 158701176.59325
              required:
                - page_id
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 24088076.516
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 2566.4
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 4276132.174996
                user_id:
                  type: number
                  description: ''
                  example: 3163.1
                is_delete:
                  type: number
                  description: ''
                  example: 115220677.0
              required:
                - page_id
                - user_id
                - is_delete
      security: []
  /page-block:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 15732.0
                view:
                  type: string
                  description: ''
                  example: illo
                q:
                  type: string
                  description: ''
                  example: quia
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 39052166.978324
              required:
                - page_id
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 647201.340178
                user_id:
                  type: number
                  description: ''
                  example: 12315.934827723
              required:
                - page_id
                - user_id
      security: []
  '/page-claim/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: non
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page claim.'
        example: '4'
        required: true
        schema:
          type: string
  '/page-info/{id}':
    get:
      summary: 'Display the specified resource info.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page info.'
        example: '5'
        required: true
        schema:
          type: string
  /page-integrated/order:
    post:
      summary: 'Reorder example rule.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 568.2260926
                names:
                  type: array
                  description: ''
                  example:
                    - repellat
                  items:
                    type: string
              required:
                - page_id
      security: []
  '/page-integrated/{id}':
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page integrated.'
        example: '7'
        required: true
        schema:
          type: string
  /page-invite:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ad
                page_id:
                  type: number
                  description: ''
                  example: 602059059.37528
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 6
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 2108993.177252
                user_ids:
                  type: array
                  description: ''
                  example:
                    - sit
                  items:
                    type: string
              required:
                - page_id
                - user_ids
      security: []
  '/page-invite/{id}':
    put:
      summary: 'Used to accept/decline a request to like a page.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  type: number
                  description: ''
                  example: 30.023
              required:
                - accept
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page invite.'
        example: '656'
        required: true
        schema:
          type: string
  /page-member:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ipsa
                page_id:
                  type: number
                  description: ''
                  example: 8158289.388696
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 130.7608594
                view:
                  type: string
                  description: ''
                  example: rerum
                not_invite_role:
                  type: number
                  description: ''
                  example: 73366.05811029
                excluded_user_id:
                  type: number
                  description: ''
                  example: 661.0
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 298.198
              required:
                - page_id
      security: []
  /page-member/add-page-admin:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 29.1136397
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 0.481
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
  /page-member/cancel-invite:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 27243404.786303
                user_id:
                  type: number
                  description: ''
                  example: 17996644.845644
                invite_type:
                  type: string
                  description: ''
                  example: ut
              required:
                - page_id
                - user_id
      security: []
  /page-member/reassign-owner:
    put:
      summary: 'Reassign group owner.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 18054618.0
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 21066.853006143
                users:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: 'This field is required when <code>users</code> is present.'
                        example: 158193.68861819
              required:
                - page_id
      security: []
  /page-member/remove-page-admin:
    delete:
      summary: 'Delete group member.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 0.704625
                user_id:
                  type: number
                  description: ''
                  example: 11970.2466
                is_delete:
                  type: number
                  description: ''
                  example: 22076882.45999
              required:
                - page_id
                - user_id
                - is_delete
      security: []
  /page-member/remove-page-member:
    delete:
      summary: 'Delete group member.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 30221081.303721
                user_id:
                  type: number
                  description: ''
                  example: 466.264011492
              required:
                - page_id
                - user_id
      security: []
  '/page-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page member.'
        example: '8'
        required: true
        schema:
          type: string
  /page-to-post:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  /page-unblock:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 2.138
                user_id:
                  type: number
                  description: ''
                  example: 124.917938
              required:
                - page_id
                - user_id
      security: []
  '/page/about-setting/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '5289'
        required: true
        schema:
          type: string
  '/page/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '0124742'
        required: true
        schema:
          type: string
  '/page/avatar/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                image_crop:
                  type: string
                  description: ''
                  example: labore
              required:
                - image_crop
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '4583'
        required: true
        schema:
          type: string
  /page/category:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                parent_id:
                  type: number
                  description: ''
                  example: 5574.9
                q:
                  type: string
                  description: ''
                  example: aut
                level:
                  type: number
                  description: ''
                  example: 238924297.25759
                limit:
                  type: number
                  description: ''
                  example: 72987377.077808
      security: []
  '/page/cover/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                position:
                  type: string
                  description: ''
                  example: vero
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '961503696'
        required: true
        schema:
          type: string
  '/page/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '42'
        required: true
        schema:
          type: string
  '/page/info-setting/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '916'
        required: true
        schema:
          type: string
  /page/mention:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: reiciendis
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 134325.04905127
      security: []
  '/page/privacy/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '4466'
        required: true
        schema:
          type: string
  /page/similar:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 1.11
                category_id:
                  type: number
                  description: ''
                  example: 6092.8252824
                sort:
                  type: string
                  description: ''
                  example: ut
                when:
                  type: string
                  description: ''
                  example: fugiat
                limit:
                  type: number
                  description: ''
                  example: 4069882.6408943
      security: []
  '/page/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: officia
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '74718755'
        required: true
        schema:
          type: string
  /page/suggestion:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 41.895
      security: []
  '/page/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: corporis
                category_id:
                  type: number
                  description: ''
                  example: 0.0
                vanity_url:
                  type: string
                  description: ''
                  example: enim
                text:
                  type: string
                  description: ''
                  example: voluptates
                landing_page:
                  type: string
                  description: ''
                  example: ipsum
                location:
                  type: array
                  description: ''
                  example:
                    - perferendis
                  items:
                    type: string
                phone:
                  type: string
                  description: ''
                  example: ducimus
                external_link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.kirlin.com/quam-non-aliquam-modi-amet-repellat-perspiciatis-molestiae'
              required:
                - name
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '44'
        required: true
        schema:
          type: string
  /payment-gateway:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 2381516.9310935
      security: []
  /payment-gateway/configuration:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  '/payment-gateway/configuration-form/{driver}/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: driver
        description: ''
        example: soluta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the {driver}.'
        example: '04395'
        required: true
        schema:
          type: string
  /payment-gateway/configuration-multiple:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/payment-gateway/configuration/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 8125.5593693
                value:
                  type: array
                  description: ''
                  example:
                    - eveniet
                  items:
                    type: string
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the configuration.'
        example: '71'
        required: true
        schema:
          type: string
  /payment-order:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  '/payment-order/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 1.0
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the payment order.'
        example: '73'
        required: true
        schema:
          type: string
  /paypal/notify:
    post:
      summary: notify.
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /photo:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 5
                user_id:
                  type: number
                  description: ''
                  example: 107.0783262
                category_id:
                  type: number
                  description: ''
                  example: 56147.673458853
                album_id:
                  type: number
                  description: ''
                  example: 158.883
                group_id:
                  type: number
                  description: ''
                  example: 439127.856
                q:
                  type: string
                  description: ''
                  example: omnis
                tag:
                  type: string
                  description: ''
                  example: qui
                feed_id:
                  type: number
                  description: ''
                  example: 58907915.034023
                view:
                  type: string
                  description: ''
                  example: necessitatibus
                sort:
                  type: string
                  description: ''
                  example: tempora
                sort_type:
                  type: string
                  description: ''
                  example: quasi
                when:
                  type: string
                  description: ''
                  example: quo
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 526.209584
                is_featured:
                  type: number
                  description: ''
                  example: 729379870.331
      security: []
  /photo-album:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quia
                owner_id:
                  type: integer
                  description: ''
                  example: 4
                user_id:
                  type: number
                  description: ''
                  example: 472018.38
                view:
                  type: string
                  description: ''
                  example: tempora
                sort:
                  type: string
                  description: ''
                  example: sed
                sort_type:
                  type: string
                  description: ''
                  example: placeat
                when:
                  type: string
                  description: ''
                  example: quas
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 2308.7114
                is_featured:
                  type: number
                  description: ''
                  example: 1291.382
      security: []
  '/photo-album/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '2105882'
        required: true
        schema:
          type: string
  /photo-album/create:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  '/photo-album/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '993'
        required: true
        schema:
          type: string
  '/photo-album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: id
                sort_type:
                  type: string
                  description: ''
                  example: dolorum
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 43.8
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '9'
        required: true
        schema:
          type: string
  '/photo-album/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: consectetur
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '71'
        required: true
        schema:
          type: string
  '/photo-album/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo album.'
        example: '6029'
        required: true
        schema:
          type: string
  '/photo-album/{photo_album}/edit':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: photo_album
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  /photo-category:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 170810.5194205
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                q:
                  type: string
                  description: ''
                  example: sed
                level:
                  type: number
                  description: ''
                  example: 20.4501609
                limit:
                  type: number
                  description: ''
                  example: 11.71392316
                parent_id:
                  type: number
                  description: ''
                  example: 410509.20807
      security: []
  '/photo-set/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo set.'
        example: '3'
        required: true
        schema:
          type: string
  /photo-tag:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 37.9
              required:
                - item_id
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 67155.10943584
                tag_user_id:
                  type: number
                  description: ''
                  example: 20181580.43857
                px:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                py:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
              required:
                - item_id
                - tag_user_id
      security: []
  '/photo-tag/{id}':
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo tag.'
        example: '53'
        required: true
        schema:
          type: string
  '/photo/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '8'
        required: true
        schema:
          type: string
  '/photo/download/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '8497'
  '/photo/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '3900880'
        required: true
        schema:
          type: string
  '/photo/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 1343.54
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '576145597'
  '/photo/parent-avatar/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the parent avatar.'
        example: '3'
        required: true
        schema:
          type: string
  '/photo/parent-cover/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the parent cover.'
        example: '609'
        required: true
        schema:
          type: string
  '/photo/profile-avatar/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the profile avatar.'
        example: '899'
        required: true
        schema:
          type: string
  '/photo/profile-cover/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 14
                position:
                  type: string
                  description: ''
                  example: eum
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the profile cover.'
        example: '473'
        required: true
        schema:
          type: string
  '/photo/sponsor-in-feed/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 9983.6
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '1037'
        required: true
        schema:
          type: string
  '/photo/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: deleniti
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '3786588'
        required: true
        schema:
          type: string
  '/photo/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: ratione
                categories:
                  type: array
                  description: ''
                  example:
                    - 466.01
                  items:
                    type: number
                album:
                  type: number
                  description: ''
                  example: 2620.01
                tags:
                  type: array
                  description: ''
                  example:
                    - exercitationem
                  items:
                    type: string
                text:
                  type: string
                  description: ''
                  example: qui
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: []
                  properties:
                    address:
                      type: string
                      description: ''
                      example: facilis
                    lat:
                      type: number
                      description: ''
                      example: 18514930.0
                    lng:
                      type: number
                      description: ''
                      example: 2710348.5592
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the photo.'
        example: '46'
        required: true
        schema:
          type: string
  '/photo/{photo}/edit':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: photo
        description: 'The photo.'
        example: sapiente
        required: true
        schema:
          type: string
  /poll:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: nesciunt
                view:
                  type: string
                  description: ''
                  example: autem
                sort:
                  type: string
                  description: ''
                  example: sit
                sort_type:
                  type: string
                  description: ''
                  example: blanditiis
                when:
                  type: string
                  description: ''
                  example: sed
                owner_id:
                  type: integer
                  description: ''
                  example: 6
                user_id:
                  type: number
                  description: ''
                  example: 17549761.465479
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 17936517.31503
                is_featured:
                  type: number
                  description: ''
                  example: 4291548.5657363
      security: []
  /poll-result:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'This field is required when <code>answer_id</code> is not present. Must be at least 1.'
                  example: 1
                answer_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 154799.76005894
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                answers:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: ''
                  items:
                    type: string
              required:
                - poll_id
                - answers
      security: []
  '/poll-result/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: ''
                  items:
                    type: string
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the poll result.'
        example: '417'
        required: true
        schema:
          type: string
  '/poll/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '0'
        required: true
        schema:
          type: string
  '/poll/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '128681319'
        required: true
        schema:
          type: string
  /poll/integration-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  /poll/search-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  '/poll/sponsor-in-feed/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 134819081.15703
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '109'
        required: true
        schema:
          type: string
  '/poll/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: dolor
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '9736'
        required: true
        schema:
          type: string
  /poll/status-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  '/poll/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: ''
                  example: nihil
                answers:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 325665041.60748
                      answer:
                        type: string
                        description: 'This field is required when <code>answers</code> is present. Must be between 1 and 50 characters.'
                        example: jdohumssnwafiihqlyysjgkvppuylbsmvpldm
                item_id:
                  type: number
                  description: ''
                  example: 35.938472
                file:
                  type: array
                  description: ''
                  example:
                    - sunt
                  items:
                    type: string
                text:
                  type: string
                  description: ''
                  example: ut
                background:
                  type: string
                  description: 'Must have 6 characters.'
                  example: okxbuh
                percentage:
                  type: string
                  description: 'Must have 6 characters.'
                  example: odjxix
                border:
                  type: string
                  description: 'Must have 6 characters.'
                  example: lwfhxv
                enable_close:
                  type: number
                  description: ''
                  example: 394.299486
                close_time:
                  type: string
                  description: 'This field is required when <code>enable_close</code> is <code>1</code>.  Must be a valid date.'
                  example: '2023-07-06T06:40:56'
                is_multiple:
                  type: number
                  description: ''
                  example: 0.130772498
                public_vote:
                  type: number
                  description: ''
                  example: 79958.0967319
                randomize:
                  type: number
                  description: ''
                  example: 4249.5
                privacy:
                  type: string
                  description: ''
                  example: null
                has_banner:
                  type: number
                  description: ''
                  example: 2172.0
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 21387.893
                      status:
                        type: string
                        description: ''
                        example: blanditiis
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the poll.'
        example: '456768'
        required: true
        schema:
          type: string
  /quiz:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: officiis
                view:
                  type: string
                  description: ''
                  example: et
                sort:
                  type: string
                  description: ''
                  example: doloribus
                sort_type:
                  type: string
                  description: ''
                  example: amet
                when:
                  type: string
                  description: ''
                  example: in
                owner_id:
                  type: integer
                  description: ''
                  example: 6
                user_id:
                  type: number
                  description: ''
                  example: 0.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 54684072.493
                is_featured:
                  type: number
                  description: ''
                  example: 2811262.72
      security: []
  /quiz-question/view-plays:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: number
                  description: ''
                  example: 1386406.0
              required:
                - question_id
      security: []
  /quiz-result:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 944.0
              required:
                - quiz_id
      security: []
  /quiz-result/view-individual-play:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
              required:
                - quiz_id
                - user_id
      security: []
  '/quiz/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '546'
        required: true
        schema:
          type: string
  '/quiz/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '4'
        required: true
        schema:
          type: string
  /quiz/search-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  '/quiz/sponsor-in-feed/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 9635.1
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '79'
        required: true
        schema:
          type: string
  '/quiz/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: laboriosam
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '16'
        required: true
        schema:
          type: string
  '/quiz/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the quiz.'
        example: '2'
        required: true
        schema:
          type: string
  /search-group-member:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ratione
                group_id:
                  type: number
                  description: ''
                  example: 17.5
                view:
                  type: string
                  description: ''
                  example: repellendus
                limit:
                  type: number
                  description: ''
                  example: 13.4
              required:
                - group_id
      security: []
  /search-page-member:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: itaque
                page_id:
                  type: number
                  description: ''
                  example: 31891915.089502
                view:
                  type: string
                  description: ''
                  example: in
                limit:
                  type: number
                  description: ''
                  example: 98769.0
              required:
                - page_id
      security: []
  /seo/meta:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/seo/meta/{metaName}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: metaName
        description: 'Page meta name.'
        example: blog.browse.home
        required: true
        schema:
          type: string
  '/socialite/callback/{provider}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: non
        required: true
        schema:
          type: string
  '/socialite/login/{provider}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: ''
                  example: incidunt
              required:
                - provider
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: ut
        required: true
        schema:
          type: string
  /sponsor/total/click:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: eaque
                item_ids:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: string
              required:
                - item_type
                - item_ids
      security: []
  /sponsor/total/view:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: commodi
                item_ids:
                  type: array
                  description: ''
                  example:
                    - quia
                  items:
                    type: string
              required:
                - item_type
                - item_ids
      security: []
  /static-page:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/static-page/page/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '918'
        required: true
        schema:
          type: string
  '/static-page/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the static page.'
        example: '932242'
        required: true
        schema:
          type: string
  /subscription-comparison:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
  /subscription-invoice:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
      security: []
    post:
      summary: 'Store item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 25848.55308
                renew_type:
                  type: string
                  description: ''
                  example: repellat
                payment_gateway:
                  type: number
                  description: ''
                  example: 2247006.028
              required:
                - id
                - payment_gateway
      security: []
  '/subscription-invoice/cancel-form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel form.'
        example: '07'
        required: true
        schema:
          type: string
  '/subscription-invoice/cancel/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_id:
                  type: number
                  description: ''
                  example: 5.0616559
              required:
                - reason_id
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '6389'
        required: true
        schema:
          type: string
  '/subscription-invoice/change-invoice/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the change invoice.'
        example: '1914'
        required: true
        schema:
          type: string
  '/subscription-invoice/payment-form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_type:
                  type: string
                  description: ''
                  example: qui
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '66'
        required: true
        schema:
          type: string
  '/subscription-invoice/renew-form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '99'
        required: true
        schema:
          type: string
  '/subscription-invoice/renew-method-form/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 47.034177205
                payment_gateway:
                  type: number
                  description: ''
                  example: 6968328.9604908
                action_type:
                  type: string
                  description: ''
                  example: eveniet
              required:
                - id
                - payment_gateway
                - action_type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew method form.'
        example: '8'
        required: true
        schema:
          type: string
  '/subscription-invoice/renew/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 157095.0
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew.'
        example: '9'
        required: true
        schema:
          type: string
  '/subscription-invoice/upgrade/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: 21.919652623
                action_type:
                  type: string
                  description: ''
                  example: omnis
              required:
                - payment_gateway
                - action_type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the upgrade.'
        example: '17'
        required: true
        schema:
          type: string
  '/subscription-invoice/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscription invoice.'
        example: '0'
        required: true
        schema:
          type: string
  /subscription-package:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptas
                view:
                  type: string
                  description: ''
                  example: et
      security: []
  '/subscription-package/payment-form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '4'
        required: true
        schema:
          type: string
  '/subscription-package/renew-form/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 3646488.4034
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '97'
        required: true
        schema:
          type: string
  '/subscription-package/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subscription package.'
        example: '1454779'
        required: true
        schema:
          type: string
  '/user/verify/email/{hash}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: hash
        description: ''
        example: ut
        required: true
        schema:
          type: string
  /user/verify/resend:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tmarquardt@example.com
              required:
                - email
      security: []
  /activitypoint/package:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: query
          name: q
          description: 'search text'
          example: et
          required: false
          schema:
            type: string
            description: 'search text'
            example: et
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - activitypoint
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: nulla
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: latest
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: integer
                  description: ''
                  example: 19
  /activitypoint/package-transaction:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - activitypoint
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: doloribus
                status:
                  type: string
                  description: ''
                  example: reiciendis
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:53'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:53'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: recent
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: integer
                  description: ''
                  example: 19
  '/activitypoint/package/purchase/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - activitypoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: integer
                  description: ''
                  example: 9
              required:
                - payment_gateway
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase.'
        example: '04'
        required: true
        schema:
          type: string
  '/activitypoint/package/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - activitypoint
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the package.'
        example: '72'
        required: true
        schema:
          type: string
  /activitypoint/setting:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - activitypoint
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: latest
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
  '/activitypoint/statistic/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - activitypoint
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '618'
        required: true
        schema:
          type: string
  /activitypoint/transaction:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - activitypoint
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: ''
                  example: 20
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:53'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:53'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_discussed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: integer
                  description: ''
                  example: 14
  '/activitypoint/transaction/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - activitypoint
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '1'
        required: true
        schema:
          type: string
  /announcement:
    get:
      summary: 'Browse announcement.'
      description: ''
      parameters:
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - announcement
  /announcement/view:
    get:
      summary: 'Browse announcement.'
      description: ''
      parameters:
        -
          in: query
          name: announcement_id
          description: ''
          example: 2.1
          required: true
          schema:
            type: number
            description: ''
            example: 2.1
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - announcement
    post:
      summary: 'Hide announcement.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - announcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                announcement_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
              required:
                - announcement_id
  '/announcement/{id}':
    get:
      summary: 'View announcement.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - announcement
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the announcement.'
        example: '6'
        required: true
        schema:
          type: string
  /auth/logout:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - auth
  /register:
    post:
      summary: MetaFox
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: mcglynn.jaren@example.org
                password:
                  type: string
                  description: ''
                  example: qui
                full_name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 25 characters.'
                  example: mmkb
                user_name:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 25 characters.'
                  example: xrgiagyxpwuybaitaf
                agree:
                  type: boolean
                  description: 'Must be accepted.'
                  example: true
                captcha:
                  type: string
                  description: ''
                  example: null
                code:
                  type: string
                  description: ''
                  example: et
              required:
                - email
                - password
                - full_name
                - user_name
                - agree
      security: []
  /user/login:
    post:
      summary: /login.
      description: 'Logged in by email and password.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The email of user.'
                  example: test@phpfox.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: '123456'
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - username
                - password
  /bgs-background:
    get:
      summary: 'Get background.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - background-status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: number
                  description: ''
                  example: 540.9
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 28.65186996
              required:
                - collection_id
  /pstatusbg-collection:
    get:
      summary: 'Browse collection.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - background-status
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 285347.3466993
    post:
      summary: 'Create background.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - background-status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: rmexwtjjacrnugynlwcbmnjcybtlrgqakoedpwxreuzlcyaivrpquudaqiqkkcitgwkoosqamcjrfrqofctjflposjwmrpfzqblsbozyqdmhjoegywldpzu
                is_active:
                  type: number
                  description: ''
                  example: 57.51702377
                is_default:
                  type: number
                  description: ''
                  example: 200067.0926
                background_temp_file:
                  type: array
                  description: ''
                  example:
                    - 14129.1
                  items:
                    type: number
              required:
                - title
  '/pstatusbg-collection/{id}':
    get:
      summary: 'View background.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - background-status
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pstatusbg collection.'
        example: '0908441'
        required: true
        schema:
          type: string
  /blog:
    get:
      summary: 'Browse blog.'
      description: ''
      parameters:
        -
          in: query
          name: q
          description: ''
          example: culpa
          required: false
          schema:
            type: string
            description: ''
            example: culpa
        -
          in: query
          name: view
          description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
          example: sponsor
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
            example: sponsor
        -
          in: query
          name: sort
          description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
          example: most_discussed
          required: false
          schema:
            type: string
            description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
            example: most_discussed
        -
          in: query
          name: sort_type
          description: 'Must be one of <code>desc</code> or <code>asc</code>.'
          example: desc
          required: false
          schema:
            type: string
            description: 'Must be one of <code>desc</code> or <code>asc</code>.'
            example: desc
        -
          in: query
          name: when
          description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
          example: this_week
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
            example: this_week
        -
          in: query
          name: category_id
          description: ''
          example: 7
          required: false
          schema:
            type: integer
            description: ''
            example: 7
        -
          in: query
          name: user_id
          description: 'The profile id to filter.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'The profile id to filter.'
            example: 0
        -
          in: query
          name: owner_id
          description: ''
          example: 3
          required: false
          schema:
            type: integer
            description: ''
            example: 3
        -
          in: query
          name: page
          description: 'Must be at least 1.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'Must be at least 1.'
            example: 0
        -
          in: query
          name: limit
          description: ''
          example: 2
          required: false
          schema:
            type: integer
            description: ''
            example: 2
        -
          in: query
          name: is_featured
          description: ''
          example: null
          required: false
          schema:
            type: string
            description: ''
            example: null
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - blog
    post:
      summary: 'Create blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quaerat
                categories:
                  type: array
                  description: ''
                  example:
                    - 5580203.7513
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 21194144.296774
                file:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 295110.0
                text:
                  type: string
                  description: ''
                  example: corporis
                draft:
                  type: number
                  description: ''
                  example: 3117.46357889
                tags:
                  type: array
                  description: ''
                  example:
                    - vero
                  items:
                    type: string
                privacy:
                  type: string
                  description: ''
                  example: et
                captcha:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 2179.27622
                      status:
                        type: string
                        description: ''
                        example: alias
              required:
                - title
                - text
                - privacy
  /blog-category:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 77066250.61973
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                q:
                  type: string
                  description: ''
                  example: quia
                level:
                  type: number
                  description: ''
                  example: 25142101.9908
                limit:
                  type: number
                  description: ''
                  example: 0.0
  '/blog/approve/{id}':
    patch:
      summary: 'Approve blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '05913'
        required: true
        schema:
          type: string
  '/blog/feature/{id}':
    patch:
      summary: 'Feature blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '2'
        required: true
        schema:
          type: string
  /blog/form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 21.303
  '/blog/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 2.8914853
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '5'
        required: true
        schema:
          type: string
  '/blog/publish/{id}':
    patch:
      summary: 'Publish blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the publish.'
        example: '9'
        required: true
        schema:
          type: string
  /blog/search-form:
    get:
      summary: 'Get search form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - blog
  '/blog/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor blog in feed.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 260674.11
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '5'
        required: true
        schema:
          type: string
  '/blog/sponsor/{id}':
    patch:
      summary: 'Sponsor blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '73'
        required: true
        schema:
          type: string
  '/blog/{id}':
    get:
      summary: 'View Blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - blog
    put:
      summary: 'Update blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: facere
                categories:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 0
                  items:
                    type: integer
                file:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 62845161.0
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: fugit
                text:
                  type: string
                  description: ''
                  example: enim
                tags:
                  type: array
                  description: ''
                  example:
                    - officia
                  items:
                    type: string
                draft:
                  type: number
                  description: ''
                  example: 50967528.9
                published:
                  type: boolean
                  description: ''
                  example: false
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 0.698738665
                      status:
                        type: string
                        description: ''
                        example: et
    delete:
      summary: 'Delete blog.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - blog
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the blog.'
        example: '52'
        required: true
        schema:
          type: string
  '/chatplus/can-create-direct-message/{type}/{id_from}/{id_to}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
    parameters:
      -
        in: path
        name: type
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: id_from
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id_to
        description: ''
        example: rem
        required: true
        schema:
          type: string
  /chatplus/export-users:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
  /chatplus/jobs:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
  /chatplus/me:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
  /chatplus/prefetch-users:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
  '/chatplus/rooms/upload/{room_id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - chatplus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ''
                  example: laborum
                roomId:
                  type: string
                  description: ''
                  example: ratione
                token:
                  type: string
                  description: ''
                  example: non
                msg:
                  type: string
                  description: ''
                  example: ut
                file:
                  type: array
                  description: ''
                  example:
                    - beatae
                  items:
                    type: string
              required:
                - userId
                - roomId
                - token
                - file
    parameters:
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: quaerat
        required: true
        schema:
          type: string
  /chatplus/settings:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
  /chatplus/spotlight:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
  '/chatplus/user/{type}/{query}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - chatplus
    parameters:
      -
        in: path
        name: type
        description: ''
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: query
        description: ''
        example: est
        required: true
        schema:
          type: string
  /comment:
    get:
      summary: 'Browse comments.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 62.13055257
                item_type:
                  type: string
                  description: ''
                  example: ea
                parent_id:
                  type: number
                  description: ''
                  example: 3306664.1
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 0.0
                sort:
                  type: string
                  description: ''
                  example: quis
                sort_type:
                  type: string
                  description: ''
                  example: voluptatem
                last_id:
                  type: number
                  description: ''
                  example: 418.3955509
                excludes:
                  type: array
                  description: ''
                  example:
                    - 547828.38
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 10
              required:
                - item_id
                - item_type
    post:
      summary: 'Create comment.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 361.4364143
                item_type:
                  type: string
                  description: ''
                  example: voluptatem
                text:
                  type: string
                  description: 'This field is required when none of <code>photo_id</code> and <code>sticker_id</code> are present.'
                  example: corrupti
                parent_id:
                  type: number
                  description: ''
                  example: 1.2241
                photo_id:
                  type: number
                  description: ''
                  example: 4221308.9026087
                sticker_id:
                  type: number
                  description: ''
                  example: 0.0
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
  /comment-lists:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 3649812.1107
                item_type:
                  type: string
                  description: ''
                  example: cum
                parent_id:
                  type: number
                  description: ''
                  example: 212531607.8936
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 4.452093
                sort:
                  type: string
                  description: ''
                  example: qui
                sort_type:
                  type: string
                  description: ''
                  example: voluptas
                last_id:
                  type: number
                  description: ''
                  example: 2236.839252767
                excludes:
                  type: array
                  description: ''
                  example:
                    - 668244797.0
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 3
              required:
                - item_id
                - item_type
  /comment/hide:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: number
                  description: ''
                  example: 93.9987238
                is_hidden:
                  type: string
                  description: ''
                  example: et
                is_global:
                  type: string
                  description: ''
                  example: null
              required:
                - comment_id
                - is_hidden
  '/comment/history-edit/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the history edit.'
        example: '81'
        required: true
        schema:
          type: string
  '/comment/preview/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: '19016'
        required: true
        schema:
          type: string
  /comment/related-comment:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 0.0
                item_type:
                  type: string
                  description: ''
                  example: numquam
                parent_id:
                  type: number
                  description: ''
                  example: 656196373.7644
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 47.715
                sort:
                  type: string
                  description: ''
                  example: pariatur
                sort_type:
                  type: string
                  description: ''
                  example: et
                last_id:
                  type: number
                  description: ''
                  example: 29186.37846358
                excludes:
                  type: array
                  description: ''
                  example:
                    - 8607.9465445
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 20
              required:
                - item_id
                - item_type
  '/comment/{id}':
    get:
      summary: 'View comment.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - comment
    put:
      summary: 'Update comment.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - comment
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: laboriosam
                photo_id:
                  type: string
                  description: ''
                  example: null
                is_hide:
                  type: number
                  description: ''
                  example: 11.208896
                sticker_id:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Remove comment.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '252'
        required: true
        schema:
          type: string
  '/comment/{id}/remove-preview':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - comment
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '470'
        required: true
        schema:
          type: string
  /core/custom-privacy-option:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: eaque
                item_id:
                  type: number
                  description: ''
                  example: 1.2307973
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 5.627
                sort:
                  type: string
                  description: ''
                  example: fugiat
                sort_type:
                  type: string
                  description: ''
                  example: distinctio
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: upcumijoejlucesyzmhyulsswxffkfbqckn
              required:
                - name
      security: []
  /core/custom-privacy-option/form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
  '/core/form/{formName}/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
    parameters:
      -
        in: path
        name: formName
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '5416'
  /core/mobile/action-settings:
    get:
      summary: 'View app settings.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
  /core/mobile/app-settings:
    get:
      summary: 'View app settings.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
  '/core/mobile/form/{formName}/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
    parameters:
      -
        in: path
        name: formName
        description: ''
        example: cum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '632908'
  '/core/mobile/settings/{revision}':
    get:
      summary: 'View app settings.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
    parameters:
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
  /core/package/build/callback:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildId:
                  type: string
                  description: ''
                  example: cum
              required:
                - buildId
      security: []
  /core/status:
    get:
      summary: 'View user badge status.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
  '/core/translation/{group}/{lang}/{revision}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: rem
        required: true
        schema:
          type: string
      -
        in: path
        name: lang
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: cupiditate
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: earum
  /core/url-to-route:
    get:
      summary: 'Get canonical URL.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ''
                  example: possimus
              required:
                - url
      security: []
  /core/web/action-settings:
    get:
      summary: 'View frontend settings.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
  /core/web/app-settings:
    get:
      summary: 'View frontend settings.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
  '/core/web/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
    parameters:
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: odit
  /install:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - core
      security: []
  /link/fetch:
    post:
      summary: 'View link.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: ''
                  example: quas
              required:
                - link
      security: []
  /search/suggestion:
    get:
      summary: 'View Suggestions.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - coreoo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 8
                q:
                  type: string
                  description: ''
                  example: eos
      security: []
  /event:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sapiente
                view:
                  type: string
                  description: ''
                  example: qui
                sort:
                  type: string
                  description: ''
                  example: quas
                sort_type:
                  type: string
                  description: ''
                  example: qui
                when:
                  type: string
                  description: ''
                  example: non
                category_id:
                  type: number
                  description: ''
                  example: 169130466.15019
                user_id:
                  type: number
                  description: ''
                  example: 31187479.213066
                owner_id:
                  type: integer
                  description: ''
                  example: 1
                event_id:
                  type: number
                  description: ''
                  example: 295675.344
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                where:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: jr
                lat:
                  type: number
                  description: ''
                  example: 2862.69176
                lng:
                  type: number
                  description: ''
                  example: 2643.0
                radius:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 1077713.9943272
                is_online:
                  type: number
                  description: ''
                  example: 38853976.91
                is_featured:
                  type: number
                  description: ''
                  example: 8206033.7818915
                bounds_west:
                  type: number
                  description: ''
                  example: 722460.0
                bounds_east:
                  type: number
                  description: ''
                  example: 410.725908058
                bounds_south:
                  type: number
                  description: ''
                  example: 2270.75188453
                bounds_north:
                  type: number
                  description: ''
                  example: 15.84809
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: id
                text:
                  type: string
                  description: ''
                  example: perferendis
                file:
                  type: object
                  description: ''
                  example: []
                  properties:
                    file_type:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: amet
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 0.5711
                attachments:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 33.1
                      status:
                        type: string
                        description: ''
                        example: maxime
                categories:
                  type: array
                  description: ''
                  example:
                    - 153.7793544
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 3308.0
                is_online:
                  type: number
                  description: ''
                  example: 49571520.37317
                event_url:
                  type: string
                  description: 'This field is required when <code>is_online</code> is <code>1</code>.  Must be a valid URL.'
                  example: 'http://gorczany.com/repellendus-corporis-placeat-magnam-doloremque-cumque-sit'
                start_time:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>end_time</code>.'
                  example: '1994-10-14'
                end_time:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_time</code>.'
                  example: '2122-08-10'
                location:
                  type: array
                  description: 'This field is required when <code>is_online</code> is <code>0</code>.'
                  example:
                    - sit
                  items:
                    type: string
                privacy:
                  type: string
                  description: ''
                  example: soluta
                host:
                  type: array
                  description: ''
                  example:
                    - numquam
                  items:
                    type: string
              required:
                - name
                - is_online
                - start_time
                - end_time
                - privacy
  /event-category:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 35.758562674
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                q:
                  type: string
                  description: ''
                  example: fuga
                level:
                  type: number
                  description: ''
                  example: 52173.0
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 9
  /event-code:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 75672678.595632
                refresh:
                  type: integer
                  description: ''
                  example: 18
              required:
                - event_id
  '/event-code/accept/{code}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
    parameters:
      -
        in: path
        name: code
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/event-code/verify/{code}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
    parameters:
      -
        in: path
        name: code
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  /event-host-invite:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3440544.9
                accept:
                  type: number
                  description: ''
                  example: 400202278.4
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 85230887.12
                user_id:
                  type: string
                  description: ''
                  example: quaerat
              required:
                - event_id
                - user_id
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 584867.49939783
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 8390506.9
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 1.774010537
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 32658323.3
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 54982034.01
              required:
                - event_id
  /event-invite:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 45.329
                accept:
                  type: number
                  description: ''
                  example: 651526.7
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 31175293.538253
                user_id:
                  type: string
                  description: ''
                  example: doloremque
              required:
                - event_id
                - user_id
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 58251.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 468197.3081898
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 236.9017485
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 2545145.987588
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 58765.0
              required:
                - event_id
  /event-member:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                event_id:
                  type: number
                  description: ''
                  example: 81.673427
                view:
                  type: string
                  description: ''
                  example: dolores
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 287286.09281167
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 14047.98
                invite_code:
                  type: string
                  description: ''
                  example: enim
              required:
                - event_id
  /event-member/host:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 567171.26314817
                user_id:
                  type: number
                  description: ''
                  example: 211815.0
              required:
                - event_id
                - user_id
  '/event-member/interest/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest:
                  type: number
                  description: ''
                  example: 3144.562548
                invite_code:
                  type: string
                  description: ''
                  example: ipsam
              required:
                - interest
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the interest.'
        example: '06'
        required: true
        schema:
          type: string
  /event-member/member:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 36216086.928075
                user_id:
                  type: number
                  description: ''
                  example: 269960.959
              required:
                - event_id
                - user_id
  '/event-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event member.'
        example: '6571'
        required: true
        schema:
          type: string
  '/event/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '1'
        required: true
        schema:
          type: string
  '/event/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '7'
        required: true
        schema:
          type: string
  '/event/setting/form/{id}':
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '9'
        required: true
        schema:
          type: string
  '/event/setting/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 1.51
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: '2'
        required: true
        schema:
          type: string
  '/event/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: dolores
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '660'
        required: true
        schema:
          type: string
  '/event/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: praesentium
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '98'
        required: true
        schema:
          type: string
  '/event/{id}/mass-email':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: ''
                  example: ipsum
                text:
                  type: string
                  description: ''
                  example: non
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '4'
        required: true
        schema:
          type: string
  '/event/{id}/stats':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - event
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '2'
        required: true
        schema:
          type: string
  /feed:
    get:
      summary: 'Browse feed item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: nihil
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 54.87
                user_id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                item_id:
                  type: number
                  description: ''
                  example: 4.45552
                item_type:
                  type: string
                  description: ''
                  example: impedit
                hashtag:
                  type: string
                  description: ''
                  example: null
                last_feed_id:
                  type: number
                  description: ''
                  example: 403.5
                related_comment_friend_only:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
                view:
                  type: string
                  description: ''
                  example: quam
                from:
                  type: string
                  description: ''
                  example: quae
                type_id:
                  type: string
                  description: ''
                  example: consequatur
                sort:
                  type: string
                  description: ''
                  example: occaecati
                sort_type:
                  type: string
                  description: ''
                  example: qui
                status:
                  type: string
                  description: ''
                  example: modi
                is_preview_tag:
                  type: string
                  description: ''
                  example: null
                has_pin_post:
                  type: string
                  description: ''
                  example: null
                sponsored_feed_ids:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 1
                  items:
                    type: integer
    post:
      summary: 'Create feed.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: omnis
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                parent_item_id:
                  type: string
                  description: ''
                  example: null
                post_as_parent:
                  type: string
                  description: ''
                  example: null
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: []
                  properties:
                    address:
                      type: string
                      description: ''
                      example: ratione
                    lat:
                      type: number
                      description: ''
                      example: 27561098.6022
                    lng:
                      type: number
                      description: ''
                      example: 7.90342857
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 4.0
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 3.29085
                      px:
                        type: number
                        description: ''
                        example: 1.76
                      py:
                        type: number
                        description: ''
                        example: 38768832.43541
              required:
                - post_type
  '/feed/allow-preview/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_allowed:
                  type: string
                  description: ''
                  example: qui
              required:
                - is_allowed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the allow preview.'
        example: '4388'
        required: true
        schema:
          type: string
  '/feed/approve/{id}':
    patch:
      summary: 'Approve pending post.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '5'
        required: true
        schema:
          type: string
  '/feed/archive/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the archive.'
        example: '535522'
        required: true
        schema:
          type: string
  /feed/check-new:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_feed_id:
                  type: number
                  description: ''
                  example: 115082153.42334
                last_pin_feed_id:
                  type: number
                  description: ''
                  example: 306002.1
  /feed/create:
    get:
      summary: 'hot fix because of /api/v1/feed/create crashed.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
  '/feed/decline/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_block_author:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the decline.'
        example: '4'
        required: true
        schema:
          type: string
  '/feed/edit/{id}':
    get:
      summary: 'Get status for edit.'
      description: 'GET: feed/edit/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: '67909685'
        required: true
        schema:
          type: string
  /feed/hidden:
    get:
      summary: 'Browse snooze.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 3.73843046
                type:
                  type: string
                  description: 'Must be one of <code>friend</code>, <code>page</code>, or <code>group</code>.'
                  example: page
                q:
                  type: string
                  description: ''
                  example: placeat
  '/feed/hidden/{id}':
    delete:
      summary: 'Remove snooze.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hidden.'
        example: '44679'
        required: true
        schema:
          type: string
  '/feed/hide-all/{id}':
    post:
      summary: 'Hide a user.'
      description: 'POST: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    delete:
      summary: 'UnHide a user.'
      description: 'DELETE: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hide all.'
        example: '5'
        required: true
        schema:
          type: string
  '/feed/hide-feed/{id}':
    post:
      summary: 'Hide a feed.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    delete:
      summary: 'Un-Hide a feed.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the hide feed.'
        example: '512'
        required: true
        schema:
          type: string
  '/feed/pin/{id}':
    post:
      summary: 'Pin a feed.'
      description: 'POST: feed/pin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 15
              required:
                - owner_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '9'
        required: true
        schema:
          type: string
  '/feed/pin/{id}/home':
    post:
      summary: 'Pin a feed.'
      description: 'POST: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    delete:
      summary: 'Unpin a feed.'
      description: 'DELETE: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '329'
        required: true
        schema:
          type: string
  /feed/post-type:
    get:
      summary: 'Get post types.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
  '/feed/privacy/{id}':
    patch:
      summary: 'Update feed privacy.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: accusantium
              required:
                - privacy
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '82'
        required: true
        schema:
          type: string
  /feed/share:
    post:
      summary: 'Share feed item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_status:
                  type: string
                  description: ''
                  example: et
                post_type:
                  type: string
                  description: ''
                  example: quae
                item_id:
                  type: number
                  description: ''
                  example: 351386.0881765
                item_type:
                  type: string
                  description: ''
                  example: iste
                type_id:
                  type: string
                  description: ''
                  example: possimus
                post_content:
                  type: string
                  description: ''
                  example: ducimus
                parent_feed_id:
                  type: number
                  description: ''
                  example: 1.26299695
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: []
                  properties:
                    address:
                      type: string
                      description: ''
                      example: ex
                    lat:
                      type: number
                      description: ''
                      example: 738.36990549
                    lng:
                      type: number
                      description: ''
                      example: 51.51147186
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 1.308131729
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 413378423.9357
                      px:
                        type: number
                        description: ''
                        example: 863278.28125718
                      py:
                        type: number
                        description: ''
                        example: 145520702.94168
              required:
                - item_id
                - item_type
  /feed/share/form:
    get:
      summary: 'View share form.'
      description: 'GET: feed/share/form'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
  '/feed/snooze/{id}':
    post:
      summary: 'Snooze a user.'
      description: 'POST: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    delete:
      summary: 'Un-Snooze a user.'
      description: 'DELETE: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the snooze.'
        example: '9'
        required: true
        schema:
          type: string
  '/feed/tag/{id}':
    delete:
      summary: 'Remove tag.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: '533'
        required: true
        schema:
          type: string
  /feed/tagged-friend:
    get:
      summary: 'Get tagged friends.'
      description: 'GET: /feed/tagged-friend'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 5027.2380662
                item_id:
                  type: number
                  description: ''
                  example: 467532566.2
                item_type:
                  type: string
                  description: ''
                  example: omnis
              required:
                - item_id
                - item_type
  '/feed/unpin/{id}':
    delete:
      summary: 'Unpin a feed.'
      description: 'DELETE: feed/unpin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 18
              required:
                - owner_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the unpin.'
        example: '172'
        required: true
        schema:
          type: string
  '/feed/{id}':
    get:
      summary: 'View feed item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - feed
    put:
      summary: 'Update feed item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: rerum
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                parent_item_id:
                  type: integer
                  description: ''
                  example: 5
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: []
                  properties:
                    address:
                      type: string
                      description: ''
                      example: laboriosam
                    lat:
                      type: number
                      description: ''
                      example: 64244.5259985
                    lng:
                      type: number
                      description: ''
                      example: 189938.41
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                tagged_in_photo:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 44405.7
                      px:
                        type: number
                        description: ''
                        example: 3351766.4640362
                      py:
                        type: number
                        description: ''
                        example: 35118.1274
              required:
                - post_type
    delete:
      summary: 'Delete feed item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - feed
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feed.'
        example: '9'
        required: true
        schema:
          type: string
  /friend:
    get:
      summary: 'Browse friends.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: inventore
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: friend
                sort:
                  type: string
                  description: ''
                  example: est
                sort_type:
                  type: string
                  description: ''
                  example: fuga
                when:
                  type: string
                  description: ''
                  example: expedita
                list_id:
                  type: number
                  description: ''
                  example: 1374.515559215
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 457.43856
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 1161717.4359
                owner_id:
                  type: number
                  description: ''
                  example: 53.5615803
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 59797174.825
  /friend/birthday:
    get:
      summary: 'Get birthday.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 7912238.67856
  /friend/invite-to-item:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 112.292
                user_id:
                  type: number
                  description: ''
                  example: 940523.571323
                item_type:
                  type: string
                  description: ''
                  example: eveniet
                item_id:
                  type: number
                  description: ''
                  example: 2538.6701
                q:
                  type: string
                  description: ''
                  example: deserunt
              required:
                - owner_id
                - item_type
                - item_id
  /friend/invite-to-owner:
    get:
      summary: 'Invite friend.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: eum
                privacy_type:
                  type: string
                  description: ''
                  example: mollitia
                owner_id:
                  type: number
                  description: ''
                  example: 914251.909
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 2836831.5508899
                parent_id:
                  type: number
                  description: ''
                  example: 44.644545
              required:
                - privacy_type
                - owner_id
  /friend/list:
    get:
      summary: 'Browse friend lists.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 353860.5899
                sort:
                  type: string
                  description: ''
                  example: dolorum
                sort_type:
                  type: string
                  description: ''
                  example: quo
    post:
      summary: 'Create friend list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: airapzolflyqonmmzcjnqkhjpm
              required:
                - name
  '/friend/list/add-friend/{id}':
    post:
      summary: 'Add friend list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: ''
                  example:
                    - sit
                  items:
                    type: string
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: ''
                  example:
                    - placeat
                  items:
                    type: string
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '9287'
        required: true
        schema:
          type: string
  '/friend/list/assign/{id}':
    get:
      summary: 'Assign friend to list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
    post:
      summary: 'Assign multiple friend to list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: array
                  description: ''
                  example:
                    - tempora
                  items:
                    type: string
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the assign.'
        example: '36368'
        required: true
        schema:
          type: string
  /friend/list/create:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
  '/friend/list/delete-friend/{id}':
    delete:
      summary: 'Delete friend from list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the delete friend.'
        example: '6'
        required: true
        schema:
          type: string
  '/friend/list/{id}':
    get:
      summary: 'View friend list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
    put:
      summary: 'Update friend list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 60 characters.'
                  example: djtktivnfzyiljjdqhy
              required:
                - name
    delete:
      summary: 'Remove friend list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the list.'
        example: '8'
        required: true
        schema:
          type: string
  '/friend/list/{list}/edit':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
    parameters:
      -
        in: path
        name: list
        description: 'The list.'
        example: praesentium
        required: true
        schema:
          type: string
  /friend/mention:
    get:
      summary: 'Load mentions.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: autem
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: friend
                sort:
                  type: string
                  description: ''
                  example: facere
                sort_type:
                  type: string
                  description: ''
                  example: neque
                when:
                  type: string
                  description: ''
                  example: ducimus
                list_id:
                  type: number
                  description: ''
                  example: 892393.975546
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 37.41963039
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 5905.1578
                owner_id:
                  type: number
                  description: ''
                  example: 77543.03623044
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 197.64519507
  /friend/request:
    get:
      summary: 'Browse friend request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: modi
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 444.001638
    post:
      summary: 'Create friend request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friend_user_id:
                  type: number
                  description: ''
                  example: 1.98
              required:
                - friend_user_id
  /friend/request/markAllAsRead:
    post:
      summary: 'Mark all as read.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
  '/friend/request/{id}':
    put:
      summary: 'Update friend request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: enim
              required:
                - action
    delete:
      summary: 'Remove friend request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '4'
        required: true
        schema:
          type: string
  /friend/suggestion:
    get:
      summary: 'Load suggestion.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 45242.895
  /friend/suggestion/hide-user:
    post:
      summary: 'Hide user suggestions.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 9317080.0
              required:
                - user_id
  /friend/tag-suggestion:
    get:
      summary: 'Load friend suggestion for tagging.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sit
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 1491038.018384
                item_id:
                  type: number
                  description: ''
                  example: 780.96
                item_type:
                  type: string
                  description: ''
                  example: ipsam
                excluded_ids:
                  type: array
                  description: ''
                  example:
                    - 331.723
                  items:
                    type: number
  '/friend/{id}':
    delete:
      summary: 'Remove friend.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - friend
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the friend.'
        example: '4'
        required: true
        schema:
          type: string
  /group:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                view:
                  type: string
                  description: ''
                  example: autem
                sort:
                  type: string
                  description: ''
                  example: nulla
                sort_type:
                  type: string
                  description: ''
                  example: et
                when:
                  type: string
                  description: ''
                  example: vitae
                type_id:
                  type: number
                  description: ''
                  example: 3.45
                category_id:
                  type: number
                  description: ''
                  example: 51149.5178731
                owner_id:
                  type: integer
                  description: ''
                  example: 12
                user_id:
                  type: number
                  description: ''
                  example: 6715673.3044735
                is_featured:
                  type: number
                  description: ''
                  example: 7764901.2672494
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 318748795.8934
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolores
                category_id:
                  type: number
                  description: ''
                  example: 19039860.0
                reg_method:
                  type: number
                  description: ''
                  example: 13500.672151918
                text:
                  type: string
                  description: ''
                  example: officia
                users:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 378.0
              required:
                - name
                - reg_method
  '/group-info/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: ullam
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group info.'
        example: '35'
        required: true
        schema:
          type: string
  /group-invite:
    get:
      summary: 'Browse group invitation.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 17.185559
                q:
                  type: string
                  description: ''
                  example: quod
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 104996269.85636
              required:
                - group_id
    post:
      summary: 'Store group invitation.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 42290.7
                user_ids:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: string
              required:
                - group_id
                - user_ids
    put:
      summary: 'Update group invitation.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 4064666.76856
                invite_code:
                  type: string
                  description: ''
                  example: qui
                accept:
                  type: number
                  description: ''
                  example: 278389497.32792
              required:
                - group_id
                - accept
    delete:
      summary: 'Remove group invitation.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 38951.66674
                user_id:
                  type: string
                  description: ''
                  example: rem
              required:
                - group_id
                - user_id
  /group-member:
    get:
      summary: 'Browse group members.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: illo
                group_id:
                  type: number
                  description: ''
                  example: 208496.612
                view:
                  type: string
                  description: ''
                  example: esse
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 316571.75712
                not_invite_role:
                  type: number
                  description: ''
                  example: 2.60469
                excluded_user_id:
                  type: number
                  description: ''
                  example: 11.8279
              required:
                - group_id
    post:
      summary: 'Create group member.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 60475386.049585
              required:
                - group_id
  /group-member/add-group-admin:
    post:
      summary: 'Add group admin.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 22511.06757968
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 1.8
                  items:
                    type: number
              required:
                - group_id
                - user_ids
  /group-member/add-group-moderator:
    post:
      summary: 'Add group moderators.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 34112048.832688
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 21430.97755
                  items:
                    type: number
              required:
                - group_id
                - user_ids
  /group-member/cancel-invite:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 942321.48193
                user_id:
                  type: number
                  description: ''
                  example: 23.925
                invite_type:
                  type: string
                  description: ''
                  example: et
              required:
                - group_id
                - user_id
  /group-member/change-to-moderator:
    put:
      summary: 'Change to moderator.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 964045.3302
                user_id:
                  type: number
                  description: ''
                  example: 7.0
              required:
                - group_id
                - user_id
  /group-member/reassign-owner:
    put:
      summary: 'Reassign group owner.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 17262104.624
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 2430.71532
                users:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: 'This field is required when <code>users</code> is present.'
                        example: 218.937003714
              required:
                - group_id
  /group-member/remove-group-admin:
    delete:
      summary: 'Remove group admin.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 147932.0
                user_id:
                  type: number
                  description: ''
                  example: 6.35
                is_delete:
                  type: number
                  description: ''
                  example: 2920.6703961
              required:
                - group_id
                - user_id
                - is_delete
  /group-member/remove-group-member:
    delete:
      summary: 'Delete group member.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 276986.18439
                user_id:
                  type: number
                  description: ''
                  example: 4838913.3
                delete_activities:
                  type: number
                  description: ''
                  example: 1.338
              required:
                - group_id
                - user_id
  /group-member/remove-group-moderator:
    delete:
      summary: 'Remove group moderator.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.99228
                user_id:
                  type: number
                  description: ''
                  example: 265648.7
                is_delete:
                  type: number
                  description: ''
                  example: 13483518.779068
              required:
                - group_id
                - user_id
                - is_delete
  '/group-member/{id}':
    delete:
      summary: 'Delete group member.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
                reassign_owner_id:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group member.'
        example: '501'
        required: true
        schema:
          type: string
  /group-question:
    get:
      summary: 'Browse Question.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 1284049.6
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 164694.0
              required:
                - group_id
    post:
      summary: 'Store a question.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 36308523.5
                question:
                  type: string
                  description: ''
                  example: provident
                type_id:
                  type: number
                  description: ''
                  example: 1136320.85367
                options:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        description: 'This field is required when <code>options</code> is present.'
                        example: omnis
                      status:
                        type: string
                        description: ''
                        example: libero
              required:
                - group_id
                - question
                - type_id
  '/group-question/answer-form/{id}':
    get:
      summary: 'Get answer form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the answer form.'
        example: '2609'
        required: true
        schema:
          type: string
  '/group-question/form/{id}':
    get:
      summary: 'Get creation form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 29.4164503
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '63'
  '/group-question/{id}':
    put:
      summary: 'Update question.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: ''
                  example: et
                type_id:
                  type: number
                  description: ''
                  example: 0.9
                options:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 25796056.38046
                      status:
                        type: string
                        description: ''
                        example: error
                      title:
                        type: string
                        description: 'This field is required unless <code>options.*.status</code> is in <code>remove</code>.'
                        example: culpa
    delete:
      summary: 'Remove question.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group question.'
        example: '1'
        required: true
        schema:
          type: string
  /group-request:
    get:
      summary: 'Browse member requests in a group.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 9289471.4
                q:
                  type: string
                  description: ''
                  example: et
                view:
                  type: string
                  description: ''
                  example: perferendis
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 57.017139801
              required:
                - group_id
  /group-request/accept-request:
    put:
      summary: 'Accept member request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 8695103.4
                user_id:
                  type: number
                  description: ''
                  example: 524.0
              required:
                - group_id
                - user_id
  '/group-request/cancel-request/{id}':
    delete:
      summary: 'Cancel a member request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cancel request.'
        example: '193800'
        required: true
        schema:
          type: string
  /group-request/deny-request:
    delete:
      summary: 'Deny member request.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 45404.591085354
                user_id:
                  type: number
                  description: ''
                  example: 34299752.015644
              required:
                - group_id
                - user_id
  /group-rule:
    get:
      summary: 'Browse group rules.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 83654.1
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 1.604554
              required:
                - group_id
    post:
      summary: 'Create group rule.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 321.883
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: axkqrjldlqsmbxpjnblkpsirmksrfvlzgwywgleqloglfkhhijswnbiyvudvnsutjnipixqfspdsefnpfqdqgejpullrcjrvtpgjnwqjheneqddemszvseyhekdqjhhdqzxjxuawmpnanzvfbkbvadnwbdxmzyabmbiasaasjamtklzvoepvenqcuwfrucmcqicqxodrxbfxzzuwteqtfxzxqeldz
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: lwcrgoeqcoknuvkrzqulsjbjdnofmrlyqcetopruwjlbrxiswpaymxyewetuwnkkgnmmwhmdkrtmurnuihavdjwjntlvxwltupidjdmihpynugltohhgjrwszzkemdaqvzdyikptyqqvzdsdiszmrcqztlhuzdvoladfscinxwpmqnmgsazwkryvaqnaxzrshepkioyrjbrxmqperyrydbidqhdzvnenrnevicwesaractebgszzbfunigwxggvaxerjwxidgahwdkrbgooqvj
              required:
                - group_id
                - title
  /group-rule-example:
    get:
      summary: 'Browse example rules.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
  /group-rule/form:
    get:
      summary: 'View creation form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.0
              required:
                - group_id
  '/group-rule/form/{id}':
    get:
      summary: 'View update form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '3'
        required: true
        schema:
          type: string
  /group-rule/order:
    put:
      summary: 'Reorder rules.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  description: ''
                  example:
                    - 320.401
                  items:
                    type: number
                group_id:
                  type: number
                  description: ''
                  example: 27317.5
              required:
                - group_id
  '/group-rule/{id}':
    put:
      summary: 'Update a group rule.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: nkqkhsrtwabhuafoylvbyxaqiroyokcuvwjxbvypwmgfudqfnyzxpkutjbaobwpfpizpwfnyncebzklsverjuhifnoalfsxhqmvylupezbnulhfggjqlidjwwgobvcp
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: pbxpwhhbdqokbxmxhrxwdmegmupspprelpmjazizmnbbyzucjfyhhlxzniujprhelzntzrelsxibxdqukyxhbnfezdyjyiegtpyuinjxnnnkjmpgrvqvidmyascsufijbpyukvdddzezxmounbtho
              required:
                - title
    delete:
      summary: 'Remove a rule.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group rule.'
        example: '0'
        required: true
        schema:
          type: string
  /group-to-post:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
  '/group/about-setting/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '1'
        required: true
        schema:
          type: string
  '/group/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '4747'
        required: true
        schema:
          type: string
  '/group/avatar/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: voluptas
              required:
                - image
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '66'
        required: true
        schema:
          type: string
  /group/category:
    get:
      summary: 'Browse category.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 11215.89121341
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                q:
                  type: string
                  description: ''
                  example: odit
                level:
                  type: number
                  description: ''
                  example: 3.1667219
                limit:
                  type: number
                  description: ''
                  example: 50.38
  /group/confirm-answer-question:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 7
                is_answer_membership_question:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_answer_membership_question
  /group/confirm-rule:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 18
                is_rule_confirmation:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_rule_confirmation
  '/group/cover/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                position:
                  type: string
                  description: ''
                  example: quo
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '4373'
        required: true
        schema:
          type: string
  '/group/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '9'
        required: true
        schema:
          type: string
  '/group/info-setting/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '6614'
        required: true
        schema:
          type: string
  /group/mention:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: id
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 24954639.448521
  '/group/moderation-right/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the moderation right.'
        example: '2'
        required: true
        schema:
          type: string
  '/group/pending-mode/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 149.0
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pending mode.'
        example: '9706'
        required: true
        schema:
          type: string
  '/group/privacy/change-request/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the change request.'
        example: '2'
        required: true
        schema:
          type: string
  '/group/privacy/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '9591'
        required: true
        schema:
          type: string
  '/group/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: enim
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '3964'
        required: true
        schema:
          type: string
  /group/suggestion:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 16.7592122
                category_id:
                  type: number
                  description: ''
                  example: 12.5715472
  '/group/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: illo
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>exists</code> is <code>name</code>.'
                  example: maiores
                category_id:
                  type: number
                  description: ''
                  example: 550207.5940088
                reg_method:
                  type: number
                  description: ''
                  example: 2838508.0
                vanity_url:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: uqjnucjxtyuaqmukntobkzklbuxegppjrhlzxkwhmgtgnfdzejgddaysvhfvvcftrkwzllddbkgxxnbpwrtlgetmrjyfwy
                landing_page:
                  type: string
                  description: ''
                  example: labore
                location:
                  type: array
                  description: ''
                  example:
                    - ipsam
                  items:
                    type: string
                text_description:
                  type: string
                  description: ''
                  example: inventore
                phone:
                  type: string
                  description: ''
                  example: omnis
              required:
                - landing_page
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the group.'
        example: '3'
        required: true
        schema:
          type: string
  /like:
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - like
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 29274.204795
                item_type:
                  type: string
                  description: ''
                  example: rerum
              required:
                - item_id
                - item_type
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - like
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 9425.7
                item_type:
                  type: string
                  description: ''
                  example: veritatis
                react_id:
                  type: number
                  description: ''
                  example: 42028597.1222
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 0
              required:
                - item_id
                - item_type
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - like
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 127579174.42861
                item_type:
                  type: string
                  description: ''
                  example: totam
                reaction_id:
                  type: number
                  description: ''
                  example: 21.0
              required:
                - item_id
                - item_type
  /like-tabs:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - like
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                item_type:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - item_id
                - item_type
  '/like/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - like
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the like.'
        example: '09'
        required: true
        schema:
          type: string
  /preaction:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - like
  /preaction/get-reacted-lists:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - like
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 192.8756305
                item_type:
                  type: string
                  description: ''
                  example: illo
                react_id:
                  type: number
                  description: ''
                  example: 124.2028154
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 7
              required:
                - item_id
                - item_type
  /preaction/reaction-tabs:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - like
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                item_type:
                  type: string
                  description: ''
                  example: ipsam
              required:
                - item_id
                - item_type
  /reaction:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - like
  /marketplace:
    get:
      summary: 'Browse listing.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aut
                view:
                  type: string
                  description: ''
                  example: ullam
                sort:
                  type: string
                  description: ''
                  example: et
                sort_type:
                  type: string
                  description: ''
                  example: pariatur
                when:
                  type: string
                  description: ''
                  example: sunt
                category_id:
                  type: number
                  description: ''
                  example: 475906.7
                owner_id:
                  type: integer
                  description: ''
                  example: 17
                user_id:
                  type: number
                  description: ''
                  example: 35878673.47
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 12699.9999617
                country_iso:
                  type: string
                  description: ''
                  example: vel
                bounds_west:
                  type: number
                  description: ''
                  example: 0.424591
                bounds_east:
                  type: number
                  description: ''
                  example: 8470621.4210488
                bounds_south:
                  type: number
                  description: ''
                  example: 13.566
                bounds_north:
                  type: number
                  description: ''
                  example: 23533431.0
                price_from:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                price_to:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                is_featured:
                  type: string
                  description: ''
                  example: null
  /marketplace-category:
    get:
      summary: 'Browe category.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: in
                id:
                  type: number
                  description: ''
                  example: 7.70186
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 7019.3
  /marketplace-invite:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - marketplace
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 4.04
                user_ids:
                  type: array
                  description: 'This field is required when <code>user_ids</code> is present.'
                  example:
                    - 638465614.64404
                  items:
                    type: number
              required:
                - listing_id
  /marketplace-invite/invited-people:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 913.34917
                limit:
                  type: number
                  description: ''
                  example: 304716448.71551
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
              required:
                - listing_id
  '/marketplace-photo/form/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '0021'
        required: true
        schema:
          type: string
  '/marketplace-photo/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: ''
                  example: voluptas
              required:
                - files
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the marketplace photo.'
        example: '5449'
        required: true
        schema:
          type: string
  '/marketplace/approve/{id}':
    put:
      summary: 'Approve listing.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '8'
        required: true
        schema:
          type: string
  '/marketplace/feature/{id}':
    patch:
      summary: 'Feature listing.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '354844'
        required: true
        schema:
          type: string
  '/marketplace/reopen/{id}':
    patch:
      summary: 'Reopen listing.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the reopen.'
        example: '2'
        required: true
        schema:
          type: string
  '/marketplace/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor in feed.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 0.6
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '792710'
        required: true
        schema:
          type: string
  '/marketplace/sponsor/{id}':
    patch:
      summary: 'Sponsor listing.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: sed
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '7'
        required: true
        schema:
          type: string
  '/marketplace/{id}':
    get:
      summary: 'View listing.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - marketplace
    delete:
      summary: 'Remove listing.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - marketplace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the marketplace.'
        example: '289'
        required: true
        schema:
          type: string
  /notification:
    get:
      summary: "Browse current user's notifications."
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - notification
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'The page number.'
                  example: 1
                limit:
                  type: integer
                  description: 'The max item per page.'
                  example: 4
  /notification/all:
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - notification
  /notification/markAllAsRead:
    post:
      summary: 'Mark all as read.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - notification
  '/notification/{id}':
    put:
      summary: 'Mark as read.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - notification
    delete:
      summary: 'Delete notification.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - notification
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: '86006'
        required: true
        schema:
          type: string
  /report:
    post:
      summary: 'Store a new report.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 83.523276
                feedback:
                  type: string
                  description: ''
                  example: iste
                item_id:
                  type: number
                  description: ''
                  example: 4133.3
                item_type:
                  type: string
                  description: ''
                  example: voluptas
              required:
                - reason
                - item_id
                - item_type
  /report-owner:
    get:
      summary: 'Browse reports.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 542.61668
                sort_type:
                  type: string
                  description: ''
                  example: sapiente
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 3.0813475
              required:
                - owner_id
    post:
      summary: 'Post a report to owner.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 5694988.6081
                feedback:
                  type: string
                  description: ''
                  example: omnis
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                item_type:
                  type: string
                  description: ''
                  example: officia
              required:
                - item_id
                - item_type
  /report-owner/form:
    get:
      summary: 'Get report form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                item_type:
                  type: string
                  description: ''
                  example: ad
              required:
                - item_id
                - item_type
  '/report-owner/reporters/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - report
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the reporter.'
        example: '54'
        required: true
        schema:
          type: string
  '/report-owner/{id}':
    put:
      summary: 'Update a report.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keep_post:
                  type: string
                  description: ''
                  example: quia
              required:
                - keep_post
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the report owner.'
        example: '447939'
        required: true
        schema:
          type: string
  /report/form:
    get:
      summary: 'Get report form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                item_type:
                  type: string
                  description: ''
                  example: optio
              required:
                - item_id
                - item_type
  /report/form/mobile:
    get:
      summary: 'Get report form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                item_type:
                  type: string
                  description: ''
                  example: rerum
              required:
                - item_id
                - item_type
  /report/reason:
    get:
      summary: 'Browse report reasons.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - report
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 20704.140001
  /saveditems:
    get:
      summary: 'Browse item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: omnis
                collection_id:
                  type: number
                  description: ''
                  example: 168241.46141097
                sort_type:
                  type: string
                  description: ''
                  example: omnis
                open:
                  type: string
                  description: ''
                  example: quia
                when:
                  type: string
                  description: ''
                  example: eligendi
                type:
                  type: string
                  description: ''
                  example: quas
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 8
    post:
      summary: 'Create item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 83275104.6
                item_type:
                  type: string
                  description: ''
                  example: et
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 319186982.58027
                  items:
                    type: number
              required:
                - item_id
                - item_type
  /saveditems-collection:
    get:
      summary: 'Browse list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 5
                type:
                  type: string
                  description: ''
                  example: maxime
                saved_id:
                  type: number
                  description: ''
                  example: 21447085.75
    post:
      summary: 'Create list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: wvkvjynzrsslkudawp
                privacy:
                  type: string
                  description: ''
                  example: sint
              required:
                - name
                - privacy
  '/saveditems-collection/add-friend/{id}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: ''
                  example:
                    - provident
                  items:
                    type: string
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '9'
        required: true
        schema:
          type: string
  /saveditems-collection/form:
    get:
      summary: 'View creation form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
  '/saveditems-collection/form/{id}':
    get:
      summary: 'View update form.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '0'
        required: true
        schema:
          type: string
  '/saveditems-collection/item/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 5
                type:
                  type: string
                  description: ''
                  example: atque
                saved_id:
                  type: number
                  description: ''
                  example: 547834.78
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '2267'
        required: true
        schema:
          type: string
  '/saveditems-collection/leave-collection/{id}':
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the leave collection.'
        example: '62291485'
        required: true
        schema:
          type: string
  '/saveditems-collection/remove-member/{id}':
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 6037.312
              required:
                - user_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the remove member.'
        example: '7536'
        required: true
        schema:
          type: string
  '/saveditems-collection/view-friend/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the view friend.'
        example: '2060'
        required: true
        schema:
          type: string
  '/saveditems-collection/{id}':
    get:
      summary: 'View list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
    put:
      summary: 'Update list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: mgcjvnfuxbmipxrnmdmvejzlqulvgregkcautetkxwhyxeerrwhjjdcifgjjebtlhgpfhelypfu
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - name
    delete:
      summary: 'Remove list.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the saveditems collection.'
        example: '45989'
        required: true
        schema:
          type: string
  /saveditems/collection:
    put:
      summary: 'Move item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 7.38389709
                collection_ids:
                  type: array
                  description: ''
                  example:
                    - 162.87
                  items:
                    type: number
              required:
                - item_id
  '/saveditems/collection/{list_id}/save/{saved_id}':
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
    parameters:
      -
        in: path
        name: list_id
        description: 'The ID of the list.'
        example: similique
        required: true
        schema:
          type: string
      -
        in: path
        name: saved_id
        description: 'The ID of the saved.'
        example: ex
        required: true
        schema:
          type: string
  /saveditems/get-tab:
    get:
      summary: 'Browse tabs.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
  '/saveditems/read/{id}':
    patch:
      summary: 'Mark as opened.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saved_id:
                  type: number
                  description: ''
                  example: 213077069.0
                status:
                  type: number
                  description: ''
                  example: 33909.3
                collection_id:
                  type: number
                  description: ''
                  example: 218.0
              required:
                - saved_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the read.'
        example: '08'
        required: true
        schema:
          type: string
  /saveditems/save:
    post:
      summary: 'Create item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 6.464
                item_type:
                  type: string
                  description: ''
                  example: hic
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 0.985
                  items:
                    type: number
              required:
                - item_id
                - item_type
  /saveditems/unsave:
    delete:
      summary: 'Unsave item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1611.522
                item_type:
                  type: string
                  description: ''
                  example: at
              required:
                - item_id
                - item_type
  '/saveditems/{id}':
    get:
      summary: 'View item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - saved
    put:
      summary: 'Update item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_unopened:
                  type: number
                  description: ''
                  example: 50.05
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 19954.274534145
                  items:
                    type: number
    delete:
      summary: 'Remove item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - saved
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the saveditem.'
        example: '1'
        required: true
        schema:
          type: string
  /search:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ''
                owner_id:
                  type: number
                  description: ''
                  example: 274.51
                from:
                  type: string
                  description: ''
                  example: doloribus
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 2.'
                  example: 0
                last_search_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                view:
                  type: string
                  description: ''
                  example: velit
              required:
                - q
      security: []
  /search/group:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: k
                owner_id:
                  type: number
                  description: ''
                  example: 3.0
                from:
                  type: string
                  description: ''
                  example: itaque
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
              required:
                - q
      security: []
  /search/hashtag/trending:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: integer
                  description: ''
                  example: 2
      security: []
  /sticker/recent:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 33.678
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sticker_id:
                  type: number
                  description: ''
                  example: 199931.942
              required:
                - sticker_id
  /sticker/sticker-set:
    get:
      summary: 'Browse sticker.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: blanditiis
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 251638.0
  '/sticker/sticker-set/active/{sticker_set}':
    patch:
      summary: 'Active sticker set.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: number
                  description: ''
                  example: 2731.8131
              required:
                - active
    parameters:
      -
        in: path
        name: sticker_set
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
  '/sticker/sticker-set/default/{sticker_set}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - sticker
    parameters:
      -
        in: path
        name: sticker_set
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  /sticker/sticker-set/user:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 30.42
              required:
                - id
  '/sticker/sticker-set/user/{id}':
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - sticker
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/sticker/sticker-set/{id}':
    get:
      summary: 'View sticker set.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - sticker
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sticker set.'
        example: '2854915'
        required: true
        schema:
          type: string
  '/sticker/{id}':
    delete:
      summary: 'Delete item.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - sticker
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sticker.'
        example: '1086'
        required: true
        schema:
          type: string
  /attachment:
    post:
      summary: 'Upload attachment.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - upload
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: provident
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 8192 kilobytes.'
                item_type:
                  type: string
                  description: ''
                  example: omnis
                upload_type:
                  type: string
                  description: ''
                  example: dolore
              required:
                - file
                - item_type
      security: []
  /file:
    post:
      summary: 'Upload single.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: harum
                file:
                  type: string
                  description: ''
                  example: et
                file_type:
                  type: string
                  description: ''
                  example: molestiae
                item_type:
                  type: string
                  description: ''
                  example: voluptatibus
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - nobis
                  items:
                    type: string
                base64:
                  type: string
                  description: ''
                  example: ipsum
              required:
                - file
  /files:
    post:
      summary: 'Upload multiple file.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - upload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: et
                0:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: ut
                upload_type:
                  type: string
                  description: ''
                  example: quae
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - suscipit
                  items:
                    type: string
                file:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: string
              required:
                - file
  /auth/profile:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
  /me:
    get:
      summary: 'View current logged in user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: earum
  /user:
    get:
      summary: 'Browse user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ea
                view:
                  type: string
                  description: ''
                  example: molestiae
                gender:
                  type: number
                  description: ''
                  example: 0.9
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 597.82
                sort:
                  type: string
                  description: ''
                  example: tempore
                sort_type:
                  type: string
                  description: ''
                  example: eligendi
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ''
                country_state_id:
                  type: string
                  description: ''
                  example: rerum
                city:
                  type: string
                  description: ''
                  example: null
                city_code:
                  type: string
                  description: ''
                  example: inventore
                is_featured:
                  type: number
                  description: ''
                  example: 285964.002526
  /user/account:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
  /user/account/review-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
  /user/activity:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
  '/user/avatar/{user}':
    post:
      summary: 'Upload avatar.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                image_crop:
                  type: string
                  description: ''
                  example: eos
              required:
                - image_crop
    parameters:
      -
        in: path
        name: user
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
  /user/ban:
    post:
      summary: 'Ban user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 311168.021
                day:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                reason:
                  type: string
                  description: ''
                  example: null
                return_user_group:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
              required:
                - user_id
                - day
                - return_user_group
  '/user/ban/{id}':
    delete:
      summary: 'Un-ban user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ban.'
        example: '92'
        required: true
        schema:
          type: string
  /user/city:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: libero
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: s
                state:
                  type: string
                  description: ''
                  example: rerum
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 8
  /user/country/state:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: minima
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ne
                state:
                  type: string
                  description: ''
                  example: ut
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 3
  '/user/cover/{user}':
    post:
      summary: 'Update cover.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                position:
                  type: string
                  description: ''
                  example: quia
    parameters:
      -
        in: path
        name: user
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/user/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '86259'
        required: true
        schema:
          type: string
  /user/form:
    get:
      summary: 'Get user registration form.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      security: []
  '/user/info/{user}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
    parameters:
      -
        in: path
        name: user
        description: ''
        example: ea
        required: true
        schema:
          type: string
  '/user/password/edit/{resolution}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: omnis
                user_id:
                  type: number
                  description: ''
                  example: 2.0
              required:
                - token
                - user_id
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/user/password/request-method/{resolution}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: hudson25@example.org
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - email
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: ''
        example: error
        required: true
        schema:
          type: string
  '/user/password/request-verify/{resolution}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_method:
                  type: string
                  description: ''
                  example: explicabo
                user_id:
                  type: number
                  description: ''
                  example: 4811862.5
              required:
                - request_method
                - user_id
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/user/password/{resolution}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 4163.24433297
                token:
                  type: string
                  description: ''
                  example: inventore
                new_password:
                  type: string
                  description: ''
                  example: ut
                new_password_confirmation:
                  type: string
                  description: 'This field is required when <code>new_password</code> is present.  The value and <code>new_password</code> must match.'
                  example: null
              required:
                - user_id
                - token
                - new_password
      security: []
    parameters:
      -
        in: path
        name: resolution
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sed
  /user/profile/form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 73214635.091784
  /user/profile/gender:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quo
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 1
                is_custom:
                  type: number
                  description: ''
                  example: 121.8
  '/user/profile/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                birthday:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-06T06:40:57'
                postal_code:
                  type: string
                  description: ''
                  example: nesciunt
                country_iso:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: rd
                country_state_id:
                  type: string
                  description: ''
                  example: ea
                country_state:
                  type: object
                  description: ''
                  example: []
                  properties:
                    value:
                      type: string
                      description: ''
                      example: fuga
                country_city_code:
                  type: string
                  description: ''
                  example: null
                gender:
                  type: number
                  description: ''
                  example: 132.149344
                custom_gender:
                  type: number
                  description: 'This field is required when <code>gender</code> is <code>0</code>.'
                  example: 329.2482
                relation:
                  type: number
                  description: ''
                  example: 4.2
                relation_with:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ''
                        example: 198579.114795
                bio:
                  type: string
                  description: ''
                  example: nesciunt
                about_me:
                  type: string
                  description: ''
                  example: in
                interest:
                  type: string
                  description: ''
                  example: reiciendis
                hobbies:
                  type: string
                  description: ''
                  example: omnis
                address:
                  type: string
                  description: ''
                  example: est
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '984023'
  '/user/quick-preview/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the quick preview.'
        example: '22'
        required: true
        schema:
          type: string
  /user/refresh:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: ''
                  example: a
              required:
                - refresh_token
  '/user/remove-cover/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '379'
  '/user/simple/{user}':
    get:
      summary: 'View minimized user information.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
    parameters:
      -
        in: path
        name: user
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/user/{id}/item-stats':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: quia
                item_id:
                  type: number
                  description: ''
                  example: 5939.0528093
              required:
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/user/{id}':
    get:
      summary: 'View user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user
    delete:
      summary: 'Delete user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /account/blocked-user:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: quaerat
              required:
                - user_id
  '/account/blocked-user/{id}':
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/account
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the blocked user.'
        example: '6600'
        required: true
        schema:
          type: string
  /account/invisible:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invisible:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 0
              required:
                - invisible
  /account/item-privacy:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/account
  '/account/item-privacy/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 29964585.671854
              required:
                - id
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '63285'
  /account/notification:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ''
                  example: cupiditate
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                module_id:
                  type: string
                  description: ''
                  example: sed
                value:
                  type: integer
                  description: ''
                  example: 19
                var_name:
                  type: string
                  description: ''
                  example: ipsa
                channel:
                  type: string
                  description: ''
                  example: et
              required:
                - channel
  /account/profile-menu:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/account
  '/account/profile-menu/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 1966.83873597
              required:
                - id
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0'
  /account/profile-privacy:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/account
  '/account/profile-privacy/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 1436628.2581014
              required:
                - id
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '6'
  /account/setting:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /account/timezone:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/account/currency-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/account/email-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/account/language-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/account/name-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/account/password-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/account/timezone-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/account/username-form:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/account
  /user/shortcut:
    get:
      summary: 'Browse shortcuts.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/shortcut
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                limit:
                  type: number
                  description: ''
                  example: 33028626.08
  /user/shortcut/edit:
    get:
      summary: 'View shortcut.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - user/shortcut
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 50536.7
  '/user/shortcut/manage/{id}':
    put:
      summary: 'Update shortcut.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - user/shortcut
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sort_type:
                  type: string
                  description: ''
                  example: ratione
              required:
                - sort_type
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the manage.'
        example: '393'
        required: true
        schema:
          type: string
  /video:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ipsa
                view:
                  type: string
                  description: ''
                  example: tempora
                sort:
                  type: string
                  description: ''
                  example: libero
                sort_type:
                  type: string
                  description: ''
                  example: quis
                when:
                  type: string
                  description: ''
                  example: qui
                category_id:
                  type: number
                  description: ''
                  example: 899460.31330833
                owner_id:
                  type: integer
                  description: ''
                  example: 15
                user_id:
                  type: number
                  description: ''
                  example: 6391313.4348
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 51.763774
                is_featured:
                  type: number
                  description: ''
                  example: 264228.74463
    post:
      summary: 'Create a resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: a
                text:
                  type: string
                  description: ''
                  example: et
                file:
                  type: object
                  description: 'This field is required when <code>video_url</code> is not present.'
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 119395.727
                thumbnail:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 58578.02
                video_url:
                  type: string
                  description: 'This field is required when <code>file</code> is not present.  Must be a valid URL.'
                  example: 'https://www.fay.com/quibusdam-harum-laborum-doloremque-impedit-soluta'
                categories:
                  type: array
                  description: ''
                  example:
                    - 38903.16
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 7447900.919334
                privacy:
                  type: string
                  description: ''
                  example: sit
              required:
                - title
                - privacy
  '/video/approve/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '922'
        required: true
        schema:
          type: string
  '/video/callback/{provider}':
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: eum
        required: true
        schema:
          type: string
  /video/category:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 18.566163847
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                q:
                  type: string
                  description: ''
                  example: perferendis
                level:
                  type: number
                  description: ''
                  example: 111.797
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 0
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: euqnwrwypqmnpdkhydfjuaukuerfsxqsxohoifmqfmmwgkcxjizxvrovbsumpcbtpuwsng
                name_url:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: lgqxbfwqnlnhofyblcttvgquhfygzudhtqicgxwcytbwimkespufmyhptdffmsirkjffsrhnqynijazwmetebjvqxvkdzxtrvlcblfdhsxvkaaspsekntfiilpkbferfxizqloahlgyultjwejysgugvlowgiyqzrdejhmkczdirjwvqmjzwboqxqqlicpccry
                is_active:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 1
                ordering:
                  type: number
                  description: 'Must be at least 0.'
                  example: 0
                parent_id:
                  type: number
                  description: ''
                  example: 701.8
              required:
                - name
  '/video/category/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - video
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: '85456'
        required: true
        schema:
          type: string
  '/video/feature/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '3'
        required: true
        schema:
          type: string
  '/video/sponsor-in-feed/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 1020735.0
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '4'
        required: true
        schema:
          type: string
  '/video/sponsor/{id}':
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: provident
              required:
                - sponsor
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '05'
        required: true
        schema:
          type: string
  '/video/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  data: []
                  error: "Content isn't available"
                properties:
                  status:
                    type: string
                    example: failed
                  data:
                    type: array
                    example: []
                  error:
                    type: string
                    example: "Content isn't available"
      tags:
        - video
    put:
      summary: 'Update a resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: ipsam
                text:
                  type: string
                  description: ''
                  example: sed
                thumbnail:
                  type: object
                  description: ''
                  example: []
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 142254135.62292
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: nihil
                categories:
                  type: array
                  description: ''
                  example:
                    - 63.230369791
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 1851.788438
                privacy:
                  type: string
                  description: ''
                  example: quia
              required:
                - privacy
    delete:
      summary: 'Delete a resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - video
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '21911'
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
  -
    name: activitypoint
    description: ''
  -
    name: announcement
    description: ''
  -
    name: auth
    description: ''
  -
    name: background-status
    description: ''
  -
    name: blog
    description: ''
  -
    name: chatplus
    description: ''
  -
    name: comment
    description: ''
  -
    name: core
    description: ''
  -
    name: coreoo
    description: ''
  -
    name: event
    description: ''
  -
    name: feed
    description: ''
  -
    name: friend
    description: ''
  -
    name: group
    description: ''
  -
    name: like
    description: ''
  -
    name: marketplace
    description: ''
  -
    name: notification
    description: ''
  -
    name: report
    description: ''
  -
    name: saved
    description: ''
  -
    name: search
    description: ''
  -
    name: sticker
    description: ''
  -
    name: upload
    description: ''
  -
    name: user
    description: ''
  -
    name: user/account
    description: ''
  -
    name: user/shortcut
    description: ''
  -
    name: video
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
