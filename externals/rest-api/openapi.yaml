openapi: 3.0.3
info:
  title: 'MetaFox APIs'
  description: "Version: v5.1.7\nUpdated: Dec 08, 2023"
  version: 1.0.0
servers:
  -
    url: 'https://demo.metafox.app/api/v1'
paths:
  '/api/{ver}/activitypoint/conversion-request':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: possimus
                from_date:
                  type: string
                  description: ''
                  example: id
                to_date:
                  type: string
                  description: ''
                  example: autem
                limit:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 4
                id:
                  type: integer
                  description: ''
                  example: 9
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/conversion-request/{id}':
    get:
      summary: ''
      operationId: getApiVerActivitypointConversionRequestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: optio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the conversion request.'
        example: '971'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/conversion-request/{id}/cancel':
    patch:
      summary: ''
      operationId: patchApiVerActivitypointConversionRequestIdCancel
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the conversion request.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: query
          name: q
          description: 'search text'
          example: quidem
          required: false
          schema:
            type: string
            description: 'search text'
            example: quidem
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quasi
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: latest
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 5
                limit:
                  type: integer
                  description: ''
                  example: 7
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package-transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sequi
                status:
                  type: string
                  description: ''
                  example: cumque
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:58'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:58'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_discussed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 44
                limit:
                  type: integer
                  description: ''
                  example: 3
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package/purchase/{id}':
    post:
      summary: ''
      operationId: postApiVerActivitypointPackagePurchaseId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: integer
                  description: ''
                  example: 17
              required:
                - payment_gateway
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the purchase.'
        example: '1611'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the package.'
        example: '46'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/setting':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_viewed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/statistic/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: ''
                  example: 11
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:58'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:58'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_viewed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 82
                limit:
                  type: integer
                  description: ''
                  example: 2
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: similique
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/transaction/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 125.893949
                view:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: ''
                  example: ea
                end_date:
                  type: string
                  description: ''
                  example: facilis
                status:
                  type: string
                  description: ''
                  example: vel
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 36
                limit:
                  type: number
                  description: ''
                  example: 5.791684
      security: []
    post:
      summary: ''
      operationId: postApiVerAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 4.10666559
                image:
                  type: object
                  description: ''
                  example: []
                  properties:
                    status:
                      type: string
                      description: 'This field is required when <code>image.temp_file</code> is present.'
                      example: ut
                    temp_file:
                      type: number
                      description: 'This field is required when <code>image.id</code> is <code>0</code>.'
                      example: 5.4284
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://bode.com/'
                image_tooltip:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rvifxlph
                html_title:
                  type: string
                  description: 'This field is required when <code>creation_type</code> is <code>html</code>. Must not be greater than 25 characters.'
                  example: ejljdxgn
                html_description:
                  type: string
                  description: 'Must not be greater than 135 characters.'
                  example: bxhsrgyskmugldpvoshmjqt
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: klbvwxlldm
                total_click:
                  type: string
                  description: ''
                  example: null
                total_impression:
                  type: string
                  description: ''
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 3
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - recusandae
                  items:
                    type: string
                is_active:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:58'
                end_date:
                  type: string
                  description: ''
                  example: null
                creation_type:
                  type: string
                  description: ''
                  example: laboriosam
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - placement_id
                - image
                - url
                - title
                - start_date
                - creation_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/active/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '5547613'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/hide/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseHideId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/report/{id}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertiseReportId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_type:
                  type: string
                  description: ''
                  example: et
                view:
                  type: string
                  description: ''
                  example: consequuntur
                start_date_month:
                  type: string
                  description: ''
                  example: ab
                end_date_month:
                  type: string
                  description: ''
                  example: culpa
                start_date_week:
                  type: string
                  description: ''
                  example: perferendis
                end_date_week:
                  type: string
                  description: ''
                  example: qui
                start_date_day:
                  type: string
                  description: ''
                  example: sequi
                end_date_day:
                  type: string
                  description: ''
                  example: repellat
              required:
                - report_type
                - view
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the report.'
        example: '59'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/show':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertiseShow
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 288.031187
                location:
                  type: string
                  description: ''
                  example: suscipit
              required:
                - placement_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/total/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseTotalId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: velit
              required:
                - type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the total.'
        example: '32'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: ''
      operationId: putApiVerAdvertiseAdvertiseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: kcmufaxskcs
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: number
                  description: 'Must be at least 1.'
                  example: 19
                age_to:
                  type: number
                  description: ''
                  example: 61613.0
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - fugit
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the advertise.'
        example: '11838870'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: autem
                end_date:
                  type: string
                  description: ''
                  example: quam
                status:
                  type: string
                  description: ''
                  example: consequatur
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 26
                limit:
                  type: number
                  description: ''
                  example: 839.1
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: amet
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/change':
    post:
      summary: ''
      operationId: postApiVerAdvertiseInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 45031522.7
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 65
                item_type:
                  type: string
                  description: ''
                  example: voluptatem
                payment_gateway:
                  type: number
                  description: ''
                  example: 99502.3
              required:
                - item_id
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/payment':
    post:
      summary: ''
      operationId: postApiVerAdvertiseInvoicePayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 174106500.5
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 86
                item_type:
                  type: string
                  description: ''
                  example: amet
                payment_gateway:
                  type: number
                  description: ''
                  example: 133910.0030393
              required:
                - item_id
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: eos
                end_date:
                  type: string
                  description: ''
                  example: perferendis
                status:
                  type: string
                  description: ''
                  example: molestiae
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 42
                limit:
                  type: number
                  description: ''
                  example: 136.759
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: ypvlfzulx
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 56
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - ratione
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:58'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: expedita
                item_id:
                  type: integer
                  description: ''
                  example: 13
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 98
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/active/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseSponsorActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '5213431'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/feed':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: ykvuukzrgmhaip
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 70
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - dolorem
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:58'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: ut
                item_id:
                  type: integer
                  description: ''
                  example: 4
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 100
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/form/feed/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseSponsorFormFeedItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: itemType
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/form/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseSponsorFormItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iusto
        required: true
        schema:
          type: string
      -
        in: path
        name: itemType
        description: ''
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: ltegcgyvpkoyrmzzadbyg
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 20
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - eveniet
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '26'
        required: true
        schema:
          type: string
  '/api/{ver}/sponsor/total/click':
    post:
      summary: ''
      operationId: postApiVerSponsorTotalClick
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: voluptatibus
                item_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
  '/api/{ver}/sponsor/total/view':
    post:
      summary: ''
      operationId: postApiVerSponsorTotalView
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: animi
                item_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolore
        required: true
        schema:
          type: string
  '/api/{ver}/announcement':
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/{ver}/announcement/view':
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: announcement_id
          description: ''
          example: 170.22
          required: true
          schema:
            type: number
            description: ''
            example: 170.22
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    post:
      summary: 'Hide announcement.'
      operationId: hideAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                announcement_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
              required:
                - announcement_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
  '/api/{ver}/announcement/{id}':
    get:
      summary: 'View announcement.'
      operationId: viewAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the announcement.'
        example: '23322'
        required: true
        schema:
          type: string
  '/api/{ver}/attachment':
    post:
      summary: 'Upload attachment.'
      operationId: uploadAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: aliquid
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 8192 kilobytes.'
                item_type:
                  type: string
                  description: ''
                  example: dicta
                upload_type:
                  type: string
                  description: ''
                  example: qui
              required:
                - file
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
  '/api/{ver}/attachment/download/{id}':
    get:
      summary: 'Allow downloading resource.'
      operationId: allowDownloadingResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '7073'
        required: true
        schema:
          type: string
  '/api/{ver}/authorization/device':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  description: ''
                  example: porro
                device_id:
                  type: string
                  description: ''
                  example: ad
                device_uid:
                  type: string
                  description: ''
                  example: cum
                token_source:
                  type: string
                  description: ''
                  example: expedita
                platform:
                  type: string
                  description: ''
                  example: eligendi
                platform_version:
                  type: string
                  description: ''
                  example: accusamus
                extra:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - device_token
                - device_id
                - token_source
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/{ver}/blog':
    get:
      summary: 'Browse blog.'
      operationId: browseBlog
      description: ''
      parameters:
        -
          in: query
          name: q
          description: ''
          example: et
          required: false
          schema:
            type: string
            description: ''
            example: et
        -
          in: query
          name: view
          description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
          example: my_pending
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
            example: my_pending
        -
          in: query
          name: sort
          description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
          example: most_liked
          required: false
          schema:
            type: string
            description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
            example: most_liked
        -
          in: query
          name: sort_type
          description: 'Must be one of <code>desc</code> or <code>asc</code>.'
          example: asc
          required: false
          schema:
            type: string
            description: 'Must be one of <code>desc</code> or <code>asc</code>.'
            example: asc
        -
          in: query
          name: when
          description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
          example: this_month
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
            example: this_month
        -
          in: query
          name: category_id
          description: ''
          example: 15
          required: false
          schema:
            type: integer
            description: ''
            example: 15
        -
          in: query
          name: user_id
          description: 'The profile id to filter.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'The profile id to filter.'
            example: 0
        -
          in: query
          name: owner_id
          description: ''
          example: 5
          required: false
          schema:
            type: integer
            description: ''
            example: 5
        -
          in: query
          name: page
          description: 'Must be at least 1.'
          example: 21
          required: false
          schema:
            type: integer
            description: 'Must be at least 1.'
            example: 21
        -
          in: query
          name: limit
          description: ''
          example: 18
          required: false
          schema:
            type: integer
            description: ''
            example: 18
        -
          in: query
          name: is_featured
          description: ''
          example: null
          required: false
          schema:
            type: string
            description: ''
            example: null
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    post:
      summary: 'Create blog.'
      operationId: createBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: et
                categories:
                  type: array
                  description: ''
                  example:
                    - 1725.7
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 3884.9070464
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 2928.209170892
                text:
                  type: string
                  description: ''
                  example: dignissimos
                draft:
                  type: number
                  description: ''
                  example: 339259139.29
                tags:
                  type: array
                  description: ''
                  example:
                    - cupiditate
                  items:
                    type: string
                privacy:
                  type: string
                  description: ''
                  example: praesentium
                captcha:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - et
                  items:
                    type: number
              required:
                - title
                - text
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iste
        required: true
        schema:
          type: string
  '/api/{ver}/blog-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 374692.696
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 20
                q:
                  type: string
                  description: ''
                  example: dolorem
                level:
                  type: number
                  description: ''
                  example: 497753.58308508
                limit:
                  type: number
                  description: ''
                  example: 2285.05442649
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/blog/approve/{id}':
    patch:
      summary: 'Approve blog.'
      operationId: approveBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '89633'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/feature/{id}':
    patch:
      summary: 'Feature blog.'
      operationId: featureBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '50'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/form':
    get:
      summary: ''
      operationId: getApiVerBlogForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 573.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/blog/form/{id}':
    get:
      summary: ''
      operationId: getApiVerBlogFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 197194673.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: esse
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '25890'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/publish/{id}':
    patch:
      summary: 'Publish blog.'
      operationId: publishBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the publish.'
        example: '36'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/search-form':
    get:
      summary: 'Get search form.'
      operationId: getSearchForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
  '/api/{ver}/blog/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor blog in feed.'
      operationId: sponsorBlogInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 0.0
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/sponsor/{id}':
    patch:
      summary: 'Sponsor blog.'
      operationId: sponsorBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: eveniet
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/{id}':
    get:
      summary: 'View Blog.'
      operationId: viewBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    put:
      summary: 'Update blog.'
      operationId: updateBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: saepe
                categories:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 45
                  items:
                    type: integer
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 6742.9259109
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: harum
                text:
                  type: string
                  description: ''
                  example: ut
                tags:
                  type: array
                  description: ''
                  example:
                    - nihil
                  items:
                    type: string
                draft:
                  type: number
                  description: ''
                  example: 235679775.375
                published:
                  type: boolean
                  description: ''
                  example: false
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - ab
                  items:
                    type: number
    delete:
      summary: 'Delete blog.'
      operationId: deleteBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the blog.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/captcha/verify':
    post:
      summary: ''
      operationId: postApiVerCaptchaVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CAPTCHA
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                action_name:
                  type: string
                  description: ''
                  example: exercitationem
                captcha:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/image-captcha/refresh':
    post:
      summary: ''
      operationId: postApiVerImageCaptchaRefresh
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CAPTCHA
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/chat':
    get:
      summary: ''
      operationId: getApiVerChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                room_id:
                  type: number
                  description: ''
                  example: 195132.0
                last_message_id:
                  type: number
                  description: ''
                  example: 0.162
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 27
                limit:
                  type: integer
                  description: ''
                  example: 1
      security: []
    post:
      summary: ''
      operationId: postApiVerChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_id:
                  type: number
                  description: ''
                  example: 1043.56669
                message:
                  type: string
                  description: ''
                  example: aut
                type:
                  type: string
                  description: ''
                  example: nihil
                reply_id:
                  type: integer
                  description: ''
                  example: 10
                tempId:
                  type: string
                  description: ''
                  example: praesentium
                attachments:
                  type: array
                  description: ''
                  example:
                    - vel
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: a
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room':
    get:
      summary: ''
      operationId: getApiVerChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: id
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 32
                limit:
                  type: integer
                  description: ''
                  example: 4
      security: []
    post:
      summary: ''
      operationId: postApiVerChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                member_ids:
                  type: array
                  description: ''
                  example:
                    - 17.922829
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - reprehenderit
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/addForm':
    get:
      summary: ''
      operationId: getApiVerChatRoomAddForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/mark-all-read':
    put:
      summary: ''
      operationId: putApiVerChatRoomMarkAllRead
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_ids:
                  type: array
                  description: ''
                  example:
                    - 5.863
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/mark-read/{id}':
    put:
      summary: ''
      operationId: putApiVerChatRoomMarkReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the mark read.'
        example: '816954985'
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/{id}':
    get:
      summary: ''
      operationId: getApiVerChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the chat room.'
        example: '44'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/react/{id}':
    put:
      summary: ''
      operationId: putApiVerChatReactId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                react:
                  type: string
                  description: ''
                  example: consequatur
                remove:
                  type: boolean
                  description: ''
                  example: false
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the react.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/remove/{id}':
    put:
      summary: ''
      operationId: putApiVerChatRemoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove.'
        example: '887'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/{id}':
    get:
      summary: ''
      operationId: getApiVerChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    put:
      summary: ''
      operationId: putApiVerChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: quam
                type:
                  type: string
                  description: ''
                  example: ratione
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the chat.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/can-create-direct-message/{type}/{id_from}/{id_to}':
    get:
      summary: ''
      operationId: getApiVerChatplusCanCreateDirectMessageTypeId_fromId_to
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fuga
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id_from
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id_to
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/export-users':
    get:
      summary: ''
      operationId: getApiVerChatplusExportUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/jobs':
    get:
      summary: ''
      operationId: getApiVerChatplusJobs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/me':
    get:
      summary: ''
      operationId: getApiVerChatplusMe
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: mollitia
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/prefetch-users':
    get:
      summary: ''
      operationId: getApiVerChatplusPrefetchUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/rooms/upload/{room_id}':
    post:
      summary: ''
      operationId: postApiVerChatplusRoomsUploadRoom_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ''
                  example: sint
                roomId:
                  type: string
                  description: ''
                  example: fuga
                token:
                  type: string
                  description: ''
                  example: molestiae
                msg:
                  type: string
                  description: ''
                  example: ea
                file:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - userId
                - roomId
                - token
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: beatae
        required: true
        schema:
          type: string
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: soluta
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/settings':
    get:
      summary: ''
      operationId: getApiVerChatplusSettings
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/spotlight':
    get:
      summary: ''
      operationId: getApiVerChatplusSpotlight
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloribus
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/user/{type}/{query}':
    get:
      summary: ''
      operationId: getApiVerChatplusUserTypeQuery
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: query
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/{ver}/comment':
    get:
      summary: 'Browse comments.'
      operationId: browseComments
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 9.560734
                item_type:
                  type: string
                  description: ''
                  example: et
                parent_id:
                  type: number
                  description: ''
                  example: 5.712739
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 18
                limit:
                  type: number
                  description: ''
                  example: 407.62216
                sort:
                  type: string
                  description: ''
                  example: quo
                sort_type:
                  type: string
                  description: ''
                  example: nobis
                last_id:
                  type: number
                  description: ''
                  example: 16.82877
                excludes:
                  type: array
                  description: ''
                  example:
                    - 4487.0
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 17
              required:
                - item_id
                - item_type
    post:
      summary: 'Create comment.'
      operationId: createComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 13522102.018
                item_type:
                  type: string
                  description: ''
                  example: repudiandae
                text:
                  type: string
                  description: 'This field is required when none of <code>photo_id</code> and <code>sticker_id</code> are present.'
                  example: libero
                parent_id:
                  type: number
                  description: ''
                  example: 5221.792771
                photo_id:
                  type: number
                  description: ''
                  example: 499676.0
                sticker_id:
                  type: number
                  description: ''
                  example: 107.51954636
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/comment-lists':
    get:
      summary: ''
      operationId: getApiVerCommentLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 34.9157399
                item_type:
                  type: string
                  description: ''
                  example: rerum
                parent_id:
                  type: number
                  description: ''
                  example: 56.8115834
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 4247.3965031
                sort:
                  type: string
                  description: ''
                  example: earum
                sort_type:
                  type: string
                  description: ''
                  example: accusantium
                last_id:
                  type: number
                  description: ''
                  example: 1108.5
                excludes:
                  type: array
                  description: ''
                  example:
                    - 12941.0
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 14
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quos
        required: true
        schema:
          type: string
  '/api/{ver}/comment/approve/{id}':
    patch:
      summary: 'Approve comment.'
      operationId: approveComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '321'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/download/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentDownloadId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '783'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/hide':
    post:
      summary: ''
      operationId: postApiVerCommentHide
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: number
                  description: ''
                  example: 23041.63567
                is_hidden:
                  type: string
                  description: ''
                  example: nostrum
                is_global:
                  type: string
                  description: ''
                  example: null
              required:
                - comment_id
                - is_hidden
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/{ver}/comment/history-edit/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentHistoryEditId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the history edit.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/preview/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: '276090'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/related-comment':
    get:
      summary: ''
      operationId: getApiVerCommentRelatedComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 6304211.8762
                item_type:
                  type: string
                  description: ''
                  example: quia
                parent_id:
                  type: number
                  description: ''
                  example: 65102163.618949
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 46
                limit:
                  type: number
                  description: ''
                  example: 724222.514
                sort:
                  type: string
                  description: ''
                  example: voluptatum
                sort_type:
                  type: string
                  description: ''
                  example: in
                last_id:
                  type: number
                  description: ''
                  example: 22.744
                excludes:
                  type: array
                  description: ''
                  example:
                    - 4.1
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 5
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/comment/{id}':
    get:
      summary: 'View comment.'
      operationId: viewComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    put:
      summary: 'Update comment.'
      operationId: updateComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: vitae
                photo_id:
                  type: string
                  description: ''
                  example: null
                is_hide:
                  type: number
                  description: ''
                  example: 145259.6052129
                sticker_id:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Remove comment.'
      operationId: removeComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/{id}/remove-preview':
    patch:
      summary: ''
      operationId: patchApiVerCommentIdRemovePreview
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/contact':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ''
                  example: 11
                full_name:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: mz
                subject:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: ya
                email:
                  type: string
                  description: 'Must be a valid email address. Must be between 1 and 255 characters.'
                  example: hayes.terrell@example.org
                message:
                  type: string
                  description: ''
                  example: voluptatem
                send_copy:
                  type: integer
                  description: ''
                  example: 16
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - category_id
                - full_name
                - subject
                - email
                - message
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  '/api/{ver}/core/admin/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sit
  '/api/{ver}/core/custom-privacy-option':
    get:
      summary: ''
      operationId: getApiVerCoreCustomPrivacyOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: corporis
                item_id:
                  type: number
                  description: ''
                  example: 16.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 31
                limit:
                  type: number
                  description: ''
                  example: 25643037.02631
                sort:
                  type: string
                  description: ''
                  example: ut
                sort_type:
                  type: string
                  description: ''
                  example: eos
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/core/custom-privacy-option/form':
    get:
      summary: ''
      operationId: getApiVerCoreCustomPrivacyOptionForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/core/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getApiVerCoreFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: impedit
        required: true
        schema:
          type: string
      -
        in: path
        name: formName
        description: ''
        example: impedit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '498'
  '/api/{ver}/core/mobile/action-settings':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
  '/api/{ver}/core/mobile/app-settings':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
  '/api/{ver}/core/mobile/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getApiVerCoreMobileFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: formName
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '3725'
  '/api/{ver}/core/mobile/settings/{revision}':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: autem
  '/api/{ver}/core/package/build/callback':
    get:
      summary: ''
      operationId: getApiVerCorePackageBuildCallback
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildId:
                  type: string
                  description: ''
                  example: illo
              required:
                - buildId
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
  '/api/{ver}/core/status':
    get:
      summary: 'View user badge status.'
      operationId: viewUserBadgeStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
  '/api/{ver}/core/translation/{group}/{lang}/{revision}':
    get:
      summary: ''
      operationId: getApiVerCoreTranslationGroupLangRevision
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: group
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: lang
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: repellat
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: molestiae
  '/api/{ver}/core/url-to-route':
    get:
      summary: 'Get canonical URL.'
      operationId: getCanonicalURL
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ''
                  example: distinctio
              required:
                - url
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: beatae
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/action-settings':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellat
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/app-settings':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ut
  '/api/{ver}/file':
    post:
      summary: 'Upload single.'
      operationId: uploadSingle
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: magnam
                file:
                  type: string
                  description: ''
                  example: et
                file_type:
                  type: string
                  description: ''
                  example: veniam
                item_type:
                  type: string
                  description: ''
                  example: id
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - veritatis
                  items:
                    type: string
                base64:
                  type: string
                  description: ''
                  example: nihil
              required:
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
  '/api/{ver}/files':
    post:
      summary: 'Upload multiple file.'
      operationId: uploadMultipleFile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: atque
                0:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: et
                upload_type:
                  type: string
                  description: ''
                  example: inventore
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - minima
                  items:
                    type: string
                file:
                  type: array
                  description: ''
                  example:
                    - illo
                  items:
                    type: string
              required:
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/link/fetch':
    post:
      summary: 'View link.'
      operationId: viewLink
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - link
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odit
        required: true
        schema:
          type: string
  '/api/{ver}/ping':
    get:
      summary: ''
      operationId: getApiVerPing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                from_date:
                  type: string
                  description: ''
                  example: dolores
                to_date:
                  type: string
                  description: ''
                  example: nam
                status:
                  type: string
                  description: ''
                  example: null
                id:
                  type: integer
                  description: ''
                  example: 7
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEmoneyRequestCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '693'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request/{id}':
    get:
      summary: ''
      operationId: getApiVerEmoneyRequestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '892111'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/statistic/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '03'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                base_currency:
                  type: string
                  description: ''
                  example: quis
                status:
                  type: string
                  description: ''
                  example: null
                from_date:
                  type: string
                  description: ''
                  example: reiciendis
                to_date:
                  type: string
                  description: ''
                  example: suscipit
                buyer:
                  type: string
                  description: ''
                  example: aut
                id:
                  type: integer
                  description: ''
                  example: 11
                source:
                  type: string
                  description: ''
                  example: adipisci
                type:
                  type: string
                  description: ''
                  example: sed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/transaction/{id}':
    get:
      summary: ''
      operationId: getApiVerEmoneyTransactionId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/event':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptatum
                view:
                  type: string
                  description: ''
                  example: est
                sort:
                  type: string
                  description: ''
                  example: minus
                sort_type:
                  type: string
                  description: ''
                  example: impedit
                when:
                  type: string
                  description: ''
                  example: cupiditate
                category_id:
                  type: number
                  description: ''
                  example: 128.3963829
                user_id:
                  type: number
                  description: ''
                  example: 29.539
                owner_id:
                  type: integer
                  description: ''
                  example: 12
                event_id:
                  type: number
                  description: ''
                  example: 80808.1246
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 63
                where:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: wpjrpenluq
                lat:
                  type: number
                  description: ''
                  example: 4.5649762
                lng:
                  type: number
                  description: ''
                  example: 2531.92028617
                radius:
                  type: number
                  description: 'Must be at least 1.'
                  example: 69
                limit:
                  type: number
                  description: ''
                  example: 1269174.774844
                is_online:
                  type: number
                  description: ''
                  example: 77.03628
                is_featured:
                  type: number
                  description: ''
                  example: 236357.1958672
                bounds_west:
                  type: number
                  description: ''
                  example: 107.448992
                bounds_east:
                  type: number
                  description: ''
                  example: 790049.098563
                bounds_south:
                  type: number
                  description: ''
                  example: 13367469.518916
                bounds_north:
                  type: number
                  description: ''
                  example: 425.731
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                text:
                  type: string
                  description: ''
                  example: eum
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    file_type:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: ipsa
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 1373.3285
                attachments:
                  type: array
                  description: ''
                  example:
                    - sint
                  items:
                    type: number
                categories:
                  type: array
                  description: ''
                  example:
                    - 37.37077682
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 1689.95521696
                is_online:
                  type: number
                  description: ''
                  example: 20.141999
                event_url:
                  type: string
                  description: 'This field is required when <code>is_online</code> is <code>1</code>.  Must be a valid URL.'
                  example: 'http://www.ortiz.com/voluptatem-illo-ut-iste.html'
                start_time:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>end_time</code>.'
                  example: '2019-06-26'
                end_time:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_time</code>.'
                  example: '2056-02-06'
                location:
                  type: object
                  description: 'This field is required when <code>is_online</code> is <code>0</code>.'
                  example: null
                  properties: []
                privacy:
                  type: string
                  description: ''
                  example: ut
                host:
                  type: object
                  description: ''
                  example: null
                  properties: []
                image_position:
                  type: string
                  description: ''
                  example: recusandae
              required:
                - name
                - is_online
                - start_time
                - end_time
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: commodi
        required: true
        schema:
          type: string
  '/api/{ver}/event-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 6119834.58
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 76
                q:
                  type: string
                  description: ''
                  example: unde
                level:
                  type: number
                  description: ''
                  example: 158603173.55576
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 86
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ad
        required: true
        schema:
          type: string
  '/api/{ver}/event-code':
    post:
      summary: ''
      operationId: postApiVerEventCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 5136.074846
                refresh:
                  type: integer
                  description: ''
                  example: 10
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quae
        required: true
        schema:
          type: string
  '/api/{ver}/event-code/accept/{code}':
    post:
      summary: ''
      operationId: postApiVerEventCodeAcceptCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/event-code/verify/{code}':
    get:
      summary: ''
      operationId: getApiVerEventCodeVerifyCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloribus
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: tempore
        required: true
        schema:
          type: string
  '/api/{ver}/event-host-invite':
    put:
      summary: ''
      operationId: putApiVerEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 6.838471285
                accept:
                  type: number
                  description: ''
                  example: 3.0
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 15117.28
                user_id:
                  type: string
                  description: ''
                  example: modi
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getApiVerEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 4331.8
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                limit:
                  type: number
                  description: ''
                  example: 15138.771577612
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 163329438.0
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 5.4890532
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - velit
                  items:
                    type: number
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
  '/api/{ver}/event-invite':
    put:
      summary: ''
      operationId: putApiVerEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 99700950.7
                accept:
                  type: number
                  description: ''
                  example: 11980544.964611
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 197.6288
                user_id:
                  type: string
                  description: ''
                  example: est
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getApiVerEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 5106.91
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 38
                limit:
                  type: number
                  description: ''
                  example: 581605609.336
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 26713.575
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 3672489.309
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - delectus
                  items:
                    type: number
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/event-member':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                event_id:
                  type: number
                  description: ''
                  example: 929.9
                view:
                  type: string
                  description: ''
                  example: qui
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 35
                limit:
                  type: number
                  description: ''
                  example: 52369043.72
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 226.31814
                invite_code:
                  type: string
                  description: ''
                  example: optio
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/host':
    delete:
      summary: ''
      operationId: deleteApiVerEventMemberHost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3722.0
                user_id:
                  type: number
                  description: ''
                  example: 0.16
              required:
                - event_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/interest/{id}':
    put:
      summary: ''
      operationId: putApiVerEventMemberInterestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest:
                  type: number
                  description: ''
                  example: 4.0
                invite_code:
                  type: string
                  description: ''
                  example: harum
              required:
                - interest
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the interest.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/member':
    delete:
      summary: ''
      operationId: deleteApiVerEventMemberMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3333.9
                user_id:
                  type: number
                  description: ''
                  example: 2887.905
              required:
                - event_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event member.'
        example: '61'
        required: true
        schema:
          type: string
  '/api/{ver}/event/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '817'
        required: true
        schema:
          type: string
  '/api/{ver}/event/banner/{id}':
    post:
      summary: ''
      operationId: postApiVerEventBannerId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 37.86
                position:
                  type: string
                  description: ''
                  example: natus
    delete:
      summary: ''
      operationId: deleteApiVerEventBannerId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the banner.'
        example: '96261207'
        required: true
        schema:
          type: string
  '/api/{ver}/event/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/event/setting/form/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempora
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/event/setting/{id}':
    put:
      summary: ''
      operationId: putApiVerEventSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 11115419.917134
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: '74257'
        required: true
        schema:
          type: string
  '/api/{ver}/event/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor event in feed.'
      operationId: sponsorEventInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 100191.218
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '11'
        required: true
        schema:
          type: string
  '/api/{ver}/event/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: voluptatibus
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '06'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: est
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '837814729'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/mass-email':
    post:
      summary: ''
      operationId: postApiVerEventIdMassEmail
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: ''
                  example: facilis
                text:
                  type: string
                  description: ''
                  example: voluptatem
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/stats':
    get:
      summary: ''
      operationId: getApiVerEventIdStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '74155032'
        required: true
        schema:
          type: string
  '/api/{ver}/feed':
    get:
      summary: 'Browse feed item.'
      operationId: browseFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: nihil
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 77
                limit:
                  type: number
                  description: ''
                  example: 410687670.4769
                user_id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 61
                item_id:
                  type: number
                  description: ''
                  example: 2.0
                item_type:
                  type: string
                  description: ''
                  example: laboriosam
                hashtag:
                  type: string
                  description: ''
                  example: null
                last_feed_id:
                  type: number
                  description: ''
                  example: 24.4
                related_comment_friend_only:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
                view:
                  type: string
                  description: ''
                  example: aspernatur
                from:
                  type: string
                  description: ''
                  example: quas
                type_id:
                  type: string
                  description: ''
                  example: laudantium
                sort:
                  type: string
                  description: ''
                  example: fugit
                sort_type:
                  type: string
                  description: ''
                  example: quia
                status:
                  type: string
                  description: ''
                  example: nisi
                is_preview_tag:
                  type: string
                  description: ''
                  example: null
                has_pin_post:
                  type: string
                  description: ''
                  example: null
                sponsored_feed_ids:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 48
                  items:
                    type: integer
    post:
      summary: 'Create feed.'
      operationId: createFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: odit
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 79
                parent_item_id:
                  type: string
                  description: ''
                  example: null
                post_as_parent:
                  type: string
                  description: ''
                  example: null
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: quas
                    lat:
                      type: number
                      description: ''
                      example: 6854.96006869
                    lng:
                      type: number
                      description: ''
                      example: 76.6246
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 559913138.3
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 7160018.03
                      px:
                        type: number
                        description: ''
                        example: 20857.1
                      py:
                        type: number
                        description: ''
                        example: 60358.0
              required:
                - post_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: modi
        required: true
        schema:
          type: string
  '/api/{ver}/feed/allow-preview/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedAllowPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_allowed:
                  type: string
                  description: ''
                  example: est
              required:
                - is_allowed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ex
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the allow preview.'
        example: '649'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/approve/{id}':
    patch:
      summary: 'Approve pending post.'
      operationId: approvePendingPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestias
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/archive/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedArchiveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the archive.'
        example: '755'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/check-new':
    get:
      summary: ''
      operationId: getApiVerFeedCheckNew
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_feed_id:
                  type: number
                  description: ''
                  example: 138110.50206
                last_pin_feed_id:
                  type: number
                  description: ''
                  example: 73.37
                last_sponsored_feed_id:
                  type: number
                  description: ''
                  example: 0.823015
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/feed/create':
    get:
      summary: 'hot fix because of /api/v1/feed/create crashed.'
      operationId: hotFixBecauseOfapiv1feedcreateCrashed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
  '/api/{ver}/feed/decline/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedDeclineId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_block_author:
                  type: string
                  description: ''
                  example: null
                delete_activities:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the decline.'
        example: '91'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/edit/{id}':
    get:
      summary: 'Get status for edit.'
      operationId: getStatusForEdit
      description: 'GET: feed/edit/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: '38'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hidden':
    get:
      summary: 'Browse snooze.'
      operationId: browseSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 16
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
                limit:
                  type: number
                  description: ''
                  example: 276313.0
                type:
                  type: string
                  description: 'Must be one of <code>friend</code>, <code>page</code>, or <code>group</code>.'
                  example: page
                q:
                  type: string
                  description: ''
                  example: debitis
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hidden/{id}':
    delete:
      summary: 'Remove snooze.'
      operationId: removeSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hidden.'
        example: '43'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hide-all/{id}':
    post:
      summary: 'Hide a user.'
      operationId: hideAUser
      description: 'POST: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'UnHide a user.'
      operationId: unHideAUser
      description: 'DELETE: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide all.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hide-feed/{id}':
    post:
      summary: 'Hide a feed.'
      operationId: hideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Hide a feed.'
      operationId: unHideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide feed.'
        example: '4171346'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/history/{id}':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the history.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/pin/{id}':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 4
              required:
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '1950'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/pin/{id}/home':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/post-type':
    get:
      summary: 'Get post types.'
      operationId: getPostTypes
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/feed/privacy/{id}':
    patch:
      summary: 'Update feed privacy.'
      operationId: updateFeedPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: quos
              required:
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '0516'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/share':
    post:
      summary: 'Share feed item.'
      operationId: shareFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_status:
                  type: string
                  description: ''
                  example: maxime
                post_type:
                  type: string
                  description: ''
                  example: quia
                item_id:
                  type: number
                  description: ''
                  example: 76854.78854309
                item_type:
                  type: string
                  description: ''
                  example: officia
                context_item_id:
                  type: number
                  description: ''
                  example: 985.0
                context_item_type:
                  type: string
                  description: ''
                  example: ad
                type_id:
                  type: string
                  description: ''
                  example: et
                post_content:
                  type: string
                  description: ''
                  example: veritatis
                parent_feed_id:
                  type: number
                  description: ''
                  example: 69472409.049043
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: consequuntur
                    lat:
                      type: number
                      description: ''
                      example: 66675110.871
                    lng:
                      type: number
                      description: ''
                      example: 6.35661708
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 442008.64544891
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 18.0
                      px:
                        type: number
                        description: ''
                        example: 1102481.1771218
                      py:
                        type: number
                        description: ''
                        example: 135.262356191
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/{ver}/feed/share/form':
    get:
      summary: 'View share form.'
      operationId: viewShareForm
      description: 'GET: feed/share/form'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/feed/snooze/{id}':
    post:
      summary: 'Snooze a user.'
      operationId: snoozeAUser
      description: 'POST: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Snooze a user.'
      operationId: unSnoozeAUser
      description: 'DELETE: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the snooze.'
        example: '9713131'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/tag/{id}':
    delete:
      summary: 'Remove tag.'
      operationId: removeTag
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/tagged-friend':
    get:
      summary: 'Get tagged friends.'
      operationId: getTaggedFriends
      description: 'GET: /feed/tagged-friend'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 87
                limit:
                  type: number
                  description: ''
                  example: 2.05107682
                item_id:
                  type: number
                  description: ''
                  example: 304286524.2
                item_type:
                  type: string
                  description: ''
                  example: eos
                excluded_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: alias
        required: true
        schema:
          type: string
  '/api/{ver}/feed/unpin/{id}':
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/unpin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 12
              required:
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the unpin.'
        example: '58'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/{id}':
    get:
      summary: 'View feed item.'
      operationId: viewFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    put:
      summary: 'Update feed item.'
      operationId: updateFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: ducimus
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 73
                parent_item_id:
                  type: integer
                  description: ''
                  example: 7
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: quas
                    lat:
                      type: number
                      description: ''
                      example: 2.0
                    lng:
                      type: number
                      description: ''
                      example: 47.545
                tagged_friends:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 263018954.2127
                      px:
                        type: number
                        description: ''
                        example: 5.75505
                      py:
                        type: number
                        description: ''
                        example: 547787.6
              required:
                - post_type
    delete:
      summary: 'Delete feed item.'
      operationId: deleteFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feed.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/follow':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptatem
                view:
                  type: string
                  description: ''
                  example: autem
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>following</code>.'
                  example: 12893076.119672
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 88
                limit:
                  type: number
                  description: ''
                  example: 63347045.900466
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 89531948.085
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
  '/api/{ver}/follow/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the follow.'
        example: '2697001'
        required: true
        schema:
          type: string
  '/api/{ver}/forum':
    get:
      summary: ''
      operationId: getApiVerForum
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 193566.6109
                view:
                  type: string
                  description: ''
                  example: blanditiis
                forum_id:
                  type: number
                  description: ''
                  example: 90.7
                q:
                  type: string
                  description: ''
                  example: at
                sort:
                  type: string
                  description: ''
                  example: aut
                sort_thread:
                  type: string
                  description: ''
                  example: culpa
                sort_post:
                  type: string
                  description: ''
                  example: dolorum
                sort_type:
                  type: string
                  description: ''
                  example: veniam
                when:
                  type: string
                  description: ''
                  example: ut
                item_type:
                  type: string
                  description: ''
                  example: eum
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 67
                limit:
                  type: number
                  description: ''
                  example: 1440054.8
                parent_id:
                  type: number
                  description: ''
                  example: 14.01207603
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestias
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 105.6
                q:
                  type: string
                  description: ''
                  example: doloremque
                view:
                  type: string
                  description: ''
                  example: necessitatibus
                sort:
                  type: string
                  description: ''
                  example: aliquam
                sort_type:
                  type: string
                  description: ''
                  example: necessitatibus
                when:
                  type: string
                  description: ''
                  example: aut
                thread_id:
                  type: number
                  description: ''
                  example: 748572.633595
                post_id:
                  type: number
                  description: ''
                  example: 50861.527311942
                forum_id:
                  type: number
                  description: ''
                  example: 8582798.01748
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 35
                limit:
                  type: number
                  description: ''
                  example: 36259.978354344
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: number
                  description: ''
                  example: 24933.2541
                owner_id:
                  type: number
                  description: ''
                  example: 209.576725
                text:
                  type: string
                  description: ''
                  example: est
                attachments:
                  type: array
                  description: ''
                  example:
                    - autem
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - thread_id
                - text
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumPostApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '00'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumPostFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 46312.256118
                thread_id:
                  type: number
                  description: ''
                  example: 422844.0493512
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0'
  '/api/{ver}/forum-post/posters':
    get:
      summary: ''
      operationId: getApiVerForumPostPosters
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: string
                  description: ''
                  example: ab
              required:
                - thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ex
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/quote':
    post:
      summary: ''
      operationId: postApiVerForumPostQuote
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote_id:
                  type: number
                  description: ''
                  example: 4010735.06
                text:
                  type: string
                  description: ''
                  example: beatae
                attachments:
                  type: array
                  description: ''
                  example:
                    - qui
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - quote_id
                - text
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/quote/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumPostQuoteFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: amet
                attachments:
                  type: array
                  description: ''
                  example:
                    - esse
                  items:
                    type: number
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum post.'
        example: '776'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-subs/{id}':
    get:
      summary: ''
      operationId: getApiVerForumSubsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum sub.'
        example: '8330'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 1
                user_id:
                  type: number
                  description: ''
                  example: 9480.36859
                q:
                  type: string
                  description: ''
                  example: quaerat
                view:
                  type: string
                  description: ''
                  example: consequuntur
                sort:
                  type: string
                  description: ''
                  example: sed
                sort_type:
                  type: string
                  description: ''
                  example: dolor
                when:
                  type: string
                  description: ''
                  example: provident
                forum_id:
                  type: number
                  description: ''
                  example: 3977591.907
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 3
                limit:
                  type: number
                  description: ''
                  example: 1.435
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '65'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/close/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadCloseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_closed:
                  type: string
                  description: ''
                  example: dolores
              required:
                - is_closed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the close.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/copy':
    post:
      summary: ''
      operationId: postApiVerForumThreadCopy
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 0.593395
                title:
                  type: string
                  description: 'Must be between  3 and 155 characters.'
                  example: ulo
                thread_id:
                  type: number
                  description: ''
                  example: 261.3
              required:
                - forum_id
                - title
                - thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/copy/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadCopyFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/last-read/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadLastReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 72
              required:
                - post_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the last read.'
        example: '23'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/merge':
    post:
      summary: ''
      operationId: postApiVerForumThreadMerge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 3.499606861
                current_thread_id:
                  type: number
                  description: ''
                  example: 0.92738
                merged_thread_id:
                  type: number
                  description: ''
                  example: 0.0
              required:
                - forum_id
                - current_thread_id
                - merged_thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/merge/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadMergeFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/move/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadMoveFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/move/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadMoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 67212.22
              required:
                - forum_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the move.'
        example: '979'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor thread in feed.'
      operationId: sponsorThreadInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 509274400.46244
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '329'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: voluptates
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '73'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/stick/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadStickId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_sticked:
                  type: string
                  description: ''
                  example: repellendus
              required:
                - is_sticked
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptates
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the stick.'
        example: '752'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/subscribe/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadSubscribeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_subscribed:
                  type: string
                  description: ''
                  example: accusantium
              required:
                - is_subscribed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscribe.'
        example: '5693'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/suggestion-search':
    get:
      summary: ''
      operationId: getApiVerForumThreadSuggestionSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 5
                user_id:
                  type: number
                  description: ''
                  example: 270.726
                q:
                  type: string
                  description: ''
                  example: animi
                view:
                  type: string
                  description: ''
                  example: amet
                sort:
                  type: string
                  description: ''
                  example: perspiciatis
                sort_type:
                  type: string
                  description: ''
                  example: molestias
                when:
                  type: string
                  description: ''
                  example: consectetur
                forum_id:
                  type: number
                  description: ''
                  example: 38.103231
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 36
                limit:
                  type: number
                  description: ''
                  example: 27750.2826
                exclude_thread_ids:
                  type: string
                  description: ''
                  example: laboriosam
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magnam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum thread.'
        example: '129'
        required: true
        schema:
          type: string
  '/api/{ver}/forum/option':
    get:
      summary: ''
      operationId: getApiVerForumOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 61292.7178097
                view:
                  type: string
                  description: ''
                  example: sed
                forum_id:
                  type: number
                  description: ''
                  example: 894149746.63793
                q:
                  type: string
                  description: ''
                  example: vitae
                sort:
                  type: string
                  description: ''
                  example: minima
                sort_thread:
                  type: string
                  description: ''
                  example: eum
                sort_post:
                  type: string
                  description: ''
                  example: tempora
                sort_type:
                  type: string
                  description: ''
                  example: dicta
                when:
                  type: string
                  description: ''
                  example: et
                item_type:
                  type: string
                  description: ''
                  example: alias
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 65
                limit:
                  type: number
                  description: ''
                  example: 18040673.503
                parent_id:
                  type: number
                  description: ''
                  example: 75.19015732
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempora
        required: true
        schema:
          type: string
  '/api/{ver}/friend':
    get:
      summary: 'Browse friends.'
      operationId: browseFriends
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: illo
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: mutual
                sort:
                  type: string
                  description: ''
                  example: omnis
                sort_type:
                  type: string
                  description: ''
                  example: pariatur
                when:
                  type: string
                  description: ''
                  example: esse
                list_id:
                  type: number
                  description: ''
                  example: 3299.26423551
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 394.7137278
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 39
                limit:
                  type: number
                  description: ''
                  example: 623.9
                owner_id:
                  type: number
                  description: ''
                  example: 159052448.73223
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 19600.9
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
  '/api/{ver}/friend/birthday':
    get:
      summary: 'Get birthday.'
      operationId: getBirthday
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 43
                month:
                  type: number
                  description: 'Must be at least 1.'
                  example: 52
                view:
                  type: string
                  description: ''
                  example: officia
                limit:
                  type: number
                  description: ''
                  example: 22832.5
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
  '/api/{ver}/friend/invite-to-item':
    get:
      summary: ''
      operationId: getApiVerFriendInviteToItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 28294205.0
                user_id:
                  type: number
                  description: ''
                  example: 3250310.0555081
                item_type:
                  type: string
                  description: ''
                  example: eos
                item_id:
                  type: number
                  description: ''
                  example: 790965035.59578
                q:
                  type: string
                  description: ''
                  example: similique
              required:
                - owner_id
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/friend/invite-to-owner':
    get:
      summary: 'Invite friend.'
      operationId: inviteFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: asperiores
                privacy_type:
                  type: string
                  description: ''
                  example: error
                owner_id:
                  type: number
                  description: ''
                  example: 105.82997
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 13
                limit:
                  type: number
                  description: ''
                  example: 1.44
                parent_id:
                  type: number
                  description: ''
                  example: 1.0
              required:
                - privacy_type
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list':
    get:
      summary: 'Browse friend lists.'
      operationId: browseFriendLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 22
                limit:
                  type: number
                  description: ''
                  example: 5355.38073
                sort:
                  type: string
                  description: ''
                  example: hic
                sort_type:
                  type: string
                  description: ''
                  example: neque
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/add-friend/{id}':
    post:
      summary: 'Add friend list.'
      operationId: addFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    put:
      summary: ''
      operationId: putApiVerFriendListAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '576679'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/assign/{id}':
    get:
      summary: 'Assign friend to list.'
      operationId: assignFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    post:
      summary: 'Assign multiple friend to list.'
      operationId: assignMultipleFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the assign.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/create':
    get:
      summary: ''
      operationId: getApiVerFriendListCreate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/{id}':
    get:
      summary: 'View friend list.'
      operationId: viewFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    put:
      summary: 'Update friend list.'
      operationId: updateFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: kxbtat
              required:
                - name
    delete:
      summary: 'Remove friend list.'
      operationId: removeFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: debitis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the list.'
        example: '357'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/{list}/edit':
    get:
      summary: ''
      operationId: getApiVerFriendListListEdit
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: list
        description: 'The list.'
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/friend/mention':
    get:
      summary: 'Load mentions.'
      operationId: loadMentions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quaerat
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: latest
                sort:
                  type: string
                  description: ''
                  example: praesentium
                sort_type:
                  type: string
                  description: ''
                  example: pariatur
                when:
                  type: string
                  description: ''
                  example: tempore
                list_id:
                  type: number
                  description: ''
                  example: 30895722.68
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 126179.60135361
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                limit:
                  type: number
                  description: ''
                  example: 3535.82
                owner_id:
                  type: number
                  description: ''
                  example: 0.075567
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 594495066.65411
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request':
    get:
      summary: 'Browse friend request.'
      operationId: browseFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: aliquid
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 46
                limit:
                  type: number
                  description: ''
                  example: 86534.6
    post:
      summary: 'Create friend request.'
      operationId: createFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friend_user_id:
                  type: number
                  description: ''
                  example: 2030.355225
              required:
                - friend_user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request/markAllAsRead':
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: error
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request/{id}':
    put:
      summary: 'Update friend request.'
      operationId: updateFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: perferendis
              required:
                - action
    delete:
      summary: 'Remove friend request.'
      operationId: removeFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerFriendShareSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: id
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: mutual
                sort:
                  type: string
                  description: ''
                  example: consequuntur
                sort_type:
                  type: string
                  description: ''
                  example: totam
                when:
                  type: string
                  description: ''
                  example: aspernatur
                list_id:
                  type: number
                  description: ''
                  example: 1461048.211
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 224527576.4304
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 77
                limit:
                  type: number
                  description: ''
                  example: 21460976.56304
                owner_id:
                  type: number
                  description: ''
                  example: 26475996.320147
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 266630036.03
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/friend/suggestion':
    get:
      summary: 'Load suggestion.'
      operationId: loadSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 30
                limit:
                  type: number
                  description: ''
                  example: 55692.3948
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/friend/suggestion/hide-user':
    post:
      summary: 'Hide user suggestions.'
      operationId: hideUserSuggestions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 12239794.8
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minima
        required: true
        schema:
          type: string
  '/api/{ver}/friend/tag-suggestion':
    get:
      summary: 'Load friend suggestion for tagging.'
      operationId: loadFriendSuggestionForTagging
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: iure
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 52
                limit:
                  type: number
                  description: ''
                  example: 732942688.6
                item_id:
                  type: number
                  description: ''
                  example: 24087.923
                item_type:
                  type: string
                  description: ''
                  example: sit
                owner_id:
                  type: number
                  description: ''
                  example: 9063392.0561001
                excluded_ids:
                  type: array
                  description: ''
                  example:
                    - 35752.83022913
                  items:
                    type: number
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/friend/{id}':
    delete:
      summary: 'Remove friend.'
      operationId: removeFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magnam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the friend.'
        example: '16'
        required: true
        schema:
          type: string
  '/api/{ver}/group':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aliquid
                view:
                  type: string
                  description: ''
                  example: consequatur
                sort:
                  type: string
                  description: ''
                  example: natus
                sort_type:
                  type: string
                  description: ''
                  example: et
                when:
                  type: string
                  description: ''
                  example: recusandae
                type_id:
                  type: number
                  description: ''
                  example: 56807.361864135
                category_id:
                  type: number
                  description: ''
                  example: 560306721.52914
                owner_id:
                  type: integer
                  description: ''
                  example: 16
                user_id:
                  type: number
                  description: ''
                  example: 156322.7
                is_featured:
                  type: number
                  description: ''
                  example: 2107.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 76
                limit:
                  type: number
                  description: ''
                  example: 4995245.604
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ab
                category_id:
                  type: number
                  description: ''
                  example: 255.320764373
                reg_method:
                  type: number
                  description: ''
                  example: 1807197.0
                text:
                  type: string
                  description: ''
                  example: expedita
                users:
                  type: array
                  description: ''
                  example:
                    - enim
                  items:
                    type: number
              required:
                - name
                - reg_method
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
  '/api/{ver}/group-announcement':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 584765629.44254
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                limit:
                  type: number
                  description: ''
                  example: 1.0
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 6290.16550944
                item_id:
                  type: number
                  description: ''
                  example: 0.34
                item_type:
                  type: string
                  description: ''
                  example: libero
              required:
                - group_id
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 197125.1021688
                item_id:
                  type: number
                  description: ''
                  example: 15.0
                item_type:
                  type: string
                  description: ''
                  example: at
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestias
        required: true
        schema:
          type: string
  '/api/{ver}/group-announcement/hide':
    post:
      summary: ''
      operationId: postApiVerGroupAnnouncementHide
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 1029.8
                ann_id:
                  type: number
                  description: ''
                  example: 544043.0366167
              required:
                - group_id
                - ann_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rem
        required: true
        schema:
          type: string
  '/api/{ver}/group-block':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.0
                q:
                  type: string
                  description: ''
                  example: expedita
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 74
                limit:
                  type: number
                  description: ''
                  example: 73303.0
              required:
                - group_id
      security: []
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 11016.07
                user_id:
                  type: number
                  description: ''
                  example: 164880.9
                delete_activities:
                  type: number
                  description: ''
                  example: 168259015.09178
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minus
        required: true
        schema:
          type: string
  '/api/{ver}/group-block/{id}':
    get:
      summary: 'View item'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    put:
      summary: 'Update item'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    delete:
      summary: 'Delete item'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 294175.88498278
                user_id:
                  type: number
                  description: ''
                  example: 273341.0
                delete_activities:
                  type: number
                  description: ''
                  example: 19.744967
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group block.'
        example: '55142'
        required: true
        schema:
          type: string
  '/api/{ver}/group-info/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: expedita
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group info.'
        example: '8914'
        required: true
        schema:
          type: string
  '/api/{ver}/group-integrated/order':
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 7.0
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/group-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: placeat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group integrated.'
        example: '8518'
        required: true
        schema:
          type: string
  '/api/{ver}/group-invite':
    get:
      summary: 'Browse group invitation.'
      operationId: browseGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 3471692.648201
                q:
                  type: string
                  description: ''
                  example: tempora
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 29
                limit:
                  type: number
                  description: ''
                  example: 32372.62968
              required:
                - group_id
    post:
      summary: 'Store group invitation.'
      operationId: storeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 286055.7354
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - group_id
                - user_ids
    put:
      summary: 'Update group invitation.'
      operationId: updateGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 548427.842
                invite_code:
                  type: string
                  description: ''
                  example: aut
                accept:
                  type: number
                  description: ''
                  example: 637476087.17761
              required:
                - group_id
                - accept
    delete:
      summary: 'Remove group invitation.'
      operationId: removeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 1122366.54397
                user_id:
                  type: string
                  description: ''
                  example: in
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
  '/api/{ver}/group-member':
    get:
      summary: 'Browse group members.'
      operationId: browseGroupMembers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                group_id:
                  type: number
                  description: ''
                  example: 38230112.703997
                view:
                  type: string
                  description: ''
                  example: aliquam
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                limit:
                  type: number
                  description: ''
                  example: 13250.21
                not_invite_role:
                  type: number
                  description: ''
                  example: 21378.82
                excluded_user_id:
                  type: number
                  description: ''
                  example: 8111135.8901083
              required:
                - group_id
    post:
      summary: 'Create group member.'
      operationId: createGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 3938.289023
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/add-group-admin':
    post:
      summary: 'Add group admin.'
      operationId: addGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 3074.0
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 66.355892348
                  items:
                    type: number
              required:
                - group_id
                - user_ids
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/add-group-moderator':
    post:
      summary: 'Add group moderators.'
      operationId: addGroupModerators
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 490.523
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 274825840.0
                  items:
                    type: number
              required:
                - group_id
                - user_ids
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/cancel-invite':
    delete:
      summary: ''
      operationId: deleteApiVerGroupMemberCancelInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 30440.0
                user_id:
                  type: number
                  description: ''
                  example: 5.222
                invite_type:
                  type: string
                  description: ''
                  example: numquam
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/change-to-moderator':
    put:
      summary: 'Change to moderator.'
      operationId: changeToModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 27.4638
                user_id:
                  type: number
                  description: ''
                  example: 232.36
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/reassign-owner':
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 30805407.242
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 16.3
                users:
                  type: array
                  description: ''
                  example:
                    - et
                  items:
                    type: number
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fuga
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-admin':
    delete:
      summary: 'Remove group admin.'
      operationId: removeGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 825361.6586065
                user_id:
                  type: number
                  description: ''
                  example: 3.0
                is_delete:
                  type: number
                  description: ''
                  example: 2366400.195
              required:
                - group_id
                - user_id
                - is_delete
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-member':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 715740322.902
                user_id:
                  type: number
                  description: ''
                  example: 39.058063561
                delete_activities:
                  type: number
                  description: ''
                  example: 1737.0
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-moderator':
    delete:
      summary: 'Remove group moderator.'
      operationId: removeGroupModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 1312440.68297
                user_id:
                  type: number
                  description: ''
                  example: 677.3
                is_delete:
                  type: number
                  description: ''
                  example: 9.7672
              required:
                - group_id
                - user_id
                - is_delete
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/{id}':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
                reassign_owner_id:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group member.'
        example: '83323'
        required: true
        schema:
          type: string
  '/api/{ver}/group-mute':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 15367.44964198
                user_id:
                  type: number
                  description: ''
                  example: 542604544.77489
              required:
                - group_id
                - user_id
      security: []
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: distinctio
                group_id:
                  type: number
                  description: ''
                  example: 49895317.7
                limit:
                  type: number
                  description: ''
                  example: 48573586.5336
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 681.942
                user_id:
                  type: number
                  description: ''
                  example: 903517225.80866
                expired_at:
                  type: string
                  description: ''
                  example: laudantium
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/group-mute/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 4.0
                user_id:
                  type: number
                  description: ''
                  example: 897490.082
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group mute.'
        example: '907448502'
        required: true
        schema:
          type: string
  '/api/{ver}/group-question':
    get:
      summary: 'Browse Question.'
      operationId: browseQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 3.4188
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 62
                limit:
                  type: number
                  description: ''
                  example: 7931.66
              required:
                - group_id
    post:
      summary: 'Store a question.'
      operationId: storeAQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2.455324
                question:
                  type: string
                  description: ''
                  example: maxime
                type_id:
                  type: number
                  description: ''
                  example: 11582.79
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - magni
                  items:
                    type: string
              required:
                - group_id
                - question
                - type_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
  '/api/{ver}/group-question/answer-form/{id}':
    get:
      summary: 'Get answer form.'
      operationId: getAnswerForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sequi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the answer form.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/group-question/form/{id}':
    get:
      summary: 'Get creation form.'
      operationId: getCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 842.43442
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '663858'
  '/api/{ver}/group-question/{id}':
    put:
      summary: 'Update question.'
      operationId: updateQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: ''
                  example: illum
                type_id:
                  type: number
                  description: ''
                  example: 2096.0
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - eum
                  items:
                    type: number
    delete:
      summary: 'Remove question.'
      operationId: removeQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusantium
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group question.'
        example: '31182'
        required: true
        schema:
          type: string
  '/api/{ver}/group-request':
    get:
      summary: 'Browse member requests in a group.'
      operationId: browseMemberRequestsInAGroup
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 4.11399684
                q:
                  type: string
                  description: ''
                  example: nam
                view:
                  type: string
                  description: ''
                  example: et
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 10
                limit:
                  type: number
                  description: ''
                  example: 4172628.243166
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/accept-request':
    put:
      summary: 'Accept member request.'
      operationId: acceptMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 236.145566
                user_id:
                  type: number
                  description: ''
                  example: 2680732.8797
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iusto
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/cancel-request/{id}':
    delete:
      summary: 'Cancel a member request.'
      operationId: cancelAMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel request.'
        example: '9508'
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/deny-request':
    delete:
      summary: 'Deny member request.'
      operationId: denyMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2175948.1437505
                user_id:
                  type: number
                  description: ''
                  example: 122.0
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule':
    get:
      summary: 'Browse group rules.'
      operationId: browseGroupRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2.1
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 84
                limit:
                  type: number
                  description: ''
                  example: 347.60695357
              required:
                - group_id
    post:
      summary: 'Create group rule.'
      operationId: createGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 18555915.88
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: w
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: 'Quos rerum necessitatibus atque et eius.'
              required:
                - group_id
                - title
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsam
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule-example':
    get:
      summary: 'Browse example rules.'
      operationId: browseExampleRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/form':
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 54621.3719
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/order':
    put:
      summary: 'Reorder rules.'
      operationId: reorderRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  description: ''
                  example:
                    - 18731556.49
                  items:
                    type: number
                group_id:
                  type: number
                  description: ''
                  example: 4205.196365
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/{id}':
    put:
      summary: 'Update a group rule.'
      operationId: updateAGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: k
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: 'Magnam amet illum mollitia eius quaerat maiores quia.'
              required:
                - title
    delete:
      summary: 'Remove a rule.'
      operationId: removeARule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group rule.'
        example: '33'
        required: true
        schema:
          type: string
  '/api/{ver}/group-to-post':
    get:
      summary: ''
      operationId: getApiVerGroupToPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
  '/api/{ver}/group-unblock':
    delete:
      summary: ''
      operationId: deleteApiVerGroupUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 3343180.101
                user_id:
                  type: number
                  description: ''
                  example: 743888.31034984
                delete_activities:
                  type: number
                  description: ''
                  example: 2003760.9928309
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
  '/api/{ver}/group/about-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupAboutSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '298'
        required: true
        schema:
          type: string
  '/api/{ver}/group/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '99'
        required: true
        schema:
          type: string
  '/api/{ver}/group/avatar/{id}':
    post:
      summary: ''
      operationId: postApiVerGroupAvatarId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: praesentium
              required:
                - image
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/group/category':
    get:
      summary: 'Browse category.'
      operationId: browseCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 43.736570975
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 56
                q:
                  type: string
                  description: ''
                  example: ab
                level:
                  type: number
                  description: ''
                  example: 0.85
                limit:
                  type: number
                  description: ''
                  example: 1443.4
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/{ver}/group/confirm-answer-question':
    put:
      summary: ''
      operationId: putApiVerGroupConfirmAnswerQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 20
                is_answer_membership_question:
                  type: boolean
                  description: ''
                  example: true
              required:
                - group_id
                - is_answer_membership_question
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/group/confirm-rule':
    put:
      summary: ''
      operationId: putApiVerGroupConfirmRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 9
                is_rule_confirmation:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_rule_confirmation
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: natus
        required: true
        schema:
          type: string
  '/api/{ver}/group/cover/{id}':
    post:
      summary: ''
      operationId: postApiVerGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 11958932.865021
                position:
                  type: string
                  description: ''
                  example: tempore
    delete:
      summary: ''
      operationId: deleteApiVerGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/group/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/group/info-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupInfoSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '47'
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 4572.961163884
                refresh:
                  type: number
                  description: ''
                  example: 354230.0
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code/accept/{code}':
    post:
      summary: ''
      operationId: postApiVerGroupInviteCodeAcceptCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: tempora
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code/verify/{code}':
    get:
      summary: ''
      operationId: getApiVerGroupInviteCodeVerifyCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/group/mention':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quo
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 9
                limit:
                  type: number
                  description: ''
                  example: 61.94338852
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rem
        required: true
        schema:
          type: string
  '/api/{ver}/group/moderation-right/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putApiVerGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the moderation right.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/group/pending-mode/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupPendingModeId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 1047.9303
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pending mode.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/group/privacy/change-request/{id}':
    put:
      summary: ''
      operationId: putApiVerGroupPrivacyChangeRequestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: impedit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the change request.'
        example: '25'
        required: true
        schema:
          type: string
  '/api/{ver}/group/privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putApiVerGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: animi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '389300'
        required: true
        schema:
          type: string
  '/api/{ver}/group/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerGroupShareSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: modi
                view:
                  type: string
                  description: ''
                  example: qui
                sort:
                  type: string
                  description: ''
                  example: aut
                sort_type:
                  type: string
                  description: ''
                  example: doloremque
                when:
                  type: string
                  description: ''
                  example: voluptatum
                type_id:
                  type: number
                  description: ''
                  example: 3147346.6
                category_id:
                  type: number
                  description: ''
                  example: 80023274.363442
                owner_id:
                  type: integer
                  description: ''
                  example: 8
                user_id:
                  type: number
                  description: ''
                  example: 826.028
                is_featured:
                  type: number
                  description: ''
                  example: 336033177.53073
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 31
                limit:
                  type: number
                  description: ''
                  example: 56131816.4
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
  '/api/{ver}/group/similar':
    get:
      summary: ''
      operationId: getApiVerGroupSimilar
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 19.9362883
                category_id:
                  type: number
                  description: ''
                  example: 278577947.27
                sort:
                  type: string
                  description: ''
                  example: optio
                when:
                  type: string
                  description: ''
                  example: porro
                limit:
                  type: number
                  description: ''
                  example: 64394500.624549
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/{ver}/group/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 249215.0
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: mollitia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '9646'
        required: true
        schema:
          type: string
  '/api/{ver}/group/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: dolorum
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '880'
        required: true
        schema:
          type: string
  '/api/{ver}/group/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: molestias
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>exists</code> is <code>name</code>.'
                  example: quis
                category_id:
                  type: number
                  description: ''
                  example: 3570.41639561
                reg_method:
                  type: number
                  description: ''
                  example: 0.0
                vanity_url:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: 'http://ledner.org/nisi-vitae-et-corrupti-cum-pariatur-blanditiis'
                landing_page:
                  type: string
                  description: ''
                  example: et
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                text_description:
                  type: string
                  description: ''
                  example: provident
                phone:
                  type: string
                  description: ''
                  example: molestiae
              required:
                - landing_page
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/search-group-member':
    get:
      summary: ''
      operationId: getApiVerSearchGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: eius
                group_id:
                  type: number
                  description: ''
                  example: 34.9038
                view:
                  type: string
                  description: ''
                  example: soluta
                limit:
                  type: number
                  description: ''
                  example: 75705.058627802
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
  '/api/{ver}/hashtag':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 16
                limit:
                  type: number
                  description: ''
                  example: 850.9185
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptates
        required: true
        schema:
          type: string
  '/api/{ver}/hashtag/suggestion':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                limit:
                  type: number
                  description: ''
                  example: 183659.428
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: commodi
        required: true
        schema:
          type: string
  '/api/{ver}/invite':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: incidunt
                status:
                  type: string
                  description: ''
                  example: facilis
                user_id:
                  type: number
                  description: ''
                  example: 187.3174
                view:
                  type: string
                  description: ''
                  example: molestiae
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 51
                limit:
                  type: number
                  description: ''
                  example: 2902584.8925773
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                recipients:
                  type: array
                  description: ''
                  example:
                    - laudantium
                  items:
                    type: string
                message:
                  type: string
                  description: ''
                  example: non
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
  '/api/{ver}/invite-code':
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
  '/api/{ver}/invite/batch-delete':
    delete:
      summary: ''
      operationId: deleteApiVerInviteBatchDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 26.7826282
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/invite/batch-resend':
    patch:
      summary: ''
      operationId: patchApiVerInviteBatchResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 0.1
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  '/api/{ver}/invite/resend/{id}':
    put:
      summary: ''
      operationId: putApiVerInviteResendId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the resend.'
        example: '28'
        required: true
        schema:
          type: string
  '/api/{ver}/invite/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the invite.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sed
                view:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>my</code>, <code>friend</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>all_streaming</code>, or <code>my_streaming</code>.'
                  example: pending
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: latest
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                when:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
                  example: this_month
                owner_id:
                  type: integer
                  description: ''
                  example: 8
                user_id:
                  type: integer
                  description: ''
                  example: 7
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 59
                limit:
                  type: integer
                  description: ''
                  example: 15
                duration:
                  type: string
                  description: 'Must be one of <code>longer</code> or <code>shorter</code>.'
                  example: longer
                streaming:
                  type: number
                  description: ''
                  example: 0.0
                is_featured:
                  type: number
                  description: ''
                  example: 136280598.78609
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: non
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: 0.763
                privacy:
                  type: string
                  description: ''
                  example: quia
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: false
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 16.8953
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/approve/{id}':
    patch:
      summary: 'Approve live video.'
      operationId: approveLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/callback/{provider}':
    post:
      summary: ''
      operationId: postApiVerLiveVideoCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/end-live/{id}':
    post:
      summary: ''
      operationId: postApiVerLiveVideoEndLiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the end live.'
        example: '830'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/feature/{id}':
    patch:
      summary: 'Feature live video.'
      operationId: featureLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '418'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/go-live':
    post:
      summary: ''
      operationId: postApiVerLiveVideoGoLive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: asperiores
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: 8629678.5836718
                privacy:
                  type: string
                  description: ''
                  example: doloremque
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: false
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 748311.9318395
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/off-notification/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoOffNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the off notification.'
        example: '583982'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/on-notification/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoOnNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the on notification.'
        example: '087'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/ping-streaming/{id}':
    get:
      summary: ''
      operationId: getApiVerLiveVideoPingStreamingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ping streaming.'
        example: '3903633'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/ping-viewer/{id}':
    get:
      summary: ''
      operationId: getApiVerLiveVideoPingViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ping viewer.'
        example: '88559'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/remove-viewer/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoRemoveViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove viewer.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor live video in feed.'
      operationId: sponsorLiveVideoInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 809527.302342
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '2583'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/sponsor/{id}':
    patch:
      summary: 'Sponsor live video.'
      operationId: sponsorLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: vitae
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magnam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/update-viewer/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoUpdateViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the update viewer.'
        example: '599'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                status:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 0.0
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: in
                duration:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                title:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the live video.'
        example: '44592'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace':
    get:
      summary: 'Browse listing.'
      operationId: browseListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: corrupti
                view:
                  type: string
                  description: ''
                  example: eligendi
                sort:
                  type: string
                  description: ''
                  example: nulla
                sort_type:
                  type: string
                  description: ''
                  example: quia
                when:
                  type: string
                  description: ''
                  example: nesciunt
                category_id:
                  type: number
                  description: ''
                  example: 1758.0
                owner_id:
                  type: integer
                  description: ''
                  example: 7
                user_id:
                  type: number
                  description: ''
                  example: 5560.4221
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 3
                limit:
                  type: number
                  description: ''
                  example: 191600.83
                country_iso:
                  type: string
                  description: ''
                  example: delectus
                bounds_west:
                  type: number
                  description: ''
                  example: 226319.32821
                bounds_east:
                  type: number
                  description: ''
                  example: 104633.6007193
                bounds_south:
                  type: number
                  description: ''
                  example: 597377490.65
                bounds_north:
                  type: number
                  description: ''
                  example: 4.15176237
                price_from:
                  type: number
                  description: 'Must be at least 0.'
                  example: 40
                price_to:
                  type: number
                  description: 'Must be at least 0.'
                  example: 33
                is_featured:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-category':
    get:
      summary: 'Browe category.'
      operationId: broweCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptate
                id:
                  type: number
                  description: ''
                  example: 37830522.97
                level:
                  type: number
                  description: ''
                  example: 0.40357
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 2
                limit:
                  type: number
                  description: ''
                  example: 865.3603693
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invite':
    get:
      summary: ''
      operationId: getApiVerMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    post:
      summary: ''
      operationId: postApiVerMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 76564329.426896
                user_ids:
                  type: array
                  description: 'This field is required when <code>user_ids</code> is present.'
                  example:
                    - 5.4
                  items:
                    type: number
              required:
                - listing_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invite/invited-people':
    get:
      summary: ''
      operationId: getApiVerMarketplaceInviteInvitedPeople
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 6410.386
                limit:
                  type: number
                  description: ''
                  example: 46.01488419
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 44
              required:
                - listing_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: facilis
                listing_id:
                  type: number
                  description: ''
                  example: 74013.474400773
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T03:47:59'
                to:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>from</code>.'
                  example: '2093-10-18'
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 74
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 72
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 4394525.9972
                payment_gateway:
                  type: number
                  description: ''
                  example: 0.523
              required:
                - id
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minima
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/change':
    post:
      summary: ''
      operationId: postApiVerMarketplaceInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 880.8551
              required:
                - id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/repayment/{id}':
    put:
      summary: ''
      operationId: putApiVerMarketplaceInvoiceRepaymentId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 67470099.026327
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the repayment.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace invoice.'
        example: '728389'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-photo/form/{id}':
    get:
      summary: ''
      operationId: getApiVerMarketplacePhotoFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-photo/{id}':
    put:
      summary: ''
      operationId: putApiVerMarketplacePhotoId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: ''
                  example: sint
              required:
                - files
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace photo.'
        example: '2941'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/approve/{id}':
    put:
      summary: 'Approve listing.'
      operationId: approveListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '515'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/feature/{id}':
    patch:
      summary: 'Feature listing.'
      operationId: featureListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '27773173'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/reopen/{id}':
    patch:
      summary: 'Reopen listing.'
      operationId: reopenListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sequi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the reopen.'
        example: '3572'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/search-suggestion':
    get:
      summary: ''
      operationId: getApiVerMarketplaceSearchSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                listing_id:
                  type: number
                  description: ''
                  example: 306180287.0
                q:
                  type: string
                  description: ''
                  example: cumque
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor in feed.'
      operationId: sponsorInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 224614.0141746
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/sponsor/{id}':
    patch:
      summary: 'Sponsor listing.'
      operationId: sponsorListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: assumenda
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '997892728'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/{id}':
    get:
      summary: 'View listing.'
      operationId: viewListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    delete:
      summary: 'Remove listing.'
      operationId: removeListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace.'
        example: '9528783'
        required: true
        schema:
          type: string
  '/api/{ver}/menu/{menuName}':
    get:
      summary: 'Show Menu.'
      operationId: showMenu
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Menu
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
      -
        in: path
        name: menuName
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/service':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth':
    post:
      summary: 'Auth user.'
      operationId: authUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: laboriosam
                password:
                  type: string
                  description: ''
                  example: '>qA]e`HT-A|y3v$z'
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '600579'
              required:
                - service
                - password
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth/form':
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: dolor
                service:
                  type: string
                  description: ''
                  example: nisi
                resolution:
                  type: string
                  description: ''
                  example: expedita
              required:
                - mfa_token
      security: []
    post:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: porro
                service:
                  type: string
                  description: ''
                  example: odit
                resolution:
                  type: string
                  description: ''
                  example: ut
              required:
                - mfa_token
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth/resend':
    post:
      summary: ''
      operationId: postApiVerMfaUserAuthResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: iusto
                action:
                  type: string
                  description: ''
                  example: autem
                password:
                  type: string
                  description: ''
                  example: '@Fc5J)e_T#A2Lyjb/'
              required:
                - service
                - action
                - password
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/activate':
    post:
      summary: 'Activate service.'
      operationId: activateService
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: qui
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '854373'
              required:
                - service
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/setup':
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: possimus
                resolution:
                  type: string
                  description: ''
                  example: magnam
              required:
                - service
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/setup/resend':
    post:
      summary: ''
      operationId: postApiVerMfaUserServiceSetupResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: voluptatem
                action:
                  type: string
                  description: ''
                  example: vero
              required:
                - service
                - action
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/{ver}/music-genre':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 40368629.028131
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 28
                q:
                  type: string
                  description: ''
                  example: sit
                level:
                  type: number
                  description: ''
                  example: 815450.7
                limit:
                  type: number
                  description: ''
                  example: 106.1364
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/music/album':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: fugiat
                view:
                  type: string
                  description: ''
                  example: vel
                sort:
                  type: string
                  description: ''
                  example: qui
                sort_type:
                  type: string
                  description: ''
                  example: quia
                when:
                  type: string
                  description: ''
                  example: cum
                owner_id:
                  type: integer
                  description: ''
                  example: 13
                user_id:
                  type: number
                  description: ''
                  example: 617233.27037206
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 87
                limit:
                  type: number
                  description: ''
                  example: 116692207.3
                genre_id:
                  type: number
                  description: ''
                  example: 2657.25557
                category_id:
                  type: number
                  description: ''
                  example: 4302.3269122
                is_featured:
                  type: number
                  description: ''
                  example: 804022.7581
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: cumque
                sort_type:
                  type: string
                  description: ''
                  example: inventore
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 51
                limit:
                  type: number
                  description: ''
                  example: 328193.55354
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 274062.9221
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '089'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: sint
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '032'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicAlbumId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the album.'
        example: '285471'
        required: true
        schema:
          type: string
  '/api/{ver}/music/genre':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 1636420.81052
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 27
                q:
                  type: string
                  description: ''
                  example: reprehenderit
                level:
                  type: number
                  description: ''
                  example: 44428039.123215
                limit:
                  type: number
                  description: ''
                  example: 1963381.6504605
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: tempore
                view:
                  type: string
                  description: ''
                  example: distinctio
                sort:
                  type: string
                  description: ''
                  example: sapiente
                sort_type:
                  type: string
                  description: ''
                  example: aliquid
                when:
                  type: string
                  description: ''
                  example: quia
                user_id:
                  type: number
                  description: ''
                  example: 1713742.84
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 6
                limit:
                  type: number
                  description: ''
                  example: 660.0
                genre_id:
                  type: integer
                  description: ''
                  example: 1
                category_id:
                  type: integer
                  description: ''
                  example: 8
      security: []
    post:
      summary: ''
      operationId: postApiVerMusicPlaylist
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: porro
                description:
                  type: string
                  description: ''
                  example: 'Ex et nobis nostrum consequatur quis perspiciatis aut.'
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 7746027.8784382
                owner_id:
                  type: number
                  description: ''
                  example: 1.3724
                privacy:
                  type: string
                  description: ''
                  example: delectus
                attachments:
                  type: array
                  description: ''
                  example:
                    - quia
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/add-song':
    post:
      summary: ''
      operationId: postApiVerMusicPlaylistAddSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 37646.99
                playlist_ids:
                  type: array
                  description: ''
                  example:
                    - 286542.877
                  items:
                    type: number
              required:
                - item_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: assumenda
                sort_type:
                  type: string
                  description: ''
                  example: quibusdam
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 52
                limit:
                  type: number
                  description: ''
                  example: 792.26235
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '82'
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicPlaylistId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: illum
                description:
                  type: string
                  description: ''
                  example: 'Odit neque autem et cum mollitia ratione.'
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 38.920615971
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: fuga
                owner_id:
                  type: number
                  description: ''
                  example: 10836456.0
                privacy:
                  type: string
                  description: ''
                  example: vel
                attachments:
                  type: array
                  description: ''
                  example:
                    - aspernatur
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deserunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the playlist.'
        example: '55759'
        required: true
        schema:
          type: string
  '/api/{ver}/music/search':
    get:
      summary: ''
      operationId: getApiVerMusicSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/{ver}/music/song':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                view:
                  type: string
                  description: ''
                  example: sit
                sort:
                  type: string
                  description: ''
                  example: eos
                sort_type:
                  type: string
                  description: ''
                  example: dolor
                when:
                  type: string
                  description: ''
                  example: esse
                owner_id:
                  type: integer
                  description: ''
                  example: 11
                user_id:
                  type: number
                  description: ''
                  example: 4487904.0
                genre_id:
                  type: number
                  description: ''
                  example: 3108207.467
                category_id:
                  type: integer
                  description: ''
                  example: 18
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 22
                limit:
                  type: number
                  description: ''
                  example: 0.956310048
                is_featured:
                  type: number
                  description: ''
                  example: 1042738.57
      security: []
    post:
      summary: ''
      operationId: postApiVerMusicSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quo
                description:
                  type: string
                  description: ''
                  example: 'Vitae voluptas aperiam provident reiciendis.'
                file:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: string
                  description: ''
                  example: null
                genres:
                  type: array
                  description: 'This field is required when <code>genres</code> is present.'
                  example:
                    - 55.7
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 24042019.928939
                privacy:
                  type: string
                  description: ''
                  example: fuga
                attachments:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/approve/{id}':
    patch:
      summary: 'Approve song.'
      operationId: approveSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magni
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '347'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '74466443'
  '/api/{ver}/music/song/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '378'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 1476.379779
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '21'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: corrupti
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '27368'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}/remove-from-playlist/{playlist_id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongIdRemoveFromPlaylistPlaylist_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '3'
        required: true
        schema:
          type: string
      -
        in: path
        name: playlist_id
        description: 'The ID of the playlist.'
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}/statistic/total-play':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongIdStatisticTotalPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicSongId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/notification':
    get:
      summary: "Browse current user's notifications."
      operationId: browseCurrentUsersNotifications
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'The page number.'
                  example: 1
                limit:
                  type: integer
                  description: 'The max item per page.'
                  example: 4
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/{ver}/notification/all':
    delete:
      summary: ''
      operationId: deleteApiVerNotificationAll
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
  '/api/{ver}/notification/markAllAsRead':
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/notification/{id}':
    put:
      summary: 'Mark as read.'
      operationId: markAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    delete:
      summary: 'Delete notification.'
      operationId: deleteNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: '28'
        required: true
        schema:
          type: string
  '/api/{ver}/page':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                view:
                  type: string
                  description: ''
                  example: fugit
                sort:
                  type: string
                  description: ''
                  example: nesciunt
                sort_type:
                  type: string
                  description: ''
                  example: impedit
                when:
                  type: string
                  description: ''
                  example: labore
                category_id:
                  type: number
                  description: ''
                  example: 54558.519772
                owner_id:
                  type: integer
                  description: ''
                  example: 19
                user_id:
                  type: number
                  description: ''
                  example: 10573414.125359
                is_featured:
                  type: number
                  description: ''
                  example: 434968.546423
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 36
                limit:
                  type: number
                  description: ''
                  example: 2.0
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quia
                category_id:
                  type: number
                  description: ''
                  example: 302531.95216121
                text:
                  type: string
                  description: ''
                  example: enim
                users:
                  type: array
                  description: ''
                  example:
                    - cum
                  items:
                    type: number
              required:
                - name
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/{ver}/page-admin':
    get:
      summary: 'Display a listing of the admin resource.'
      operationId: displayAListingOfTheAdminResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: consequatur
                page_id:
                  type: number
                  description: ''
                  example: 74214.00221
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                limit:
                  type: number
                  description: ''
                  example: 4473909.3887
                view:
                  type: string
                  description: ''
                  example: maiores
                not_invite_role:
                  type: number
                  description: ''
                  example: 334479.295782
                excluded_user_id:
                  type: number
                  description: ''
                  example: 529108340.43618
              required:
                - page_id
      security: []
    post:
      summary: ''
      operationId: postApiVerPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 7998639.0
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 4.9166
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 67658.543197
                user_id:
                  type: number
                  description: ''
                  example: 4.373002
                is_delete:
                  type: number
                  description: ''
                  example: 205.2406
              required:
                - page_id
                - user_id
                - is_delete
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vero
        required: true
        schema:
          type: string
  '/api/{ver}/page-block':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 144784728.0795
                view:
                  type: string
                  description: ''
                  example: sapiente
                q:
                  type: string
                  description: ''
                  example: dolorem
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 2
                limit:
                  type: number
                  description: ''
                  example: 1.624037
              required:
                - page_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 9447348.5650755
                user_id:
                  type: number
                  description: ''
                  example: 747009.86
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: corporis
                sort:
                  type: string
                  description: ''
                  example: ex
                sort_type:
                  type: string
                  description: ''
                  example: consequatur
                when:
                  type: string
                  description: ''
                  example: beatae
                status:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: 179.95874441
                owner_id:
                  type: integer
                  description: ''
                  example: 3
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 48
                limit:
                  type: number
                  description: ''
                  example: 1166.9501
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: id
                page_id:
                  type: number
                  description: ''
                  example: 712378.7051545
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim/resubmit/{id}':
    put:
      summary: ''
      operationId: putApiVerPageClaimResubmitId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the resubmit.'
        example: '834'
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim/{id}':
    get:
      summary: ''
      operationId: getApiVerPageClaimId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: ut
                status:
                  type: integer
                  description: ''
                  example: 1
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page claim.'
        example: '95'
        required: true
        schema:
          type: string
  '/api/{ver}/page-info/{id}':
    get:
      summary: 'Display the specified resource info.'
      operationId: displayTheSpecifiedResourceInfo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page info.'
        example: '673'
        required: true
        schema:
          type: string
  '/api/{ver}/page-integrated/order':
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 1.182
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
  '/api/{ver}/page-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page integrated.'
        example: '97'
        required: true
        schema:
          type: string
  '/api/{ver}/page-invite':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sit
                page_id:
                  type: number
                  description: ''
                  example: 0.5
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 39
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 77
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 9082931.7279537
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - page_id
                - user_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: possimus
        required: true
        schema:
          type: string
  '/api/{ver}/page-invite/{id}':
    put:
      summary: 'Used to accept/decline a request to like a page.'
      operationId: usedToAcceptdeclineARequestToLikeAPage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  type: number
                  description: ''
                  example: 2.1035774
              required:
                - accept
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 51
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page invite.'
        example: '59'
        required: true
        schema:
          type: string
  '/api/{ver}/page-member':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: dolorem
                page_id:
                  type: number
                  description: ''
                  example: 418.35427
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 24
                limit:
                  type: number
                  description: ''
                  example: 20.6578915
                view:
                  type: string
                  description: ''
                  example: exercitationem
                not_invite_role:
                  type: number
                  description: ''
                  example: 213465.8315864
                excluded_user_id:
                  type: number
                  description: ''
                  example: 69.69075
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 11.13988
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/add-page-admin':
    post:
      summary: ''
      operationId: postApiVerPageMemberAddPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 672.66016
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 5529.8453
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/cancel-invite':
    delete:
      summary: ''
      operationId: deleteApiVerPageMemberCancelInvite
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 10200.0719759
                user_id:
                  type: number
                  description: ''
                  example: 26272135.87973
                invite_type:
                  type: string
                  description: ''
                  example: odit
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: optio
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/reassign-owner':
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 0.37248549
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 53817.92772
                users:
                  type: array
                  description: ''
                  example:
                    - ipsam
                  items:
                    type: number
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/remove-page-admin':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 0.0
                user_id:
                  type: number
                  description: ''
                  example: 398645.56095383
                is_delete:
                  type: number
                  description: ''
                  example: 59819.8754
              required:
                - page_id
                - user_id
                - is_delete
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/remove-page-member':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 2.30912
                user_id:
                  type: number
                  description: ''
                  example: 125164655.7559
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page member.'
        example: '243322'
        required: true
        schema:
          type: string
  '/api/{ver}/page-to-post':
    get:
      summary: ''
      operationId: getApiVerPageToPost
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
  '/api/{ver}/page-unblock':
    delete:
      summary: ''
      operationId: deleteApiVerPageUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 4.01
                user_id:
                  type: number
                  description: ''
                  example: 151269263.30669
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/{ver}/page/about-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerPageAboutSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/page/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quos
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '70'
        required: true
        schema:
          type: string
  '/api/{ver}/page/avatar/{id}':
    post:
      summary: ''
      operationId: postApiVerPageAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                image_crop:
                  type: string
                  description: ''
                  example: dolor
                temp_file:
                  type: number
                  description: ''
                  example: 0.0
                photo_id:
                  type: number
                  description: ''
                  example: 47542.75
              required:
                - image_crop
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '01'
        required: true
        schema:
          type: string
  '/api/{ver}/page/category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 75
                parent_id:
                  type: number
                  description: ''
                  example: 333.422266192
                q:
                  type: string
                  description: ''
                  example: beatae
                level:
                  type: number
                  description: ''
                  example: 452380625.37844
                limit:
                  type: number
                  description: ''
                  example: 13150.07187
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  '/api/{ver}/page/cover/{id}':
    post:
      summary: ''
      operationId: postApiVerPageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 3106.47
                position:
                  type: string
                  description: ''
                  example: nemo
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerPageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '194'
        required: true
        schema:
          type: string
  '/api/{ver}/page/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '843330'
        required: true
        schema:
          type: string
  '/api/{ver}/page/info-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerPageInfoSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: amet
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/page/mention':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 81
                limit:
                  type: number
                  description: ''
                  example: 4705.0
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/page/privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: ''
      operationId: putApiVerPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/page/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerPageShareSuggestion
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: odit
                view:
                  type: string
                  description: ''
                  example: earum
                sort:
                  type: string
                  description: ''
                  example: molestiae
                sort_type:
                  type: string
                  description: ''
                  example: labore
                when:
                  type: string
                  description: ''
                  example: quo
                category_id:
                  type: number
                  description: ''
                  example: 38656.7446
                owner_id:
                  type: integer
                  description: ''
                  example: 6
                user_id:
                  type: number
                  description: ''
                  example: 0.4564325
                is_featured:
                  type: number
                  description: ''
                  example: 22535.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 18
                limit:
                  type: number
                  description: ''
                  example: 267307.8482586
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
  '/api/{ver}/page/similar':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 114838910.9791
                category_id:
                  type: number
                  description: ''
                  example: 0.1146
                sort:
                  type: string
                  description: ''
                  example: quia
                when:
                  type: string
                  description: ''
                  example: sed
                limit:
                  type: number
                  description: ''
                  example: 14441305.8
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/api/{ver}/page/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/page/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: repudiandae
                category_id:
                  type: number
                  description: ''
                  example: 33800109.444561
                vanity_url:
                  type: string
                  description: ''
                  example: 'http://www.conn.net/ullam-nihil-reiciendis-modi-ipsa.html'
                text:
                  type: string
                  description: ''
                  example: consectetur
                landing_page:
                  type: string
                  description: ''
                  example: tempora
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                phone:
                  type: string
                  description: ''
                  example: modi
                external_link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.ryan.com/distinctio-aut-est-doloremque-officia-et-temporibus.html'
              required:
                - name
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/search-page-member':
    get:
      summary: ''
      operationId: getApiVerSearchPageMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: in
                page_id:
                  type: number
                  description: ''
                  example: 1051535.0
                view:
                  type: string
                  description: ''
                  example: atque
                limit:
                  type: number
                  description: ''
                  example: 45382398.304254
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/paypal/notify':
    post:
      summary: notify.
      operationId: notify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - PayPal
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 26
                limit:
                  type: number
                  description: ''
                  example: 264.0
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration':
    get:
      summary: ''
      operationId: getApiVerPaymentGatewayConfiguration
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration-form/{driver}/{id}':
    get:
      summary: ''
      operationId: getApiVerPaymentGatewayConfigurationFormDriverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: driver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the {driver}.'
        example: '024'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration-multiple':
    put:
      summary: ''
      operationId: putApiVerPaymentGatewayConfigurationMultiple
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration/{id}':
    put:
      summary: ''
      operationId: putApiVerPaymentGatewayConfigurationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 65.80079554
                value:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the configuration.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-order':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
  '/api/{ver}/payment-order/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 5.7327
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment order.'
        example: '995'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-processor/callback/{processor}':
    post:
      summary: ''
      operationId: postApiVerPaymentProcessorCallbackProcessor
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Processor'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ad
        required: true
        schema:
          type: string
      -
        in: path
        name: processor
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/photo':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 17
                user_id:
                  type: number
                  description: ''
                  example: 55.366691708
                category_id:
                  type: number
                  description: ''
                  example: 330.77
                album_id:
                  type: number
                  description: ''
                  example: 1.1303
                group_id:
                  type: number
                  description: ''
                  example: 0.439586
                q:
                  type: string
                  description: ''
                  example: dolores
                tag:
                  type: string
                  description: ''
                  example: quas
                feed_id:
                  type: number
                  description: ''
                  example: 259844.5777
                view:
                  type: string
                  description: ''
                  example: libero
                sort:
                  type: string
                  description: ''
                  example: aut
                sort_type:
                  type: string
                  description: ''
                  example: ut
                when:
                  type: string
                  description: ''
                  example: vel
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 46
                limit:
                  type: number
                  description: ''
                  example: 4298.7681
                is_featured:
                  type: number
                  description: ''
                  example: 1383206.0
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: officiis
                owner_id:
                  type: integer
                  description: ''
                  example: 11
                user_id:
                  type: number
                  description: ''
                  example: 3009.670482
                view:
                  type: string
                  description: ''
                  example: perspiciatis
                sort:
                  type: string
                  description: ''
                  example: ut
                sort_type:
                  type: string
                  description: ''
                  example: illum
                when:
                  type: string
                  description: ''
                  example: quia
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 63
                limit:
                  type: number
                  description: ''
                  example: 749132322.77182
                is_featured:
                  type: number
                  description: ''
                  example: 9943.96458
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/create':
    get:
      summary: ''
      operationId: getApiVerPhotoAlbumCreate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: sed
                sort_type:
                  type: string
                  description: ''
                  example: nam
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 30
                limit:
                  type: number
                  description: ''
                  example: 116879.241345
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: possimus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '4537794'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 5725692.56419
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: error
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: quisquam
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo album.'
        example: '73'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/{photo_album}/edit':
    get:
      summary: ''
      operationId: getApiVerPhotoAlbumPhoto_albumEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
      -
        in: path
        name: photo_album
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/{ver}/photo-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 20083.44634
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 66
                q:
                  type: string
                  description: ''
                  example: qui
                level:
                  type: number
                  description: ''
                  example: 60999.140649
                limit:
                  type: number
                  description: ''
                  example: 3912476.5189
                parent_id:
                  type: number
                  description: ''
                  example: 465.477706259
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/photo-set/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo set.'
        example: '73455320'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-tag':
    get:
      summary: ''
      operationId: getApiVerPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 4451.02108
              required:
                - item_id
      security: []
    post:
      summary: ''
      operationId: postApiVerPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1716.7
                tag_user_id:
                  type: number
                  description: ''
                  example: 63.0
                px:
                  type: number
                  description: 'Must be at least 0.'
                  example: 89
                py:
                  type: number
                  description: 'Must be at least 0.'
                  example: 85
              required:
                - item_id
                - tag_user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/{ver}/photo-tag/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerPhotoTagId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo tag.'
        example: '95'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '2150'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '9701581'
  '/api/{ver}/photo/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '0618'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/form/{id}':
    get:
      summary: ''
      operationId: getApiVerPhotoFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 531537105.84975
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '64'
  '/api/{ver}/photo/parent-avatar/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoParentAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the parent avatar.'
        example: '889'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/parent-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoParentCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the parent cover.'
        example: '367644'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/profile-avatar/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoProfileAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the profile avatar.'
        example: '6938'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/profile-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoProfileCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 3
                position:
                  type: string
                  description: ''
                  example: hic
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the profile cover.'
        example: '5868'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 17.9
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '28220'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: ratione
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: provident
                categories:
                  type: array
                  description: ''
                  example:
                    - 33371727.937566
                  items:
                    type: number
                album:
                  type: number
                  description: ''
                  example: 1.956
                tags:
                  type: array
                  description: ''
                  example:
                    - voluptates
                  items:
                    type: string
                text:
                  type: string
                  description: ''
                  example: mollitia
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: atque
                    lat:
                      type: number
                      description: ''
                      example: 1.371878
                    lng:
                      type: number
                      description: ''
                      example: 266129.41767377
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ex
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo.'
        example: '10'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/{photo}/edit':
    get:
      summary: ''
      operationId: getApiVerPhotoPhotoEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: photo
        description: 'The photo.'
        example: beatae
        required: true
        schema:
          type: string
  '/api/{ver}/poll':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sit
                view:
                  type: string
                  description: ''
                  example: distinctio
                sort:
                  type: string
                  description: ''
                  example: illo
                sort_type:
                  type: string
                  description: ''
                  example: repellat
                when:
                  type: string
                  description: ''
                  example: doloremque
                owner_id:
                  type: integer
                  description: ''
                  example: 10
                user_id:
                  type: number
                  description: ''
                  example: 46024644.528919
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 23
                limit:
                  type: number
                  description: ''
                  example: 315230872.364
                is_featured:
                  type: number
                  description: ''
                  example: 1.6
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/poll-result':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'This field is required when <code>answer_id</code> is not present. Must be at least 1.'
                  example: 83
                answer_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 15
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 4
                limit:
                  type: number
                  description: ''
                  example: 43.6211301
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 20
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: []
                  properties: []
              required:
                - poll_id
                - answers
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/poll-result/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the poll result.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '795'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/integration-form':
    get:
      summary: ''
      operationId: getApiVerPollIntegrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: ''
                  example: 1235828.8495747
                is_edit:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/poll/search-form':
    get:
      summary: ''
      operationId: getApiVerPollSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
  '/api/{ver}/poll/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 281013.52660048
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '80416'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: dolor
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '16'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/status-form':
    get:
      summary: ''
      operationId: getApiVerPollStatusForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
  '/api/{ver}/poll/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the poll.'
        example: '7680'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: tenetur
                view:
                  type: string
                  description: ''
                  example: veniam
                sort:
                  type: string
                  description: ''
                  example: id
                sort_type:
                  type: string
                  description: ''
                  example: beatae
                when:
                  type: string
                  description: ''
                  example: quos
                owner_id:
                  type: integer
                  description: ''
                  example: 4
                user_id:
                  type: number
                  description: ''
                  example: 23.302232243
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 43
                limit:
                  type: number
                  description: ''
                  example: 1.96
                is_featured:
                  type: number
                  description: ''
                  example: 276.53
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-question/view-plays':
    get:
      summary: ''
      operationId: getApiVerQuizQuestionViewPlays
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: number
                  description: ''
                  example: 74848656.327432
              required:
                - question_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-result':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 74
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 5
                limit:
                  type: number
                  description: ''
                  example: 4953841.5394
              required:
                - quiz_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-result/view-individual-play':
    get:
      summary: ''
      operationId: getApiVerQuizResultViewIndividualPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 78
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 7
              required:
                - quiz_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: commodi
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '79744'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/search-form':
    get:
      summary: ''
      operationId: getApiVerQuizSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: reprehenderit
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 7922.04
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '301'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: eaque
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '69'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the quiz.'
        example: '421'
        required: true
        schema:
          type: string
  '/api/{ver}/like':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 8647290.6322273
                item_type:
                  type: string
                  description: ''
                  example: beatae
              required:
                - item_id
                - item_type
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 21105004.853668
                item_type:
                  type: string
                  description: ''
                  example: quidem
                react_id:
                  type: number
                  description: ''
                  example: 0.4
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 25
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 18
              required:
                - item_id
                - item_type
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 27.0483
                item_type:
                  type: string
                  description: ''
                  example: tempore
                reaction_id:
                  type: number
                  description: ''
                  example: 96301.4520542
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
  '/api/{ver}/like-tabs':
    get:
      summary: ''
      operationId: getApiVerLikeTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 89
                item_type:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/api/{ver}/like/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the like.'
        example: '5247110'
        required: true
        schema:
          type: string
  '/api/{ver}/preaction':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
  '/api/{ver}/preaction/get-reacted-lists':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 56.0
                item_type:
                  type: string
                  description: ''
                  example: itaque
                react_id:
                  type: number
                  description: ''
                  example: 4409193.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 65
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 65
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
  '/api/{ver}/preaction/reaction-tabs':
    get:
      summary: ''
      operationId: getApiVerPreactionReactionTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 6
                item_type:
                  type: string
                  description: ''
                  example: neque
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
  '/api/{ver}/reaction':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
  '/api/{ver}/report':
    post:
      summary: 'Store a new report.'
      operationId: storeANewReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 38383118.069398
                feedback:
                  type: string
                  description: ''
                  example: eos
                item_id:
                  type: number
                  description: ''
                  example: 163.5
                item_type:
                  type: string
                  description: ''
                  example: dolorum
              required:
                - reason
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner':
    get:
      summary: 'Browse reports.'
      operationId: browseReports
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 292.405
                sort_type:
                  type: string
                  description: ''
                  example: magni
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 51
                limit:
                  type: number
                  description: ''
                  example: 516770.458
              required:
                - owner_id
    post:
      summary: 'Post a report to owner.'
      operationId: postAReportToOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 453700038.0
                feedback:
                  type: string
                  description: ''
                  example: quis
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                item_type:
                  type: string
                  description: ''
                  example: aliquid
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/form':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 74
                item_type:
                  type: string
                  description: ''
                  example: voluptatibus
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/reporters/{id}':
    get:
      summary: ''
      operationId: getApiVerReportOwnerReportersId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the reporter.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/{id}':
    put:
      summary: 'Update a report.'
      operationId: updateAReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keep_post:
                  type: string
                  description: ''
                  example: quis
              required:
                - keep_post
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quisquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the report owner.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/report/form':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                item_type:
                  type: string
                  description: ''
                  example: qui
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
  '/api/{ver}/report/form/mobile':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 67
                item_type:
                  type: string
                  description: ''
                  example: nesciunt
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/{ver}/report/reason':
    get:
      summary: 'Browse report reasons.'
      operationId: browseReportReasons
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 44
                limit:
                  type: number
                  description: ''
                  example: 462.562619697
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nisi
        required: true
        schema:
          type: string
  '/api/{ver}/seo/meta':
    get:
      summary: ''
      operationId: getApiVerSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    post:
      summary: ''
      operationId: postApiVerSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sequi
        required: true
        schema:
          type: string
  '/api/{ver}/seo/meta/{metaName}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
      -
        in: path
        name: metaName
        description: 'Page meta name.'
        example: blog.browse.home
        required: true
        schema:
          type: string
  '/api/{ver}/sms/notify':
    post:
      summary: notify.
      operationId: notify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'SMS Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: cum
                collection_id:
                  type: number
                  description: ''
                  example: 537515.05944
                sort_type:
                  type: string
                  description: ''
                  example: in
                open:
                  type: string
                  description: ''
                  example: earum
                when:
                  type: string
                  description: ''
                  example: est
                type:
                  type: string
                  description: ''
                  example: aut
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 90
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 70.43419268
                item_type:
                  type: string
                  description: ''
                  example: dolorem
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 8395479.6394457
                  items:
                    type: number
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: placeat
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection':
    get:
      summary: 'Browse list.'
      operationId: browseList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 8
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 47
                type:
                  type: string
                  description: ''
                  example: commodi
                saved_id:
                  type: number
                  description: ''
                  example: 18.12
    post:
      summary: 'Create list.'
      operationId: createList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: apklcscieqgcsetmdazizy
                privacy:
                  type: string
                  description: ''
                  example: magni
              required:
                - name
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/add-friend/{id}':
    post:
      summary: ''
      operationId: postApiVerSaveditemsCollectionAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magnam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/form':
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: hic
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/item/{id}':
    get:
      summary: ''
      operationId: getApiVerSaveditemsCollectionItemId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 21
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 42
                type:
                  type: string
                  description: ''
                  example: eveniet
                saved_id:
                  type: number
                  description: ''
                  example: 33.0519786
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/leave-collection/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionLeaveCollectionId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the leave collection.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/remove-member/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionRemoveMemberId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 6.65
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove member.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/view-friend/{id}':
    get:
      summary: ''
      operationId: getApiVerSaveditemsCollectionViewFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the view friend.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/{id}':
    get:
      summary: 'View list.'
      operationId: viewList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update list.'
      operationId: updateList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: jvmpetchzwxcltmrzrvfq
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - name
    delete:
      summary: 'Remove list.'
      operationId: removeList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the saveditems collection.'
        example: '90'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/collection':
    put:
      summary: 'Move item.'
      operationId: moveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 13118.36459
                collection_ids:
                  type: array
                  description: ''
                  example:
                    - 691132.1
                  items:
                    type: number
              required:
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/collection/{list_id}/save/{saved_id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionList_idSaveSaved_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
      -
        in: path
        name: list_id
        description: 'The ID of the list.'
        example: corrupti
        required: true
        schema:
          type: string
      -
        in: path
        name: saved_id
        description: 'The ID of the saved.'
        example: atque
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/get-tab':
    get:
      summary: 'Browse tabs.'
      operationId: browseTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/read/{id}':
    patch:
      summary: 'Mark as opened.'
      operationId: markAsOpened
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saved_id:
                  type: number
                  description: ''
                  example: 19681587.96873
                status:
                  type: number
                  description: ''
                  example: 45641578.877787
                collection_id:
                  type: number
                  description: ''
                  example: 5184410.95
              required:
                - saved_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the read.'
        example: '94'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/save':
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1341808.9805392
                item_type:
                  type: string
                  description: ''
                  example: nulla
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 445774894.42515
                  items:
                    type: number
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/unsave':
    delete:
      summary: 'Unsave item.'
      operationId: unsaveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 26.027645
                item_type:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_unopened:
                  type: number
                  description: ''
                  example: 41.358762495
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 84314093.528395
                  items:
                    type: number
    delete:
      summary: 'Remove item.'
      operationId: removeItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the saveditem.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/search':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: hlpolgmjiixlyaykpsddqxzogejppxotcpiebwdzavmzuffpzhaypknflqqedmdwygcpcmozkaxs
                owner_id:
                  type: number
                  description: ''
                  example: 2.0
                from:
                  type: string
                  description: ''
                  example: quia
                hashtag:
                  type: string
                  description: ''
                  example: culpa
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 2.'
                  example: 19
                last_search_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 29
                view:
                  type: string
                  description: ''
                  example: tempore
              required:
                - q
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
  '/api/{ver}/search/group':
    get:
      summary: ''
      operationId: getApiVerSearchGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: zdox
                owner_id:
                  type: number
                  description: ''
                  example: 533414.4967
                from:
                  type: string
                  description: ''
                  example: earum
                hashtag:
                  type: string
                  description: ''
                  example: fugit
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
              required:
                - q
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odit
        required: true
        schema:
          type: string
  '/api/{ver}/search/hashtag/trending':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 41
                limit:
                  type: integer
                  description: ''
                  example: 2
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: amet
        required: true
        schema:
          type: string
  '/api/{ver}/search/suggestion':
    get:
      summary: 'View Suggestions.'
      operationId: viewSuggestions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 11
                q:
                  type: string
                  description: ''
                  example: nam
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: error
        required: true
        schema:
          type: string
  '/api/{ver}/socialite/callback/{provider}':
    get:
      summary: ''
      operationId: getApiVerSocialiteCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: consequuntur
                token:
                  type: string
                  description: ''
                  example: aliquam
                code_verifier:
                  type: string
                  description: ''
                  example: quasi
                display_name:
                  type: string
                  description: ''
                  example: molestias
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptates
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: sequi
        required: true
        schema:
          type: string
  '/api/{ver}/socialite/login/{provider}':
    get:
      summary: ''
      operationId: getApiVerSocialiteLoginProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - provider
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: hic
        required: true
        schema:
          type: string
  '/api/{ver}/static-page':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
  '/api/{ver}/static-page/page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/static-page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the static page.'
        example: '7915'
        required: true
        schema:
          type: string
  '/api/{ver}/bgs-background':
    get:
      summary: 'Get background.'
      operationId: getBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: number
                  description: ''
                  example: 1998.91
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 59
                limit:
                  type: number
                  description: ''
                  example: 61.392
              required:
                - collection_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
  '/api/{ver}/pstatusbg-collection':
    get:
      summary: 'Browse collection.'
      operationId: browseCollection
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 8
                limit:
                  type: number
                  description: ''
                  example: 6.937558
    post:
      summary: 'Create background.'
      operationId: createBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: ibx
                is_active:
                  type: number
                  description: ''
                  example: 255825.74682417
                is_default:
                  type: number
                  description: ''
                  example: 39.02185
                background_temp_file:
                  type: array
                  description: ''
                  example:
                    - 846199.6542828
                  items:
                    type: number
              required:
                - title
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/pstatusbg-collection/{id}':
    get:
      summary: 'View background.'
      operationId: viewBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pstatusbg collection.'
        example: '734853'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                set_id:
                  type: number
                  description: ''
                  example: 6.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 89
                limit:
                  type: number
                  description: ''
                  example: 0.181
              required:
                - set_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/recent':
    get:
      summary: ''
      operationId: getApiVerStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 15
                limit:
                  type: number
                  description: ''
                  example: 42582.78
    post:
      summary: ''
      operationId: postApiVerStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sticker_id:
                  type: number
                  description: ''
                  example: 17102.1
              required:
                - sticker_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set':
    get:
      summary: 'Browse sticker.'
      operationId: browseSticker
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: est
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 14
                limit:
                  type: number
                  description: ''
                  example: 4.62
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/active/{sticker_set}':
    patch:
      summary: 'Active sticker set.'
      operationId: activeStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: number
                  description: ''
                  example: 824959757.36494
              required:
                - active
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: sticker_set
        description: ''
        example: cum
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/default/{sticker_set}':
    patch:
      summary: ''
      operationId: patchApiVerStickerStickerSetDefaultSticker_set
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: sticker_set
        description: ''
        example: neque
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/user':
    post:
      summary: ''
      operationId: postApiVerStickerStickerSetUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 9814191.7
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/user/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerStickerStickerSetUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minima
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '39'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/{id}':
    get:
      summary: 'View sticker set.'
      operationId: viewStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sticker set.'
        example: '4127888'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sticker.'
        example: '1523287'
        required: true
        schema:
          type: string
  '/api/{ver}/story':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: ut
                lifespan:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 24.'
                  example: 4
                text:
                  type: string
                  description: ''
                  example: quo
                font_style:
                  type: string
                  description: ''
                  example: voluptatibus
                background_id:
                  type: integer
                  description: ''
                  example: 17
                extra:
                  type: object
                  description: ''
                  example: null
                  properties: []
                type:
                  type: string
                  description: ''
                  example: animi
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 2295860.798
                thumb_file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumb_file</code> is present.'
                      example: 597.82984
              required:
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/story-archive':
    get:
      summary: ''
      operationId: getApiVerStoryArchive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 10
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 46
                limit:
                  type: number
                  description: ''
                  example: 718630.265
      security: []
    post:
      summary: ''
      operationId: postApiVerStoryArchive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 30.922770014
              required:
                - story_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
  '/api/{ver}/story-archive/setting':
    post:
      summary: ''
      operationId: postApiVerStoryArchiveSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/{ver}/story-background':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 54
                limit:
                  type: number
                  description: ''
                  example: 200078428.26803
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
  '/api/{ver}/story-background/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the story background.'
        example: '00'
        required: true
        schema:
          type: string
  '/api/{ver}/story-reaction':
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 47633.4
                reaction_id:
                  type: number
                  description: ''
                  example: 10910.97
              required:
                - story_id
                - reaction_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/story-view':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 0.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
                limit:
                  type: number
                  description: ''
                  example: 4273.3873011
              required:
                - story_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 0.544374
              required:
                - story_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
  '/api/{ver}/story/{id}':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the story.'
        example: '111'
        required: true
        schema:
          type: string
  '/api/{ver}/user_story':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                related_user_id:
                  type: integer
                  description: ''
                  example: 16
                user_id:
                  type: integer
                  description: ''
                  example: 13
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 9
                limit:
                  type: number
                  description: ''
                  example: 6562.569
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-comparison':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 55
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 364423305.499
                renew_type:
                  type: string
                  description: ''
                  example: dignissimos
                payment_gateway:
                  type: number
                  description: ''
                  example: 1782.07069357
              required:
                - id
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/cancel-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoiceCancelFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel form.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_id:
                  type: number
                  description: ''
                  example: 51863.407
              required:
                - reason_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '233894579'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/change-invoice/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoiceChangeInvoiceId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the change invoice.'
        example: '7511521'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/payment-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoicePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: sequi
                action_type:
                  type: string
                  description: ''
                  example: doloremque
              required:
                - action_type
      security: []
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoicePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: mollitia
                action_type:
                  type: string
                  description: ''
                  example: perspiciatis
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '488'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoiceRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew-method-form/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoiceRenewMethodFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: provident
                action_type:
                  type: string
                  description: ''
                  example: cupiditate
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew method form.'
        example: '23'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceRenewId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 1.01215381
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew.'
        example: '3333'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/upgrade/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceUpgradeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: 20325563.991941
                action_type:
                  type: string
                  description: ''
                  example: et
              required:
                - payment_gateway
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the upgrade.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscription invoice.'
        example: '028'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ut
                view:
                  type: string
                  description: ''
                  example: neque
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/payment-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionPackagePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: sed
      security: []
    post:
      summary: ''
      operationId: postApiVerSubscriptionPackagePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: omnis
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/renew-form/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionPackageRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscription package.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/history/purge/{name}':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetHistoryPurgeName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: name
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/history/{name}':
    get:
      summary: ''
      operationId: getApiVerLayoutSnippetHistoryName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellat
        required: true
        schema:
          type: string
      -
        in: path
        name: name
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/ping':
    get:
      summary: ''
      operationId: getApiVerLayoutSnippetPing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/publish':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetPublish
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/purge':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetPurge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/revert/{id}':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetRevertId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the revert.'
        example: '14'
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/theme':
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: recusandae
                name:
                  type: string
                  description: ''
                  example: aliquam
                variant:
                  type: string
                  description: ''
                  example: impedit
                files:
                  type: object
                  description: ''
                  example: []
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - files
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/variant':
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: qui
                variant:
                  type: string
                  description: ''
                  example: inventore
                files:
                  type: object
                  description: ''
                  example: []
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: false
              required:
                - theme
                - variant
                - files
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/api/{ver}/account/blocked-user':
    get:
      summary: ''
      operationId: getApiVerAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    post:
      summary: ''
      operationId: postApiVerAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: ut
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
  '/api/{ver}/account/blocked-user/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerAccountBlockedUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the blocked user.'
        example: '520'
        required: true
        schema:
          type: string
  '/api/{ver}/account/invisible':
    get:
      summary: ''
      operationId: getApiVerAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    put:
      summary: ''
      operationId: putApiVerAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invisible:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 1
              required:
                - invisible
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
  '/api/{ver}/account/item-privacy':
    put:
      summary: ''
      operationId: putApiVerAccountItemPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
  '/api/{ver}/account/item-privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountItemPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 534461.607
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '75368'
  '/api/{ver}/account/notification':
    get:
      summary: ''
      operationId: getApiVerAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ''
                  example: recusandae
    put:
      summary: ''
      operationId: putApiVerAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                module_id:
                  type: string
                  description: ''
                  example: autem
                value:
                  type: integer
                  description: ''
                  example: 16
                var_name:
                  type: string
                  description: ''
                  example: nesciunt
                channel:
                  type: string
                  description: ''
                  example: corporis
              required:
                - channel
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-menu':
    put:
      summary: ''
      operationId: putApiVerAccountProfileMenu
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quisquam
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-menu/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountProfileMenuId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 0.73843306
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '8606'
  '/api/{ver}/account/profile-privacy':
    put:
      summary: ''
      operationId: putApiVerAccountProfilePrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountProfilePrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 53.800138
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0944027'
  '/api/{ver}/account/setting':
    get:
      summary: ''
      operationId: getApiVerAccountSetting
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/account/setting/video':
    get:
      summary: ''
      operationId: getApiVerAccountSettingVideo
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illo
        required: true
        schema:
          type: string
  '/api/{ver}/account/setting/video/{id}':
    put:
      summary: ''
      operationId: putApiVerAccountSettingVideoId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: error
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/account/timezone':
    get:
      summary: ''
      operationId: getApiVerAccountTimezone
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: reprehenderit
        required: true
        schema:
          type: string
  '/api/{ver}/auth/logout':
    get:
      summary: ''
      operationId: getApiVerAuthLogout
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: debitis
        required: true
        schema:
          type: string
  '/api/{ver}/auth/profile':
    get:
      summary: ''
      operationId: getApiVerAuthProfile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
  '/api/{ver}/me':
    get:
      summary: 'View current logged in user.'
      operationId: viewCurrentLoggedInUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: perspiciatis
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/register':
    post:
      summary: MetaFox
      operationId: metaFox
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: shyann17@example.net
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: omnis
                password:
                  type: string
                  description: ''
                  example: 'f|nYDTbTn,xg)(ksE'
                full_name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 25 characters.'
                  example: bfqykxvtzhscrfekwnm
                user_name:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 25 characters.'
                  example: spbtdunrzueiftepe
                agree:
                  type: boolean
                  description: 'Must be accepted.'
                  example: true
                captcha:
                  type: string
                  description: ''
                  example: null
                code:
                  type: string
                  description: ''
                  example: ea
                invite_code:
                  type: string
                  description: ''
                  example: iste
              required:
                - password
                - full_name
                - user_name
                - agree
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
  '/api/{ver}/user':
    get:
      summary: 'Browse user.'
      operationId: browseUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: exercitationem
                view:
                  type: string
                  description: ''
                  example: repudiandae
                gender:
                  type: number
                  description: ''
                  example: 6963090.8
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 77
                limit:
                  type: number
                  description: ''
                  example: 28695.34076083
                sort:
                  type: string
                  description: ''
                  example: labore
                sort_type:
                  type: string
                  description: ''
                  example: ipsam
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: tcrlabhuizwojwykgpxepuecbniiiogmrxqh
                country_state_id:
                  type: string
                  description: ''
                  example: aliquam
                city:
                  type: string
                  description: ''
                  example: null
                city_code:
                  type: string
                  description: ''
                  example: adipisci
                is_featured:
                  type: number
                  description: ''
                  example: 39011751.193748
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/user/account':
    get:
      summary: ''
      operationId: getApiVerUserAccount
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/email-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountEmailForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: voluptatem
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/phone-number-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountPhoneNumberForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: deserunt
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/review-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountReviewForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/timezone-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountTimezoneForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  '/api/{ver}/user/activity':
    get:
      summary: ''
      operationId: getApiVerUserActivity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/user/avatar/{user}':
    post:
      summary: 'Upload avatar.'
      operationId: uploadAvatar
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image_crop:
                  type: string
                  description: ''
                  example: neque
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 904895.52
                photo_id:
                  type: number
                  description: ''
                  example: 5.73360057
              required:
                - image_crop
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/user/ban':
    post:
      summary: 'Ban user.'
      operationId: banUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 24252409.170055
                day:
                  type: number
                  description: 'Must be at least 0.'
                  example: 84
                reason:
                  type: string
                  description: ''
                  example: null
                return_user_group:
                  type: number
                  description: 'Must be at least 1.'
                  example: 63
              required:
                - user_id
                - day
                - return_user_group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
  '/api/{ver}/user/ban/{id}':
    delete:
      summary: 'Un-ban user.'
      operationId: unBanUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ban.'
        example: '77'
        required: true
        schema:
          type: string
  '/api/{ver}/user/city':
    get:
      summary: ''
      operationId: getApiVerUserCity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: necessitatibus
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: dwwfsknkbvwztuogakdco
                state:
                  type: string
                  description: ''
                  example: rerum
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 2
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
  '/api/{ver}/user/country/state':
    get:
      summary: ''
      operationId: getApiVerUserCountryState
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: est
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: zpczxjceahdqyhwryikwtppyzusmjztduyykpgeqrjyyzhfiglfrbycvdqtrwclswmhsnnxduqacblijvgsbfnjt
                state:
                  type: string
                  description: ''
                  example: magnam
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 1
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  '/api/{ver}/user/cover/{user}':
    post:
      summary: 'Update cover.'
      operationId: updateCover
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 196.260635
                position:
                  type: string
                  description: ''
                  example: culpa
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
  '/api/{ver}/user/exist':
    get:
      summary: ''
      operationId: getApiVerUserExist
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when none of <code>user_name</code> and <code>phone_number</code> are present.  Must be a valid email address.'
                  example: zchristiansen@example.org
                phone_number:
                  type: string
                  description: 'This field is required when none of <code>user_name</code> and <code>email</code> are present.'
                  example: aut
                user_name:
                  type: string
                  description: 'This field is required when none of <code>email</code> and <code>phone_number</code> are present.'
                  example: totam
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  '/api/{ver}/user/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerUserFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '059136'
        required: true
        schema:
          type: string
  '/api/{ver}/user/form':
    get:
      summary: 'Get user registration form.'
      operationId: getUserRegistrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
  '/api/{ver}/user/info/{user}':
    get:
      summary: ''
      operationId: getApiVerUserInfoUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: amet
        required: true
        schema:
          type: string
  '/api/{ver}/user/login':
    post:
      summary: /login.
      operationId: login
      description: 'Logged in by email and password.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The email of user.'
                  example: metafoxtest1@phpfox.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: '12345678'
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - username
                - password
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/edit/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordEditResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: nesciunt
                user_id:
                  type: number
                  description: ''
                  example: 1624.957633722
              required:
                - token
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: alias
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/request-method/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordRequestMethodResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: cassandra49@example.org
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - email
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/request-verify/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordRequestVerifyResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_method:
                  type: string
                  description: ''
                  example: quo
                user_id:
                  type: number
                  description: ''
                  example: 2395.049252854
              required:
                - request_method
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nam
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: iure
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/{resolution}':
    patch:
      summary: ''
      operationId: patchApiVerUserPasswordResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 208765610.34299
                token:
                  type: string
                  description: ''
                  example: qui
                new_password:
                  type: string
                  description: ''
                  example: velit
                new_password_confirmation:
                  type: string
                  description: 'This field is required when <code>new_password</code> is present.  The value and <code>new_password</code> must match.'
                  example: null
              required:
                - user_id
                - token
                - new_password
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ut
  '/api/{ver}/user/profile/form':
    get:
      summary: ''
      operationId: getApiVerUserProfileForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 81087.46
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/user/profile/gender':
    get:
      summary: ''
      operationId: getApiVerUserProfileGender
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aut
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 48
                is_custom:
                  type: number
                  description: ''
                  example: 43486614.43
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/user/quick-preview/{id}':
    get:
      summary: ''
      operationId: getApiVerUserQuickPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: impedit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the quick preview.'
        example: '20'
        required: true
        schema:
          type: string
  '/api/{ver}/user/refresh':
    post:
      summary: ''
      operationId: postApiVerUserRefresh
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: ''
                  example: quas
              required:
                - refresh_token
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
  '/api/{ver}/user/remove-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerUserRemoveCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '4'
  '/api/{ver}/user/shortcut':
    get:
      summary: 'Browse shortcuts.'
      operationId: browseShortcuts
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 89
                limit:
                  type: number
                  description: ''
                  example: 138651.962154
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
  '/api/{ver}/user/shortcut/edit':
    get:
      summary: 'View shortcut.'
      operationId: viewShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 69
                limit:
                  type: number
                  description: ''
                  example: 368489.109
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/user/shortcut/manage/{id}':
    put:
      summary: 'Update shortcut.'
      operationId: updateShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sort_type:
                  type: string
                  description: ''
                  example: laboriosam
              required:
                - sort_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the manage.'
        example: '002927723'
        required: true
        schema:
          type: string
  '/api/{ver}/user/simple/{user}':
    get:
      summary: 'View minimized user information.'
      operationId: viewMinimizedUserInformation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: earum
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify':
    post:
      summary: ''
      operationId: postApiVerUserVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: similique
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '113527'
              required:
                - action
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/form':
    get:
      summary: ''
      operationId: getApiVerUserVerifyForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: enim
                user_id:
                  type: number
                  description: ''
                  example: 59.069
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: toy.mikayla@example.com
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: recusandae
                resolution:
                  type: string
                  description: ''
                  example: velit
              required:
                - action
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/resend':
    post:
      summary: ''
      operationId: postApiVerUserVerifyResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: quod
                user_id:
                  type: number
                  description: ''
                  example: 48.77
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: mose35@example.com
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: qui
              required:
                - action
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/resendLink':
    post:
      summary: ''
      operationId: postApiVerUserVerifyResendLink
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: laurianne.conroy@example.org
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/{hash}':
    post:
      summary: ''
      operationId: postApiVerUserVerifyHash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: quas
        required: true
        schema:
          type: string
  '/api/{ver}/user/{id}/item-stats':
    get:
      summary: ''
      operationId: getApiVerUserIdItemStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: ea
                item_id:
                  type: number
                  description: ''
                  example: 88465.1652285
              required:
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '2239'
        required: true
        schema:
          type: string
  '/api/{ver}/user/{id}':
    get:
      summary: 'View user.'
      operationId: viewUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '1704'
        required: true
        schema:
          type: string
  '/api/{ver}/video':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quia
                view:
                  type: string
                  description: ''
                  example: molestias
                sort:
                  type: string
                  description: ''
                  example: reiciendis
                sort_type:
                  type: string
                  description: ''
                  example: minima
                when:
                  type: string
                  description: ''
                  example: sunt
                category_id:
                  type: number
                  description: ''
                  example: 44578074.799728
                owner_id:
                  type: integer
                  description: ''
                  example: 10
                user_id:
                  type: number
                  description: ''
                  example: 380.1920019
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 24
                limit:
                  type: number
                  description: ''
                  example: 606.311
                is_featured:
                  type: number
                  description: ''
                  example: 2.4
    post:
      summary: 'Create a resource.'
      operationId: createAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quasi
                text:
                  type: string
                  description: ''
                  example: ut
                file:
                  type: string
                  description: 'This field is required when <code>video_url</code> is not present.'
                  example: null
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 83603853.56819
                video_url:
                  type: string
                  description: 'This field is required when <code>file</code> is not present.  Must be a valid URL.'
                  example: 'http://dicki.com/quis-sint-tenetur-ad-iure-rerum.html'
                categories:
                  type: array
                  description: ''
                  example:
                    - 33.04
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 3111.9
                privacy:
                  type: string
                  description: ''
                  example: voluptatem
                is_posted_from_feed:
                  type: number
                  description: ''
                  example: 13889.97
              required:
                - title
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
  '/api/{ver}/video/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: esse
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/video/callback/{provider}':
    post:
      summary: ''
      operationId: postApiVerVideoCallbackProvider
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/video/category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 263.197
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                q:
                  type: string
                  description: ''
                  example: aut
                level:
                  type: number
                  description: ''
                  example: 45105.2357308
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 81
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  description: ''
                  example: []
                  properties: []
                name_url:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: 'http://bins.info/'
                is_active:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 1
                ordering:
                  type: number
                  description: 'Must be at least 0.'
                  example: 71
                parent_id:
                  type: number
                  description: ''
                  example: 4831.8
              required:
                - name
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/video/category/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: '26'
        required: true
        schema:
          type: string
  '/api/{ver}/video/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/video/fetch':
    post:
      summary: 'View link.'
      operationId: viewLink
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://ruecker.info/est-neque-ipsa-blanditiis.html'
              required:
                - link
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
  '/api/{ver}/video/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 36882514.643262
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/video/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: sit
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '409'
        required: true
        schema:
          type: string
  '/api/{ver}/video/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: saepe
                text:
                  type: string
                  description: ''
                  example: suscipit
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 2.74063
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: consequatur
                categories:
                  type: array
                  description: ''
                  example:
                    - 2.0151
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 21.67433
                privacy:
                  type: string
                  description: ''
                  example: a
              required:
                - privacy
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: debitis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '7384'
        required: true
        schema:
          type: string
tags:
  -
    name: 'Activity Point'
    description: "App name: Activity Point\nVersion: 5.1.1\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Advertise
    description: "App name: Advertise\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Announcement
    description: "App name: Announcement\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Attachments
    description: "App name: Attachments\nVersion: 5.0.2\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Authorization
    description: "App name: Authorization\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Blog
    description: "App name: Blog\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: CAPTCHA
    description: "App name: CAPTCHA\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Chat
    description: "App name: Chat\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: ChatPlus
    description: "App name: ChatPlus\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Comment
    description: "App name: Comment\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Contact
    description: "App name: Contact\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Core
    description: "App name: Core\nVersion: 5.1.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: E-Wallet
    description: "App name: E-Wallet\nVersion: 5.1.0\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Event
    description: "App name: Event\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Feed
    description: "App name: Feed\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Follow
    description: "App name: Follow\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Forum
    description: "App name: Forum\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Friend
    description: "App name: Friend\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Group
    description: "App name: Group\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Hashtags
    description: "App name: Hashtags\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Invitations
    description: "App name: Invitations\nVersion: 5.0.4\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Live Video'
    description: "App name: Live Video\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Marketplace
    description: "App name: Marketplace\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Menu
    description: "App name: Menu\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Multi-Factor Authentication'
    description: "App name: Multi-Factor Authentication\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Music
    description: "App name: Music\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Notification
    description: "App name: Notification\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Page
    description: "App name: Page\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: PayPal
    description: "App name: PayPal\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Payment Gateway'
    description: "App name: Payment Gateway\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Payment Processor'
    description: "App name: Payment Processor\nVersion: 5.0.2\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Photo
    description: "App name: Photo\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Poll
    description: "App name: Poll\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Quiz
    description: "App name: Quiz\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Reactions
    description: "App name: Reactions\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Report
    description: "App name: Report\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: SEO
    description: "App name: SEO\nVersion: 5.0.8\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'SMS Gateway'
    description: "App name: SMS Gateway\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Saved
    description: "App name: Saved\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Search
    description: "App name: Search\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Social Connect'
    description: "App name: Social Connect\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Static Page'
    description: "App name: Static Page\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Status Background'
    description: "App name: Status Background\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Sticker
    description: "App name: Sticker\nVersion: 5.1.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Story
    description: "App name: Story\nVersion: 5.0.1\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Subscription
    description: "App name: Subscription\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Theme
    description: "App name: Theme\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: User
    description: "App name: User\nVersion: 5.1.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Video
    description: "App name: Video\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
