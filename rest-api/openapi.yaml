openapi: 3.0.3
info:
  title: 'MetaFox APIs'
  description: "Version: v5.1.7\nUpdated: Dec 08, 2023"
  version: 1.0.0
servers:
  -
    url: 'https://demo.metafox.app/api/v1'
paths:
  '/api/{ver}/activitypoint/conversion-request':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: impedit
                from_date:
                  type: string
                  description: ''
                  example: enim
                to_date:
                  type: string
                  description: ''
                  example: aut
                limit:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 1
                id:
                  type: integer
                  description: ''
                  example: 19
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/conversion-request/{id}':
    get:
      summary: ''
      operationId: getApiVerActivitypointConversionRequestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the conversion request.'
        example: '211'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/conversion-request/{id}/cancel':
    patch:
      summary: ''
      operationId: patchApiVerActivitypointConversionRequestIdCancel
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the conversion request.'
        example: '97'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: query
          name: q
          description: 'search text'
          example: qui
          required: false
          schema:
            type: string
            description: 'search text'
            example: qui
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: iure
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_liked
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 63
                limit:
                  type: integer
                  description: ''
                  example: 7
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package-transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: inventore
                status:
                  type: string
                  description: ''
                  example: dolor
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:05'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:05'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_viewed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 28
                limit:
                  type: integer
                  description: ''
                  example: 14
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package/purchase/{id}':
    post:
      summary: ''
      operationId: postApiVerActivitypointPackagePurchaseId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: integer
                  description: ''
                  example: 10
              required:
                - payment_gateway
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the purchase.'
        example: '091'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the package.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/setting':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_discussed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/statistic/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '65'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: ''
                  example: 15
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:05'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:05'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: latest
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 52
                limit:
                  type: integer
                  description: ''
                  example: 16
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/transaction/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '21'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 423.73
                view:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: ''
                  example: quos
                end_date:
                  type: string
                  description: ''
                  example: est
                status:
                  type: string
                  description: ''
                  example: ad
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 52
                limit:
                  type: number
                  description: ''
                  example: 39928.1
      security: []
    post:
      summary: ''
      operationId: postApiVerAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 3325.1830833
                image:
                  type: object
                  description: ''
                  example: []
                  properties:
                    status:
                      type: string
                      description: 'This field is required when <code>image.temp_file</code> is present.'
                      example: eum
                    temp_file:
                      type: number
                      description: 'This field is required when <code>image.id</code> is <code>0</code>.'
                      example: 31.3486
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://kerluke.com/velit-quia-aut-expedita-perspiciatis-porro-consequatur'
                image_tooltip:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ipvjsvw
                html_title:
                  type: string
                  description: 'This field is required when <code>creation_type</code> is <code>html</code>. Must not be greater than 25 characters.'
                  example: e
                html_description:
                  type: string
                  description: 'Must not be greater than 135 characters.'
                  example: cvirvuxcpjiqoegevghvwj
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: gmtwhyboturgqwtgfmubhzk
                total_click:
                  type: string
                  description: ''
                  example: null
                total_impression:
                  type: string
                  description: ''
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 83
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - tenetur
                  items:
                    type: string
                is_active:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:05'
                end_date:
                  type: string
                  description: ''
                  example: null
                creation_type:
                  type: string
                  description: ''
                  example: placeat
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - placement_id
                - image
                - url
                - title
                - start_date
                - creation_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/active/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/hide/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseHideId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide.'
        example: '781'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/report/{id}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertiseReportId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_type:
                  type: string
                  description: ''
                  example: quia
                view:
                  type: string
                  description: ''
                  example: eaque
                start_date_month:
                  type: string
                  description: ''
                  example: minima
                end_date_month:
                  type: string
                  description: ''
                  example: quia
                start_date_week:
                  type: string
                  description: ''
                  example: qui
                end_date_week:
                  type: string
                  description: ''
                  example: provident
                start_date_day:
                  type: string
                  description: ''
                  example: nam
                end_date_day:
                  type: string
                  description: ''
                  example: adipisci
              required:
                - report_type
                - view
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the report.'
        example: '2611778'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/show':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertiseShow
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 46.827916
                location:
                  type: string
                  description: ''
                  example: cumque
              required:
                - placement_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/total/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseTotalId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: quia
              required:
                - type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the total.'
        example: '28591'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: ''
      operationId: putApiVerAdvertiseAdvertiseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: inabxvasxuriokdplzaaqbox
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: number
                  description: 'Must be at least 1.'
                  example: 48
                age_to:
                  type: number
                  description: ''
                  example: 1.0
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - amet
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the advertise.'
        example: '730'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: iusto
                end_date:
                  type: string
                  description: ''
                  example: velit
                status:
                  type: string
                  description: ''
                  example: incidunt
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 84
                limit:
                  type: number
                  description: ''
                  example: 245.214732566
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '58'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/change':
    post:
      summary: ''
      operationId: postApiVerAdvertiseInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 219.72906
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                item_type:
                  type: string
                  description: ''
                  example: enim
                payment_gateway:
                  type: number
                  description: ''
                  example: 88.7
              required:
                - item_id
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloribus
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/payment':
    post:
      summary: ''
      operationId: postApiVerAdvertiseInvoicePayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 28.284
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 19
                item_type:
                  type: string
                  description: ''
                  example: provident
                payment_gateway:
                  type: number
                  description: ''
                  example: 0.637693509
              required:
                - item_id
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: quod
                end_date:
                  type: string
                  description: ''
                  example: alias
                status:
                  type: string
                  description: ''
                  example: ut
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 33
                limit:
                  type: number
                  description: ''
                  example: 10.589
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: alcapmhxbrkdogluwldqdx
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 54
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - at
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:05'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: dolorum
                item_id:
                  type: integer
                  description: ''
                  example: 16
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 100
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/active/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseSponsorActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iusto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '18'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/feed':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: yvwizouoqnqdihisrf
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 16
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - iure
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:05'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: eaque
                item_id:
                  type: integer
                  description: ''
                  example: 2
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 99
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/form/feed/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseSponsorFormFeedItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: itemType
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: non
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/form/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseSponsorFormItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: itemType
        description: ''
        example: placeat
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: fcludpvfo
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 53
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - inventore
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '74'
        required: true
        schema:
          type: string
  '/api/{ver}/sponsor/total/click':
    post:
      summary: ''
      operationId: postApiVerSponsorTotalClick
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: molestiae
                item_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugit
        required: true
        schema:
          type: string
  '/api/{ver}/sponsor/total/view':
    post:
      summary: ''
      operationId: postApiVerSponsorTotalView
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: soluta
                item_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
  '/api/{ver}/announcement':
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
  '/api/{ver}/announcement/view':
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: announcement_id
          description: ''
          example: 14.39
          required: true
          schema:
            type: number
            description: ''
            example: 14.39
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    post:
      summary: 'Hide announcement.'
      operationId: hideAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                announcement_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 48
              required:
                - announcement_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/{ver}/announcement/{id}':
    get:
      summary: 'View announcement.'
      operationId: viewAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the announcement.'
        example: '366'
        required: true
        schema:
          type: string
  '/api/{ver}/attachment':
    post:
      summary: 'Upload attachment.'
      operationId: uploadAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: ut
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 8192 kilobytes.'
                item_type:
                  type: string
                  description: ''
                  example: nesciunt
                upload_type:
                  type: string
                  description: ''
                  example: ea
              required:
                - file
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/attachment/download/{id}':
    get:
      summary: 'Allow downloading resource.'
      operationId: allowDownloadingResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/authorization/device':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  description: ''
                  example: ipsam
                device_id:
                  type: string
                  description: ''
                  example: veritatis
                device_uid:
                  type: string
                  description: ''
                  example: ex
                token_source:
                  type: string
                  description: ''
                  example: ut
                platform:
                  type: string
                  description: ''
                  example: voluptas
                platform_version:
                  type: string
                  description: ''
                  example: tenetur
                extra:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - device_token
                - device_id
                - token_source
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
  '/api/{ver}/blog':
    get:
      summary: 'Browse blog.'
      operationId: browseBlog
      description: ''
      parameters:
        -
          in: query
          name: q
          description: ''
          example: in
          required: false
          schema:
            type: string
            description: ''
            example: in
        -
          in: query
          name: view
          description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
          example: draft
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
            example: draft
        -
          in: query
          name: sort
          description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
          example: most_liked
          required: false
          schema:
            type: string
            description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
            example: most_liked
        -
          in: query
          name: sort_type
          description: 'Must be one of <code>desc</code> or <code>asc</code>.'
          example: desc
          required: false
          schema:
            type: string
            description: 'Must be one of <code>desc</code> or <code>asc</code>.'
            example: desc
        -
          in: query
          name: when
          description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
          example: this_month
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
            example: this_month
        -
          in: query
          name: category_id
          description: ''
          example: 20
          required: false
          schema:
            type: integer
            description: ''
            example: 20
        -
          in: query
          name: user_id
          description: 'The profile id to filter.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'The profile id to filter.'
            example: 0
        -
          in: query
          name: owner_id
          description: ''
          example: 10
          required: false
          schema:
            type: integer
            description: ''
            example: 10
        -
          in: query
          name: page
          description: 'Must be at least 1.'
          example: 83
          required: false
          schema:
            type: integer
            description: 'Must be at least 1.'
            example: 83
        -
          in: query
          name: limit
          description: ''
          example: 14
          required: false
          schema:
            type: integer
            description: ''
            example: 14
        -
          in: query
          name: is_featured
          description: ''
          example: null
          required: false
          schema:
            type: string
            description: ''
            example: null
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    post:
      summary: 'Create blog.'
      operationId: createBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: laudantium
                categories:
                  type: array
                  description: ''
                  example:
                    - 19953.2256403
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 168321964.86
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 1393.77
                text:
                  type: string
                  description: ''
                  example: impedit
                draft:
                  type: number
                  description: ''
                  example: 532.47765666
                tags:
                  type: array
                  description: ''
                  example:
                    - accusantium
                  items:
                    type: string
                privacy:
                  type: string
                  description: ''
                  example: tempora
                captcha:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - quidem
                  items:
                    type: number
              required:
                - title
                - text
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugit
        required: true
        schema:
          type: string
  '/api/{ver}/blog-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 624642549.2601
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 30
                q:
                  type: string
                  description: ''
                  example: labore
                level:
                  type: number
                  description: ''
                  example: 61996583.2
                limit:
                  type: number
                  description: ''
                  example: 34405.052802
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deserunt
        required: true
        schema:
          type: string
  '/api/{ver}/blog/approve/{id}':
    patch:
      summary: 'Approve blog.'
      operationId: approveBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/feature/{id}':
    patch:
      summary: 'Feature blog.'
      operationId: featureBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '040'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/form':
    get:
      summary: ''
      operationId: getApiVerBlogForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 52.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/blog/form/{id}':
    get:
      summary: ''
      operationId: getApiVerBlogFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 820.83767
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '6786'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/publish/{id}':
    patch:
      summary: 'Publish blog.'
      operationId: publishBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the publish.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/search-form':
    get:
      summary: 'Get search form.'
      operationId: getSearchForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
  '/api/{ver}/blog/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor blog in feed.'
      operationId: sponsorBlogInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 29735.61565
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempora
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '70'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/sponsor/{id}':
    patch:
      summary: 'Sponsor blog.'
      operationId: sponsorBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: doloribus
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/{id}':
    get:
      summary: 'View Blog.'
      operationId: viewBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    put:
      summary: 'Update blog.'
      operationId: updateBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: ex
                categories:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 18
                  items:
                    type: integer
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 862696.82368732
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: quis
                text:
                  type: string
                  description: ''
                  example: qui
                tags:
                  type: array
                  description: ''
                  example:
                    - qui
                  items:
                    type: string
                draft:
                  type: number
                  description: ''
                  example: 117438.2452
                published:
                  type: boolean
                  description: ''
                  example: true
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - impedit
                  items:
                    type: number
    delete:
      summary: 'Delete blog.'
      operationId: deleteBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the blog.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/captcha/verify':
    post:
      summary: ''
      operationId: postApiVerCaptchaVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CAPTCHA
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                action_name:
                  type: string
                  description: ''
                  example: omnis
                captcha:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  '/api/{ver}/image-captcha/refresh':
    post:
      summary: ''
      operationId: postApiVerImageCaptchaRefresh
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CAPTCHA
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/chat':
    get:
      summary: ''
      operationId: getApiVerChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: enim
                room_id:
                  type: number
                  description: ''
                  example: 3325022.5
                last_message_id:
                  type: number
                  description: ''
                  example: 1.2282
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 22
                limit:
                  type: integer
                  description: ''
                  example: 14
      security: []
    post:
      summary: ''
      operationId: postApiVerChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_id:
                  type: number
                  description: ''
                  example: 15662191.088515
                message:
                  type: string
                  description: ''
                  example: et
                type:
                  type: string
                  description: ''
                  example: voluptatem
                reply_id:
                  type: integer
                  description: ''
                  example: 7
                tempId:
                  type: string
                  description: ''
                  example: adipisci
                attachments:
                  type: array
                  description: ''
                  example:
                    - repellat
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room':
    get:
      summary: ''
      operationId: getApiVerChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: soluta
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 85
                limit:
                  type: integer
                  description: ''
                  example: 12
      security: []
    post:
      summary: ''
      operationId: postApiVerChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                member_ids:
                  type: array
                  description: ''
                  example:
                    - 49.0871139
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - quidem
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/addForm':
    get:
      summary: ''
      operationId: getApiVerChatRoomAddForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/mark-all-read':
    put:
      summary: ''
      operationId: putApiVerChatRoomMarkAllRead
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_ids:
                  type: array
                  description: ''
                  example:
                    - 4.36
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: hic
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/mark-read/{id}':
    put:
      summary: ''
      operationId: putApiVerChatRoomMarkReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the mark read.'
        example: '099'
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/{id}':
    get:
      summary: ''
      operationId: getApiVerChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: modi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the chat room.'
        example: '58'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: earum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '97'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/react/{id}':
    put:
      summary: ''
      operationId: putApiVerChatReactId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                react:
                  type: string
                  description: ''
                  example: harum
                remove:
                  type: boolean
                  description: ''
                  example: true
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the react.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/remove/{id}':
    put:
      summary: ''
      operationId: putApiVerChatRemoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/{id}':
    get:
      summary: ''
      operationId: getApiVerChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    put:
      summary: ''
      operationId: putApiVerChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: aliquid
                type:
                  type: string
                  description: ''
                  example: eos
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the chat.'
        example: '47461765'
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/can-create-direct-message/{type}/{id_from}/{id_to}':
    get:
      summary: ''
      operationId: getApiVerChatplusCanCreateDirectMessageTypeId_fromId_to
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: id_from
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id_to
        description: ''
        example: natus
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/export-users':
    get:
      summary: ''
      operationId: getApiVerChatplusExportUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/jobs':
    get:
      summary: ''
      operationId: getApiVerChatplusJobs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/me':
    get:
      summary: ''
      operationId: getApiVerChatplusMe
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/prefetch-users':
    get:
      summary: ''
      operationId: getApiVerChatplusPrefetchUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/rooms/upload/{room_id}':
    post:
      summary: ''
      operationId: postApiVerChatplusRoomsUploadRoom_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ''
                  example: qui
                roomId:
                  type: string
                  description: ''
                  example: deleniti
                token:
                  type: string
                  description: ''
                  example: aliquid
                msg:
                  type: string
                  description: ''
                  example: deleniti
                file:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - userId
                - roomId
                - token
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: pariatur
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/settings':
    get:
      summary: ''
      operationId: getApiVerChatplusSettings
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/spotlight':
    get:
      summary: ''
      operationId: getApiVerChatplusSpotlight
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illum
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/user/{type}/{query}':
    get:
      summary: ''
      operationId: getApiVerChatplusUserTypeQuery
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
      -
        in: path
        name: query
        description: ''
        example: vero
        required: true
        schema:
          type: string
  '/api/{ver}/comment':
    get:
      summary: 'Browse comments.'
      operationId: browseComments
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1288.245818
                item_type:
                  type: string
                  description: ''
                  example: minima
                parent_id:
                  type: number
                  description: ''
                  example: 0.82738
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 53
                limit:
                  type: number
                  description: ''
                  example: 500.36
                sort:
                  type: string
                  description: ''
                  example: dolorem
                sort_type:
                  type: string
                  description: ''
                  example: ut
                last_id:
                  type: number
                  description: ''
                  example: 64.16153
                excludes:
                  type: array
                  description: ''
                  example:
                    - 77.842679
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 1
              required:
                - item_id
                - item_type
    post:
      summary: 'Create comment.'
      operationId: createComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 4197.624037
                item_type:
                  type: string
                  description: ''
                  example: itaque
                text:
                  type: string
                  description: 'This field is required when none of <code>photo_id</code> and <code>sticker_id</code> are present.'
                  example: et
                parent_id:
                  type: number
                  description: ''
                  example: 531851772.48
                photo_id:
                  type: number
                  description: ''
                  example: 7.9795326
                sticker_id:
                  type: number
                  description: ''
                  example: 2519.94
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: libero
        required: true
        schema:
          type: string
  '/api/{ver}/comment-lists':
    get:
      summary: ''
      operationId: getApiVerCommentLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 10.3538568
                item_type:
                  type: string
                  description: ''
                  example: corrupti
                parent_id:
                  type: number
                  description: ''
                  example: 49789293.2
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 81
                limit:
                  type: number
                  description: ''
                  example: 243076.384396
                sort:
                  type: string
                  description: ''
                  example: sit
                sort_type:
                  type: string
                  description: ''
                  example: quam
                last_id:
                  type: number
                  description: ''
                  example: 6436999.1678547
                excludes:
                  type: array
                  description: ''
                  example:
                    - 2684.27773407
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 17
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
  '/api/{ver}/comment/approve/{id}':
    patch:
      summary: 'Approve comment.'
      operationId: approveComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '078'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/download/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentDownloadId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/hide':
    post:
      summary: ''
      operationId: postApiVerCommentHide
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: number
                  description: ''
                  example: 2.02644877
                is_hidden:
                  type: string
                  description: ''
                  example: quisquam
                is_global:
                  type: string
                  description: ''
                  example: null
              required:
                - comment_id
                - is_hidden
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quaerat
        required: true
        schema:
          type: string
  '/api/{ver}/comment/history-edit/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentHistoryEditId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the history edit.'
        example: '01666'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/preview/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: '871711'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/related-comment':
    get:
      summary: ''
      operationId: getApiVerCommentRelatedComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1905.0
                item_type:
                  type: string
                  description: ''
                  example: debitis
                parent_id:
                  type: number
                  description: ''
                  example: 51711123.675454
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 50
                limit:
                  type: number
                  description: ''
                  example: 63.2
                sort:
                  type: string
                  description: ''
                  example: adipisci
                sort_type:
                  type: string
                  description: ''
                  example: ut
                last_id:
                  type: number
                  description: ''
                  example: 1578491.7043611
                excludes:
                  type: array
                  description: ''
                  example:
                    - 867664.435851
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 10
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ab
        required: true
        schema:
          type: string
  '/api/{ver}/comment/{id}':
    get:
      summary: 'View comment.'
      operationId: viewComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    put:
      summary: 'Update comment.'
      operationId: updateComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: culpa
                photo_id:
                  type: string
                  description: ''
                  example: null
                is_hide:
                  type: number
                  description: ''
                  example: 5278.0
                sticker_id:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Remove comment.'
      operationId: removeComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/{id}/remove-preview':
    patch:
      summary: ''
      operationId: patchApiVerCommentIdRemovePreview
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '518047'
        required: true
        schema:
          type: string
  '/api/{ver}/contact':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ''
                  example: 11
                full_name:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: br
                subject:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: de
                email:
                  type: string
                  description: 'Must be a valid email address. Must be between 1 and 255 characters.'
                  example: zulauf.morgan@example.com
                message:
                  type: string
                  description: ''
                  example: molestias
                send_copy:
                  type: integer
                  description: ''
                  example: 15
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - category_id
                - full_name
                - subject
                - email
                - message
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
  '/api/{ver}/core/admin/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: laboriosam
  '/api/{ver}/core/custom-privacy-option':
    get:
      summary: ''
      operationId: getApiVerCoreCustomPrivacyOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: facilis
                item_id:
                  type: number
                  description: ''
                  example: 2.211024
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 74
                limit:
                  type: number
                  description: ''
                  example: 3.324737254
                sort:
                  type: string
                  description: ''
                  example: qui
                sort_type:
                  type: string
                  description: ''
                  example: est
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/core/custom-privacy-option/form':
    get:
      summary: ''
      operationId: getApiVerCoreCustomPrivacyOptionForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusantium
        required: true
        schema:
          type: string
  '/api/{ver}/core/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getApiVerCoreFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: formName
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '529'
  '/api/{ver}/core/mobile/action-settings':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
  '/api/{ver}/core/mobile/app-settings':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deserunt
        required: true
        schema:
          type: string
  '/api/{ver}/core/mobile/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getApiVerCoreMobileFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: formName
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '3999'
  '/api/{ver}/core/mobile/settings/{revision}':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ut
  '/api/{ver}/core/package/build/callback':
    get:
      summary: ''
      operationId: getApiVerCorePackageBuildCallback
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildId:
                  type: string
                  description: ''
                  example: quisquam
              required:
                - buildId
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/api/{ver}/core/status':
    get:
      summary: 'View user badge status.'
      operationId: viewUserBadgeStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/core/translation/{group}/{lang}/{revision}':
    get:
      summary: ''
      operationId: getApiVerCoreTranslationGroupLangRevision
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officiis
        required: true
        schema:
          type: string
      -
        in: path
        name: group
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: lang
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: exercitationem
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: error
  '/api/{ver}/core/url-to-route':
    get:
      summary: 'Get canonical URL.'
      operationId: getCanonicalURL
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ''
                  example: nam
              required:
                - url
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/action-settings':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/app-settings':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: dolore
  '/api/{ver}/file':
    post:
      summary: 'Upload single.'
      operationId: uploadSingle
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: sapiente
                file:
                  type: string
                  description: ''
                  example: neque
                file_type:
                  type: string
                  description: ''
                  example: repellat
                item_type:
                  type: string
                  description: ''
                  example: illo
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: string
                base64:
                  type: string
                  description: ''
                  example: quo
              required:
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ex
        required: true
        schema:
          type: string
  '/api/{ver}/files':
    post:
      summary: 'Upload multiple file.'
      operationId: uploadMultipleFile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: tempora
                0:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: est
                upload_type:
                  type: string
                  description: ''
                  example: molestias
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - quia
                  items:
                    type: string
                file:
                  type: array
                  description: ''
                  example:
                    - suscipit
                  items:
                    type: string
              required:
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/link/fetch':
    post:
      summary: 'View link.'
      operationId: viewLink
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: ''
                  example: odit
              required:
                - link
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: beatae
        required: true
        schema:
          type: string
  '/api/{ver}/ping':
    get:
      summary: ''
      operationId: getApiVerPing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                from_date:
                  type: string
                  description: ''
                  example: consequuntur
                to_date:
                  type: string
                  description: ''
                  example: sint
                status:
                  type: string
                  description: ''
                  example: null
                id:
                  type: integer
                  description: ''
                  example: 2
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEmoneyRequestCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request/{id}':
    get:
      summary: ''
      operationId: getApiVerEmoneyRequestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/statistic/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: libero
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '65'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                base_currency:
                  type: string
                  description: ''
                  example: quia
                status:
                  type: string
                  description: ''
                  example: null
                from_date:
                  type: string
                  description: ''
                  example: fuga
                to_date:
                  type: string
                  description: ''
                  example: voluptatem
                buyer:
                  type: string
                  description: ''
                  example: facere
                id:
                  type: integer
                  description: ''
                  example: 5
                source:
                  type: string
                  description: ''
                  example: omnis
                type:
                  type: string
                  description: ''
                  example: consequatur
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/transaction/{id}':
    get:
      summary: ''
      operationId: getApiVerEmoneyTransactionId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '60'
        required: true
        schema:
          type: string
  '/api/{ver}/event':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: expedita
                view:
                  type: string
                  description: ''
                  example: aspernatur
                sort:
                  type: string
                  description: ''
                  example: molestiae
                sort_type:
                  type: string
                  description: ''
                  example: enim
                when:
                  type: string
                  description: ''
                  example: omnis
                category_id:
                  type: number
                  description: ''
                  example: 72362.672
                user_id:
                  type: number
                  description: ''
                  example: 22420691.493
                owner_id:
                  type: integer
                  description: ''
                  example: 4
                event_id:
                  type: number
                  description: ''
                  example: 10.89942758
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 38
                where:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: qylnyxr
                lat:
                  type: number
                  description: ''
                  example: 38.0162
                lng:
                  type: number
                  description: ''
                  example: 1791.0
                radius:
                  type: number
                  description: 'Must be at least 1.'
                  example: 14
                limit:
                  type: number
                  description: ''
                  example: 7.3595
                is_online:
                  type: number
                  description: ''
                  example: 79.7015
                is_featured:
                  type: number
                  description: ''
                  example: 53152199.92342
                bounds_west:
                  type: number
                  description: ''
                  example: 62.20925
                bounds_east:
                  type: number
                  description: ''
                  example: 4.5581886
                bounds_south:
                  type: number
                  description: ''
                  example: 1800.648562
                bounds_north:
                  type: number
                  description: ''
                  example: 35.373253
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: sit
                text:
                  type: string
                  description: ''
                  example: ad
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    file_type:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: error
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 3479819.7053238
                attachments:
                  type: array
                  description: ''
                  example:
                    - magnam
                  items:
                    type: number
                categories:
                  type: array
                  description: ''
                  example:
                    - 85.461578752
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 5004580.160386
                is_online:
                  type: number
                  description: ''
                  example: 0.0
                event_url:
                  type: string
                  description: 'This field is required when <code>is_online</code> is <code>1</code>.  Must be a valid URL.'
                  example: 'http://greenfelder.com/adipisci-cumque-eum-distinctio-corrupti-fugiat'
                start_time:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>end_time</code>.'
                  example: '2007-02-11'
                end_time:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_time</code>.'
                  example: '2042-06-30'
                location:
                  type: object
                  description: 'This field is required when <code>is_online</code> is <code>0</code>.'
                  example: null
                  properties: []
                privacy:
                  type: string
                  description: ''
                  example: ea
                host:
                  type: object
                  description: ''
                  example: null
                  properties: []
                image_position:
                  type: string
                  description: ''
                  example: expedita
              required:
                - name
                - is_online
                - start_time
                - end_time
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/event-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 0.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 78
                q:
                  type: string
                  description: ''
                  example: quam
                level:
                  type: number
                  description: ''
                  example: 0.58
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 48
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
  '/api/{ver}/event-code':
    post:
      summary: ''
      operationId: postApiVerEventCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 195543011.83662
                refresh:
                  type: integer
                  description: ''
                  example: 13
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: error
        required: true
        schema:
          type: string
  '/api/{ver}/event-code/accept/{code}':
    post:
      summary: ''
      operationId: postApiVerEventCodeAcceptCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolore
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/event-code/verify/{code}':
    get:
      summary: ''
      operationId: getApiVerEventCodeVerifyCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloribus
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/event-host-invite':
    put:
      summary: ''
      operationId: putApiVerEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 16409.01
                accept:
                  type: number
                  description: ''
                  example: 665705.25643
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3250629.7
                user_id:
                  type: string
                  description: ''
                  example: repellat
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getApiVerEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3051.4833687
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 52
                limit:
                  type: number
                  description: ''
                  example: 472.585929
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 2273.489607
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 53673.455876851
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - deleniti
                  items:
                    type: number
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/{ver}/event-invite':
    put:
      summary: ''
      operationId: putApiVerEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 14123.831
                accept:
                  type: number
                  description: ''
                  example: 10871290.7204
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 78545.53547609
                user_id:
                  type: string
                  description: ''
                  example: hic
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getApiVerEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 13311187.492214
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 6
                limit:
                  type: number
                  description: ''
                  example: 31.0455
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 802343.5
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 6734.0
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - et
                  items:
                    type: number
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/event-member':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                event_id:
                  type: number
                  description: ''
                  example: 46.0
                view:
                  type: string
                  description: ''
                  example: omnis
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 20
                limit:
                  type: number
                  description: ''
                  example: 2.074
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 855.240269
                invite_code:
                  type: string
                  description: ''
                  example: et
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/host':
    delete:
      summary: ''
      operationId: deleteApiVerEventMemberHost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 4894409.3
                user_id:
                  type: number
                  description: ''
                  example: 3674803.8975016
              required:
                - event_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/interest/{id}':
    put:
      summary: ''
      operationId: putApiVerEventMemberInterestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest:
                  type: number
                  description: ''
                  example: 1277950.8174
                invite_code:
                  type: string
                  description: ''
                  example: eaque
              required:
                - interest
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the interest.'
        example: '48981'
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/member':
    delete:
      summary: ''
      operationId: deleteApiVerEventMemberMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3512.9539
                user_id:
                  type: number
                  description: ''
                  example: 49726.461766231
              required:
                - event_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event member.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/event/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '61889'
        required: true
        schema:
          type: string
  '/api/{ver}/event/banner/{id}':
    post:
      summary: ''
      operationId: postApiVerEventBannerId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 915692562.7531
                position:
                  type: string
                  description: ''
                  example: at
    delete:
      summary: ''
      operationId: deleteApiVerEventBannerId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: animi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the banner.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/event/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/event/setting/form/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '7312'
        required: true
        schema:
          type: string
  '/api/{ver}/event/setting/{id}':
    put:
      summary: ''
      operationId: putApiVerEventSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 68079.0
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: '4610589'
        required: true
        schema:
          type: string
  '/api/{ver}/event/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor event in feed.'
      operationId: sponsorEventInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 40420970.49986
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '788722'
        required: true
        schema:
          type: string
  '/api/{ver}/event/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: veritatis
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '032200'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: vel
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/mass-email':
    post:
      summary: ''
      operationId: postApiVerEventIdMassEmail
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: ''
                  example: nihil
                text:
                  type: string
                  description: ''
                  example: ut
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '760290659'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/stats':
    get:
      summary: ''
      operationId: getApiVerEventIdStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/feed':
    get:
      summary: 'Browse feed item.'
      operationId: browseFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quam
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 46
                limit:
                  type: number
                  description: ''
                  example: 3036.54736855
                user_id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 37
                item_id:
                  type: number
                  description: ''
                  example: 3295.27
                item_type:
                  type: string
                  description: ''
                  example: repellat
                hashtag:
                  type: string
                  description: ''
                  example: null
                last_feed_id:
                  type: number
                  description: ''
                  example: 1480.269116
                related_comment_friend_only:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
                view:
                  type: string
                  description: ''
                  example: necessitatibus
                from:
                  type: string
                  description: ''
                  example: commodi
                type_id:
                  type: string
                  description: ''
                  example: aliquid
                sort:
                  type: string
                  description: ''
                  example: doloribus
                sort_type:
                  type: string
                  description: ''
                  example: soluta
                status:
                  type: string
                  description: ''
                  example: nemo
                is_preview_tag:
                  type: string
                  description: ''
                  example: null
                has_pin_post:
                  type: string
                  description: ''
                  example: null
                sponsored_feed_ids:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 11
                  items:
                    type: integer
    post:
      summary: 'Create feed.'
      operationId: createFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: suscipit
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 65
                parent_item_id:
                  type: string
                  description: ''
                  example: null
                post_as_parent:
                  type: string
                  description: ''
                  example: null
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: aut
                    lat:
                      type: number
                      description: ''
                      example: 41.508
                    lng:
                      type: number
                      description: ''
                      example: 2136211.51842
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 6488.18742
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 3516157.04
                      px:
                        type: number
                        description: ''
                        example: 4725453.471441
                      py:
                        type: number
                        description: ''
                        example: 26.3275385
              required:
                - post_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/feed/allow-preview/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedAllowPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_allowed:
                  type: string
                  description: ''
                  example: impedit
              required:
                - is_allowed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the allow preview.'
        example: '265349'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/approve/{id}':
    patch:
      summary: 'Approve pending post.'
      operationId: approvePendingPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '581712'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/archive/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedArchiveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the archive.'
        example: '2233'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/check-new':
    get:
      summary: ''
      operationId: getApiVerFeedCheckNew
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_feed_id:
                  type: number
                  description: ''
                  example: 40.8330115
                last_pin_feed_id:
                  type: number
                  description: ''
                  example: 13839568.9
                last_sponsored_feed_id:
                  type: number
                  description: ''
                  example: 518258245.6154
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/feed/create':
    get:
      summary: 'hot fix because of /api/v1/feed/create crashed.'
      operationId: hotFixBecauseOfapiv1feedcreateCrashed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
  '/api/{ver}/feed/decline/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedDeclineId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_block_author:
                  type: string
                  description: ''
                  example: null
                delete_activities:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the decline.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/edit/{id}':
    get:
      summary: 'Get status for edit.'
      operationId: getStatusForEdit
      description: 'GET: feed/edit/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: '825'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hidden':
    get:
      summary: 'Browse snooze.'
      operationId: browseSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 14
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
                limit:
                  type: number
                  description: ''
                  example: 19729459.0
                type:
                  type: string
                  description: 'Must be one of <code>friend</code>, <code>page</code>, or <code>group</code>.'
                  example: friend
                q:
                  type: string
                  description: ''
                  example: voluptate
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hidden/{id}':
    delete:
      summary: 'Remove snooze.'
      operationId: removeSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hidden.'
        example: '05154'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hide-all/{id}':
    post:
      summary: 'Hide a user.'
      operationId: hideAUser
      description: 'POST: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'UnHide a user.'
      operationId: unHideAUser
      description: 'DELETE: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide all.'
        example: '51'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hide-feed/{id}':
    post:
      summary: 'Hide a feed.'
      operationId: hideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Hide a feed.'
      operationId: unHideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide feed.'
        example: '44775'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/history/{id}':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the history.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/pin/{id}':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 17
              required:
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '54340'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/pin/{id}/home':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '049'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/post-type':
    get:
      summary: 'Get post types.'
      operationId: getPostTypes
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
  '/api/{ver}/feed/privacy/{id}':
    patch:
      summary: 'Update feed privacy.'
      operationId: updateFeedPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: dicta
              required:
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '616'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/share':
    post:
      summary: 'Share feed item.'
      operationId: shareFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_status:
                  type: string
                  description: ''
                  example: consectetur
                post_type:
                  type: string
                  description: ''
                  example: distinctio
                item_id:
                  type: number
                  description: ''
                  example: 3.19
                item_type:
                  type: string
                  description: ''
                  example: excepturi
                context_item_id:
                  type: number
                  description: ''
                  example: 2317274.49701
                context_item_type:
                  type: string
                  description: ''
                  example: animi
                type_id:
                  type: string
                  description: ''
                  example: quod
                post_content:
                  type: string
                  description: ''
                  example: nostrum
                parent_feed_id:
                  type: number
                  description: ''
                  example: 3.483
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: dolor
                    lat:
                      type: number
                      description: ''
                      example: 63441.3
                    lng:
                      type: number
                      description: ''
                      example: 26.13872
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 210.74305226
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 6325.1893
                      px:
                        type: number
                        description: ''
                        example: 2.407
                      py:
                        type: number
                        description: ''
                        example: 1.44497
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/feed/share/form':
    get:
      summary: 'View share form.'
      operationId: viewShareForm
      description: 'GET: feed/share/form'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/feed/snooze/{id}':
    post:
      summary: 'Snooze a user.'
      operationId: snoozeAUser
      description: 'POST: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Snooze a user.'
      operationId: unSnoozeAUser
      description: 'DELETE: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the snooze.'
        example: '31639'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/tag/{id}':
    delete:
      summary: 'Remove tag.'
      operationId: removeTag
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: '97864'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/tagged-friend':
    get:
      summary: 'Get tagged friends.'
      operationId: getTaggedFriends
      description: 'GET: /feed/tagged-friend'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 31
                limit:
                  type: number
                  description: ''
                  example: 3.68092593
                item_id:
                  type: number
                  description: ''
                  example: 23.678163
                item_type:
                  type: string
                  description: ''
                  example: necessitatibus
                excluded_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: similique
        required: true
        schema:
          type: string
  '/api/{ver}/feed/unpin/{id}':
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/unpin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 17
              required:
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the unpin.'
        example: '96141'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/{id}':
    get:
      summary: 'View feed item.'
      operationId: viewFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    put:
      summary: 'Update feed item.'
      operationId: updateFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: doloremque
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 77
                parent_item_id:
                  type: integer
                  description: ''
                  example: 17
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: rerum
                    lat:
                      type: number
                      description: ''
                      example: 91375.0
                    lng:
                      type: number
                      description: ''
                      example: 3.6
                tagged_friends:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 524.67
                      px:
                        type: number
                        description: ''
                        example: 7476.0279
                      py:
                        type: number
                        description: ''
                        example: 1665.59533
              required:
                - post_type
    delete:
      summary: 'Delete feed item.'
      operationId: deleteFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feed.'
        example: '72'
        required: true
        schema:
          type: string
  '/api/{ver}/follow':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ipsam
                view:
                  type: string
                  description: ''
                  example: ea
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>following</code>.'
                  example: 2217.27499461
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 86
                limit:
                  type: number
                  description: ''
                  example: 206.893040296
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 2.73
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
  '/api/{ver}/follow/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the follow.'
        example: '297'
        required: true
        schema:
          type: string
  '/api/{ver}/forum':
    get:
      summary: ''
      operationId: getApiVerForum
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 290769.0
                view:
                  type: string
                  description: ''
                  example: amet
                forum_id:
                  type: number
                  description: ''
                  example: 1.82968237
                q:
                  type: string
                  description: ''
                  example: doloremque
                sort:
                  type: string
                  description: ''
                  example: temporibus
                sort_thread:
                  type: string
                  description: ''
                  example: ad
                sort_post:
                  type: string
                  description: ''
                  example: nemo
                sort_type:
                  type: string
                  description: ''
                  example: saepe
                when:
                  type: string
                  description: ''
                  example: aliquam
                item_type:
                  type: string
                  description: ''
                  example: a
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 29328.97
                parent_id:
                  type: number
                  description: ''
                  example: 47105.07237
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magnam
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 51137.56652
                q:
                  type: string
                  description: ''
                  example: quae
                view:
                  type: string
                  description: ''
                  example: et
                sort:
                  type: string
                  description: ''
                  example: et
                sort_type:
                  type: string
                  description: ''
                  example: non
                when:
                  type: string
                  description: ''
                  example: aperiam
                thread_id:
                  type: number
                  description: ''
                  example: 118.694
                post_id:
                  type: number
                  description: ''
                  example: 97582.302512
                forum_id:
                  type: number
                  description: ''
                  example: 19037.93391
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 86
                limit:
                  type: number
                  description: ''
                  example: 3039599.8671845
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: number
                  description: ''
                  example: 3.0
                owner_id:
                  type: number
                  description: ''
                  example: 1676.89225571
                text:
                  type: string
                  description: ''
                  example: blanditiis
                attachments:
                  type: array
                  description: ''
                  example:
                    - ipsam
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - thread_id
                - text
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quisquam
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumPostApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '31314956'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumPostFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 155791.7676
                thread_id:
                  type: number
                  description: ''
                  example: 989.3711862
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '39'
  '/api/{ver}/forum-post/posters':
    get:
      summary: ''
      operationId: getApiVerForumPostPosters
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: string
                  description: ''
                  example: facere
              required:
                - thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/quote':
    post:
      summary: ''
      operationId: postApiVerForumPostQuote
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote_id:
                  type: number
                  description: ''
                  example: 1704.99286
                text:
                  type: string
                  description: ''
                  example: aut
                attachments:
                  type: array
                  description: ''
                  example:
                    - enim
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - quote_id
                - text
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/quote/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumPostQuoteFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '854'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: error
                attachments:
                  type: array
                  description: ''
                  example:
                    - consequatur
                  items:
                    type: number
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: debitis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum post.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-subs/{id}':
    get:
      summary: ''
      operationId: getApiVerForumSubsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum sub.'
        example: '499'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 13
                user_id:
                  type: number
                  description: ''
                  example: 679.788
                q:
                  type: string
                  description: ''
                  example: ipsam
                view:
                  type: string
                  description: ''
                  example: facere
                sort:
                  type: string
                  description: ''
                  example: inventore
                sort_type:
                  type: string
                  description: ''
                  example: vel
                when:
                  type: string
                  description: ''
                  example: hic
                forum_id:
                  type: number
                  description: ''
                  example: 16.6
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 85
                limit:
                  type: number
                  description: ''
                  example: 48366615.311573
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '7567007'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/close/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadCloseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_closed:
                  type: string
                  description: ''
                  example: necessitatibus
              required:
                - is_closed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the close.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/copy':
    post:
      summary: ''
      operationId: postApiVerForumThreadCopy
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 92354983.725139
                title:
                  type: string
                  description: 'Must be between  3 and 155 characters.'
                  example: rfrh
                thread_id:
                  type: number
                  description: ''
                  example: 3201.9
              required:
                - forum_id
                - title
                - thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/copy/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadCopyFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '6388'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/last-read/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadLastReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 53
              required:
                - post_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the last read.'
        example: '612383'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/merge':
    post:
      summary: ''
      operationId: postApiVerForumThreadMerge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 2984541.2286839
                current_thread_id:
                  type: number
                  description: ''
                  example: 265890233.81725
                merged_thread_id:
                  type: number
                  description: ''
                  example: 2.842
              required:
                - forum_id
                - current_thread_id
                - merged_thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/merge/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadMergeFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '051'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/move/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadMoveFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/move/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadMoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 202.28
              required:
                - forum_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the move.'
        example: '086'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor thread in feed.'
      operationId: sponsorThreadInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 37894.1419
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '1434'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: asperiores
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '512'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/stick/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadStickId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_sticked:
                  type: string
                  description: ''
                  example: velit
              required:
                - is_sticked
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the stick.'
        example: '496163'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/subscribe/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadSubscribeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_subscribed:
                  type: string
                  description: ''
                  example: molestiae
              required:
                - is_subscribed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscribe.'
        example: '154683'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/suggestion-search':
    get:
      summary: ''
      operationId: getApiVerForumThreadSuggestionSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 5
                user_id:
                  type: number
                  description: ''
                  example: 38.92
                q:
                  type: string
                  description: ''
                  example: voluptatem
                view:
                  type: string
                  description: ''
                  example: velit
                sort:
                  type: string
                  description: ''
                  example: blanditiis
                sort_type:
                  type: string
                  description: ''
                  example: reprehenderit
                when:
                  type: string
                  description: ''
                  example: inventore
                forum_id:
                  type: number
                  description: ''
                  example: 332560.0598992
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 20
                limit:
                  type: number
                  description: ''
                  example: 106.7538
                exclude_thread_ids:
                  type: string
                  description: ''
                  example: accusantium
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestias
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum thread.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/forum/option':
    get:
      summary: ''
      operationId: getApiVerForumOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 3806.76562
                view:
                  type: string
                  description: ''
                  example: ratione
                forum_id:
                  type: number
                  description: ''
                  example: 665435.0433
                q:
                  type: string
                  description: ''
                  example: rem
                sort:
                  type: string
                  description: ''
                  example: non
                sort_thread:
                  type: string
                  description: ''
                  example: dolor
                sort_post:
                  type: string
                  description: ''
                  example: minima
                sort_type:
                  type: string
                  description: ''
                  example: maxime
                when:
                  type: string
                  description: ''
                  example: provident
                item_type:
                  type: string
                  description: ''
                  example: necessitatibus
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 50
                limit:
                  type: number
                  description: ''
                  example: 463.0
                parent_id:
                  type: number
                  description: ''
                  example: 0.22607277
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/friend':
    get:
      summary: 'Browse friends.'
      operationId: browseFriends
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: accusantium
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: latest
                sort:
                  type: string
                  description: ''
                  example: id
                sort_type:
                  type: string
                  description: ''
                  example: nemo
                when:
                  type: string
                  description: ''
                  example: voluptatibus
                list_id:
                  type: number
                  description: ''
                  example: 555084.6971318
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 58168.097425
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 76
                limit:
                  type: number
                  description: ''
                  example: 471.0
                owner_id:
                  type: number
                  description: ''
                  example: 2967.651
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 4.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
  '/api/{ver}/friend/birthday':
    get:
      summary: 'Get birthday.'
      operationId: getBirthday
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                month:
                  type: number
                  description: 'Must be at least 1.'
                  example: 41
                view:
                  type: string
                  description: ''
                  example: fuga
                limit:
                  type: number
                  description: ''
                  example: 1.44
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/{ver}/friend/invite-to-item':
    get:
      summary: ''
      operationId: getApiVerFriendInviteToItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 7333.50978
                user_id:
                  type: number
                  description: ''
                  example: 3065368.86
                item_type:
                  type: string
                  description: ''
                  example: voluptas
                item_id:
                  type: number
                  description: ''
                  example: 29097.43847
                q:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - owner_id
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/friend/invite-to-owner':
    get:
      summary: 'Invite friend.'
      operationId: inviteFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: tenetur
                privacy_type:
                  type: string
                  description: ''
                  example: accusantium
                owner_id:
                  type: number
                  description: ''
                  example: 1.889651891
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 41
                limit:
                  type: number
                  description: ''
                  example: 0.6
                parent_id:
                  type: number
                  description: ''
                  example: 7812610.8122514
              required:
                - privacy_type
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempora
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list':
    get:
      summary: 'Browse friend lists.'
      operationId: browseFriendLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 77
                limit:
                  type: number
                  description: ''
                  example: 1195.0
                sort:
                  type: string
                  description: ''
                  example: ex
                sort_type:
                  type: string
                  description: ''
                  example: laborum
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellat
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/add-friend/{id}':
    post:
      summary: 'Add friend list.'
      operationId: addFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    put:
      summary: ''
      operationId: putApiVerFriendListAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '696007'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/assign/{id}':
    get:
      summary: 'Assign friend to list.'
      operationId: assignFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    post:
      summary: 'Assign multiple friend to list.'
      operationId: assignMultipleFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: libero
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the assign.'
        example: '59685'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/create':
    get:
      summary: ''
      operationId: getApiVerFriendListCreate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/{id}':
    get:
      summary: 'View friend list.'
      operationId: viewFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    put:
      summary: 'Update friend list.'
      operationId: updateFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 64 characters.'
                  example: nrjwmdoycp
              required:
                - name
    delete:
      summary: 'Remove friend list.'
      operationId: removeFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the list.'
        example: '22'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/{list}/edit':
    get:
      summary: ''
      operationId: getApiVerFriendListListEdit
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
      -
        in: path
        name: list
        description: 'The list.'
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/{ver}/friend/mention':
    get:
      summary: 'Load mentions.'
      operationId: loadMentions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sit
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: mutual
                sort:
                  type: string
                  description: ''
                  example: hic
                sort_type:
                  type: string
                  description: ''
                  example: velit
                when:
                  type: string
                  description: ''
                  example: dolor
                list_id:
                  type: number
                  description: ''
                  example: 13688729.70726
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 493.567
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 88
                limit:
                  type: number
                  description: ''
                  example: 69214646.80576
                owner_id:
                  type: number
                  description: ''
                  example: 1690354.0
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 2.83
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request':
    get:
      summary: 'Browse friend request.'
      operationId: browseFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: nihil
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 14
                limit:
                  type: number
                  description: ''
                  example: 2138376.643943
    post:
      summary: 'Create friend request.'
      operationId: createFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friend_user_id:
                  type: number
                  description: ''
                  example: 1602.0
              required:
                - friend_user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request/markAllAsRead':
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request/{id}':
    put:
      summary: 'Update friend request.'
      operationId: updateFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: est
              required:
                - action
    delete:
      summary: 'Remove friend request.'
      operationId: removeFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '65'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerFriendShareSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: dolor
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: latest
                sort:
                  type: string
                  description: ''
                  example: quidem
                sort_type:
                  type: string
                  description: ''
                  example: incidunt
                when:
                  type: string
                  description: ''
                  example: voluptate
                list_id:
                  type: number
                  description: ''
                  example: 423336.94
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 99309.7236
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 13
                limit:
                  type: number
                  description: ''
                  example: 0.83998
                owner_id:
                  type: number
                  description: ''
                  example: 4496.9
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 0.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/friend/suggestion':
    get:
      summary: 'Load suggestion.'
      operationId: loadSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 71
                limit:
                  type: number
                  description: ''
                  example: 6.8743
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: possimus
        required: true
        schema:
          type: string
  '/api/{ver}/friend/suggestion/hide-user':
    post:
      summary: 'Hide user suggestions.'
      operationId: hideUserSuggestions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 833460.0
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/friend/tag-suggestion':
    get:
      summary: 'Load friend suggestion for tagging.'
      operationId: loadFriendSuggestionForTagging
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                limit:
                  type: number
                  description: ''
                  example: 27.385609074
                item_id:
                  type: number
                  description: ''
                  example: 6.5
                item_type:
                  type: string
                  description: ''
                  example: veniam
                owner_id:
                  type: number
                  description: ''
                  example: 1.9
                excluded_ids:
                  type: array
                  description: ''
                  example:
                    - 495.409579776
                  items:
                    type: number
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/{ver}/friend/{id}':
    delete:
      summary: 'Remove friend.'
      operationId: removeFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the friend.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/group':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: porro
                view:
                  type: string
                  description: ''
                  example: libero
                sort:
                  type: string
                  description: ''
                  example: ea
                sort_type:
                  type: string
                  description: ''
                  example: ut
                when:
                  type: string
                  description: ''
                  example: porro
                type_id:
                  type: number
                  description: ''
                  example: 31410.19873
                category_id:
                  type: number
                  description: ''
                  example: 8054031.7900425
                owner_id:
                  type: integer
                  description: ''
                  example: 14
                user_id:
                  type: number
                  description: ''
                  example: 30.21
                is_featured:
                  type: number
                  description: ''
                  example: 79463273.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 17
                limit:
                  type: number
                  description: ''
                  example: 34423.43439
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: natus
                category_id:
                  type: number
                  description: ''
                  example: 37669.84846
                reg_method:
                  type: number
                  description: ''
                  example: 10164.4156
                text:
                  type: string
                  description: ''
                  example: quo
                users:
                  type: array
                  description: ''
                  example:
                    - magni
                  items:
                    type: number
              required:
                - name
                - reg_method
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/group-announcement':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 393217.90389223
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 53
                limit:
                  type: number
                  description: ''
                  example: 3.0
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 307.389367053
                item_id:
                  type: number
                  description: ''
                  example: 4419125.362
                item_type:
                  type: string
                  description: ''
                  example: voluptatibus
              required:
                - group_id
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 28.995
                item_id:
                  type: number
                  description: ''
                  example: 4699.27
                item_type:
                  type: string
                  description: ''
                  example: non
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
  '/api/{ver}/group-announcement/hide':
    post:
      summary: ''
      operationId: postApiVerGroupAnnouncementHide
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2854.34
                ann_id:
                  type: number
                  description: ''
                  example: 4478611.452991
              required:
                - group_id
                - ann_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/group-block':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 39110.92965
                q:
                  type: string
                  description: ''
                  example: sed
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                limit:
                  type: number
                  description: ''
                  example: 79.491072
              required:
                - group_id
      security: []
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 38891331.155304
                user_id:
                  type: number
                  description: ''
                  example: 174950.993
                delete_activities:
                  type: number
                  description: ''
                  example: 44732710.261
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: commodi
        required: true
        schema:
          type: string
  '/api/{ver}/group-block/{id}':
    get:
      summary: 'View item'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    put:
      summary: 'Update item'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    delete:
      summary: 'Delete item'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.0
                user_id:
                  type: number
                  description: ''
                  example: 32173879.0
                delete_activities:
                  type: number
                  description: ''
                  example: 68469.608158921
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group block.'
        example: '5385928'
        required: true
        schema:
          type: string
  '/api/{ver}/group-info/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: minus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group info.'
        example: '4036968'
        required: true
        schema:
          type: string
  '/api/{ver}/group-integrated/order':
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 187.1001
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
  '/api/{ver}/group-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group integrated.'
        example: '42'
        required: true
        schema:
          type: string
  '/api/{ver}/group-invite':
    get:
      summary: 'Browse group invitation.'
      operationId: browseGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.8
                q:
                  type: string
                  description: ''
                  example: et
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 19
                limit:
                  type: number
                  description: ''
                  example: 317.74839627
              required:
                - group_id
    post:
      summary: 'Store group invitation.'
      operationId: storeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 345991.0
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - group_id
                - user_ids
    put:
      summary: 'Update group invitation.'
      operationId: updateGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 642.05
                invite_code:
                  type: string
                  description: ''
                  example: sed
                accept:
                  type: number
                  description: ''
                  example: 5030.54753
              required:
                - group_id
                - accept
    delete:
      summary: 'Remove group invitation.'
      operationId: removeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2952159.497
                user_id:
                  type: string
                  description: ''
                  example: qui
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/{ver}/group-member':
    get:
      summary: 'Browse group members.'
      operationId: browseGroupMembers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sit
                group_id:
                  type: number
                  description: ''
                  example: 3.15002197
                view:
                  type: string
                  description: ''
                  example: unde
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 60
                limit:
                  type: number
                  description: ''
                  example: 159993.6964
                not_invite_role:
                  type: number
                  description: ''
                  example: 213572.499897
                excluded_user_id:
                  type: number
                  description: ''
                  example: 359451600.7
              required:
                - group_id
    post:
      summary: 'Create group member.'
      operationId: createGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 259408970.72933
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/add-group-admin':
    post:
      summary: 'Add group admin.'
      operationId: addGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 534.18065271
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 6161138.551
                  items:
                    type: number
              required:
                - group_id
                - user_ids
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odit
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/add-group-moderator':
    post:
      summary: 'Add group moderators.'
      operationId: addGroupModerators
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 156.0
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 80266.1563251
                  items:
                    type: number
              required:
                - group_id
                - user_ids
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/cancel-invite':
    delete:
      summary: ''
      operationId: deleteApiVerGroupMemberCancelInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2732.835
                user_id:
                  type: number
                  description: ''
                  example: 280961715.23
                invite_type:
                  type: string
                  description: ''
                  example: id
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/change-to-moderator':
    put:
      summary: 'Change to moderator.'
      operationId: changeToModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 125855.49905414
                user_id:
                  type: number
                  description: ''
                  example: 37853.0
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/reassign-owner':
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 14525021.6245
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 21.917487
                users:
                  type: array
                  description: ''
                  example:
                    - voluptatem
                  items:
                    type: number
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-admin':
    delete:
      summary: 'Remove group admin.'
      operationId: removeGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 424.241616321
                user_id:
                  type: number
                  description: ''
                  example: 0.7
                is_delete:
                  type: number
                  description: ''
                  example: 398447.1
              required:
                - group_id
                - user_id
                - is_delete
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: optio
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-member':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 73.9173
                user_id:
                  type: number
                  description: ''
                  example: 3.2
                delete_activities:
                  type: number
                  description: ''
                  example: 2892069.9803
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: earum
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-moderator':
    delete:
      summary: 'Remove group moderator.'
      operationId: removeGroupModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 5581.12
                user_id:
                  type: number
                  description: ''
                  example: 0.0
                is_delete:
                  type: number
                  description: ''
                  example: 725.44901971
              required:
                - group_id
                - user_id
                - is_delete
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: natus
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/{id}':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
                reassign_owner_id:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group member.'
        example: '486549'
        required: true
        schema:
          type: string
  '/api/{ver}/group-mute':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 40645.1166909
                user_id:
                  type: number
                  description: ''
                  example: 11272998.89828
              required:
                - group_id
                - user_id
      security: []
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sapiente
                group_id:
                  type: number
                  description: ''
                  example: 336482.0
                limit:
                  type: number
                  description: ''
                  example: 129911837.7
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 538.1839
                user_id:
                  type: number
                  description: ''
                  example: 43809842.027371
                expired_at:
                  type: string
                  description: ''
                  example: rerum
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
  '/api/{ver}/group-mute/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 12196682.733
                user_id:
                  type: number
                  description: ''
                  example: 29.6254
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group mute.'
        example: '3192833'
        required: true
        schema:
          type: string
  '/api/{ver}/group-question':
    get:
      summary: 'Browse Question.'
      operationId: browseQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 26025238.17
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 33
                limit:
                  type: number
                  description: ''
                  example: 5.360034
              required:
                - group_id
    post:
      summary: 'Store a question.'
      operationId: storeAQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 298510721.211
                question:
                  type: string
                  description: ''
                  example: quam
                type_id:
                  type: number
                  description: ''
                  example: 1865846.51
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - atque
                  items:
                    type: string
              required:
                - group_id
                - question
                - type_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
  '/api/{ver}/group-question/answer-form/{id}':
    get:
      summary: 'Get answer form.'
      operationId: getAnswerForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the answer form.'
        example: '81837'
        required: true
        schema:
          type: string
  '/api/{ver}/group-question/form/{id}':
    get:
      summary: 'Get creation form.'
      operationId: getCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 421.0614
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: debitis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0'
  '/api/{ver}/group-question/{id}':
    put:
      summary: 'Update question.'
      operationId: updateQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: ''
                  example: eaque
                type_id:
                  type: number
                  description: ''
                  example: 14.5
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - maxime
                  items:
                    type: number
    delete:
      summary: 'Remove question.'
      operationId: removeQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group question.'
        example: '486145'
        required: true
        schema:
          type: string
  '/api/{ver}/group-request':
    get:
      summary: 'Browse member requests in a group.'
      operationId: browseMemberRequestsInAGroup
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 149905.670457
                q:
                  type: string
                  description: ''
                  example: alias
                view:
                  type: string
                  description: ''
                  example: dolores
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 26
                limit:
                  type: number
                  description: ''
                  example: 367633.73093896
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/accept-request':
    put:
      summary: 'Accept member request.'
      operationId: acceptMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 196263659.61878
                user_id:
                  type: number
                  description: ''
                  example: 27379412.36475
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/cancel-request/{id}':
    delete:
      summary: 'Cancel a member request.'
      operationId: cancelAMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel request.'
        example: '93866'
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/deny-request':
    delete:
      summary: 'Deny member request.'
      operationId: denyMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 11615896.99
                user_id:
                  type: number
                  description: ''
                  example: 71.6
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule':
    get:
      summary: 'Browse group rules.'
      operationId: browseGroupRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2374892.31018
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 2
                limit:
                  type: number
                  description: ''
                  example: 351429.81185
              required:
                - group_id
    post:
      summary: 'Create group rule.'
      operationId: createGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 15.6369
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: f
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: 'Repudiandae et adipisci enim quod quos temporibus quia.'
              required:
                - group_id
                - title
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illo
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule-example':
    get:
      summary: 'Browse example rules.'
      operationId: browseExampleRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/form':
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.779
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: esse
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/order':
    put:
      summary: 'Reorder rules.'
      operationId: reorderRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  description: ''
                  example:
                    - 302.968
                  items:
                    type: number
                group_id:
                  type: number
                  description: ''
                  example: 114.0
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/{id}':
    put:
      summary: 'Update a group rule.'
      operationId: updateAGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: k
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: 'Deserunt veritatis sed quas itaque aspernatur quaerat consequatur laborum.'
              required:
                - title
    delete:
      summary: 'Remove a rule.'
      operationId: removeARule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group rule.'
        example: '82'
        required: true
        schema:
          type: string
  '/api/{ver}/group-to-post':
    get:
      summary: ''
      operationId: getApiVerGroupToPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
  '/api/{ver}/group-unblock':
    delete:
      summary: ''
      operationId: deleteApiVerGroupUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 1438541.9822367
                user_id:
                  type: number
                  description: ''
                  example: 30280854.55
                delete_activities:
                  type: number
                  description: ''
                  example: 22693.13
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fuga
        required: true
        schema:
          type: string
  '/api/{ver}/group/about-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupAboutSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '17'
        required: true
        schema:
          type: string
  '/api/{ver}/group/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/group/avatar/{id}':
    post:
      summary: ''
      operationId: postApiVerGroupAvatarId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - image
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '01'
        required: true
        schema:
          type: string
  '/api/{ver}/group/category':
    get:
      summary: 'Browse category.'
      operationId: browseCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 6.48478302
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 34
                q:
                  type: string
                  description: ''
                  example: aut
                level:
                  type: number
                  description: ''
                  example: 36.133836309
                limit:
                  type: number
                  description: ''
                  example: 6539611.58
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/group/confirm-answer-question':
    put:
      summary: ''
      operationId: putApiVerGroupConfirmAnswerQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 2
                is_answer_membership_question:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_answer_membership_question
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/group/confirm-rule':
    put:
      summary: ''
      operationId: putApiVerGroupConfirmRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 9
                is_rule_confirmation:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_rule_confirmation
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/{ver}/group/cover/{id}':
    post:
      summary: ''
      operationId: postApiVerGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 583148.17143
                position:
                  type: string
                  description: ''
                  example: et
    delete:
      summary: ''
      operationId: deleteApiVerGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '515'
        required: true
        schema:
          type: string
  '/api/{ver}/group/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magni
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/group/info-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupInfoSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 165674.8185126
                refresh:
                  type: number
                  description: ''
                  example: 48537146.08673
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nam
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code/accept/{code}':
    post:
      summary: ''
      operationId: postApiVerGroupInviteCodeAcceptCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: a
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code/verify/{code}':
    get:
      summary: ''
      operationId: getApiVerGroupInviteCodeVerifyCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: enim
        required: true
        schema:
          type: string
  '/api/{ver}/group/mention':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quo
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 50
                limit:
                  type: number
                  description: ''
                  example: 55.460106504
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/{ver}/group/moderation-right/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putApiVerGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: soluta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the moderation right.'
        example: '15'
        required: true
        schema:
          type: string
  '/api/{ver}/group/pending-mode/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupPendingModeId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 112.1
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pending mode.'
        example: '02'
        required: true
        schema:
          type: string
  '/api/{ver}/group/privacy/change-request/{id}':
    put:
      summary: ''
      operationId: putApiVerGroupPrivacyChangeRequestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the change request.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/group/privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putApiVerGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '51'
        required: true
        schema:
          type: string
  '/api/{ver}/group/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerGroupShareSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: mollitia
                view:
                  type: string
                  description: ''
                  example: non
                sort:
                  type: string
                  description: ''
                  example: saepe
                sort_type:
                  type: string
                  description: ''
                  example: quo
                when:
                  type: string
                  description: ''
                  example: qui
                type_id:
                  type: number
                  description: ''
                  example: 937806.0
                category_id:
                  type: number
                  description: ''
                  example: 656.0
                owner_id:
                  type: integer
                  description: ''
                  example: 13
                user_id:
                  type: number
                  description: ''
                  example: 575989588.60153
                is_featured:
                  type: number
                  description: ''
                  example: 138607.702
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 14
                limit:
                  type: number
                  description: ''
                  example: 1240.15172
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
  '/api/{ver}/group/similar':
    get:
      summary: ''
      operationId: getApiVerGroupSimilar
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 48.52
                category_id:
                  type: number
                  description: ''
                  example: 0.4
                sort:
                  type: string
                  description: ''
                  example: perspiciatis
                when:
                  type: string
                  description: ''
                  example: fugit
                limit:
                  type: number
                  description: ''
                  example: 482252219.30071
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/group/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 333.597391
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/group/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: fugit
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/group/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: et
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>exists</code> is <code>name</code>.'
                  example: ipsa
                category_id:
                  type: number
                  description: ''
                  example: 1.6
                reg_method:
                  type: number
                  description: ''
                  example: 78932.791430659
                vanity_url:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: 'http://dickens.com/'
                landing_page:
                  type: string
                  description: ''
                  example: optio
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                text_description:
                  type: string
                  description: ''
                  example: et
                phone:
                  type: string
                  description: ''
                  example: et
              required:
                - landing_page
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/search-group-member':
    get:
      summary: ''
      operationId: getApiVerSearchGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ipsam
                group_id:
                  type: number
                  description: ''
                  example: 98.027835454
                view:
                  type: string
                  description: ''
                  example: quia
                limit:
                  type: number
                  description: ''
                  example: 218172.6891
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/api/{ver}/hashtag':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 44
                limit:
                  type: number
                  description: ''
                  example: 37661.0
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/hashtag/suggestion':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: odio
                limit:
                  type: number
                  description: ''
                  example: 13233109.061377
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptate
        required: true
        schema:
          type: string
  '/api/{ver}/invite':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ad
                status:
                  type: string
                  description: ''
                  example: et
                user_id:
                  type: number
                  description: ''
                  example: 286002.29942
                view:
                  type: string
                  description: ''
                  example: assumenda
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 41
                limit:
                  type: number
                  description: ''
                  example: 1162.6524785
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                recipients:
                  type: array
                  description: ''
                  example:
                    - consequuntur
                  items:
                    type: string
                message:
                  type: string
                  description: ''
                  example: similique
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
  '/api/{ver}/invite-code':
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/invite/batch-delete':
    delete:
      summary: ''
      operationId: deleteApiVerInviteBatchDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 6659.369
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
  '/api/{ver}/invite/batch-resend':
    patch:
      summary: ''
      operationId: patchApiVerInviteBatchResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 6331.0
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/invite/resend/{id}':
    put:
      summary: ''
      operationId: putApiVerInviteResendId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the resend.'
        example: '1222'
        required: true
        schema:
          type: string
  '/api/{ver}/invite/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitations
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the invite.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: illo
                view:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>my</code>, <code>friend</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>all_streaming</code>, or <code>my_streaming</code>.'
                  example: my_streaming
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: latest
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                when:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
                  example: this_month
                owner_id:
                  type: integer
                  description: ''
                  example: 9
                user_id:
                  type: integer
                  description: ''
                  example: 5
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 82
                limit:
                  type: integer
                  description: ''
                  example: 2
                duration:
                  type: string
                  description: 'Must be one of <code>longer</code> or <code>shorter</code>.'
                  example: shorter
                streaming:
                  type: number
                  description: ''
                  example: 5211.71335
                is_featured:
                  type: number
                  description: ''
                  example: 56132244.500504
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: et
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: 71516.0
                privacy:
                  type: string
                  description: ''
                  example: id
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: true
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 305.58785
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/approve/{id}':
    patch:
      summary: 'Approve live video.'
      operationId: approveLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '8814'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/callback/{provider}':
    post:
      summary: ''
      operationId: postApiVerLiveVideoCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/end-live/{id}':
    post:
      summary: ''
      operationId: postApiVerLiveVideoEndLiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the end live.'
        example: '074'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/feature/{id}':
    patch:
      summary: 'Feature live video.'
      operationId: featureLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '41'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/go-live':
    post:
      summary: ''
      operationId: postApiVerLiveVideoGoLive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: quidem
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: 4003.0
                privacy:
                  type: string
                  description: ''
                  example: vitae
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: false
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 125.155705
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/off-notification/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoOffNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the off notification.'
        example: '976'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/on-notification/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoOnNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the on notification.'
        example: '9305435'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/ping-streaming/{id}':
    get:
      summary: ''
      operationId: getApiVerLiveVideoPingStreamingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ping streaming.'
        example: '397'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/ping-viewer/{id}':
    get:
      summary: ''
      operationId: getApiVerLiveVideoPingViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ping viewer.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/remove-viewer/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoRemoveViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove viewer.'
        example: '43'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor live video in feed.'
      operationId: sponsorLiveVideoInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 586082.0
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '54'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/sponsor/{id}':
    patch:
      summary: 'Sponsor live video.'
      operationId: sponsorLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: tenetur
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '884'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/update-viewer/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoUpdateViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the update viewer.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                status:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 131861988.69319
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: reiciendis
                duration:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                title:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the live video.'
        example: '212504'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace':
    get:
      summary: 'Browse listing.'
      operationId: browseListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aut
                view:
                  type: string
                  description: ''
                  example: consequuntur
                sort:
                  type: string
                  description: ''
                  example: autem
                sort_type:
                  type: string
                  description: ''
                  example: voluptatum
                when:
                  type: string
                  description: ''
                  example: repellendus
                category_id:
                  type: number
                  description: ''
                  example: 1.0
                owner_id:
                  type: integer
                  description: ''
                  example: 20
                user_id:
                  type: number
                  description: ''
                  example: 404.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 44
                limit:
                  type: number
                  description: ''
                  example: 4.86
                country_iso:
                  type: string
                  description: ''
                  example: quas
                bounds_west:
                  type: number
                  description: ''
                  example: 21.788781
                bounds_east:
                  type: number
                  description: ''
                  example: 238.985286
                bounds_south:
                  type: number
                  description: ''
                  example: 646702.9065004
                bounds_north:
                  type: number
                  description: ''
                  example: 152.7
                price_from:
                  type: number
                  description: 'Must be at least 0.'
                  example: 23
                price_to:
                  type: number
                  description: 'Must be at least 0.'
                  example: 87
                is_featured:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-category':
    get:
      summary: 'Browe category.'
      operationId: broweCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quis
                id:
                  type: number
                  description: ''
                  example: 135426.65465414
                level:
                  type: number
                  description: ''
                  example: 1923765.4997973
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 10
                limit:
                  type: number
                  description: ''
                  example: 1.59
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invite':
    get:
      summary: ''
      operationId: getApiVerMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    post:
      summary: ''
      operationId: postApiVerMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 884.6
                user_ids:
                  type: array
                  description: 'This field is required when <code>user_ids</code> is present.'
                  example:
                    - 5953.1
                  items:
                    type: number
              required:
                - listing_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invite/invited-people':
    get:
      summary: ''
      operationId: getApiVerMarketplaceInviteInvitedPeople
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 0.554
                limit:
                  type: number
                  description: ''
                  example: 19385.593508469
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 62
              required:
                - listing_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: rerum
                listing_id:
                  type: number
                  description: ''
                  example: 17988.12591029
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-12-26T02:01:07'
                to:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>from</code>.'
                  example: '2080-08-11'
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 58
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 9
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 19702737.484
                payment_gateway:
                  type: number
                  description: ''
                  example: 27.349
              required:
                - id
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/change':
    post:
      summary: ''
      operationId: postApiVerMarketplaceInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 1666.8
              required:
                - id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/repayment/{id}':
    put:
      summary: ''
      operationId: putApiVerMarketplaceInvoiceRepaymentId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 4.0879
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the repayment.'
        example: '950'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace invoice.'
        example: '72'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-photo/form/{id}':
    get:
      summary: ''
      operationId: getApiVerMarketplacePhotoFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-photo/{id}':
    put:
      summary: ''
      operationId: putApiVerMarketplacePhotoId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: ''
                  example: sunt
              required:
                - files
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace photo.'
        example: '53170495'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/approve/{id}':
    put:
      summary: 'Approve listing.'
      operationId: approveListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '4192'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/feature/{id}':
    patch:
      summary: 'Feature listing.'
      operationId: featureListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '487352587'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/reopen/{id}':
    patch:
      summary: 'Reopen listing.'
      operationId: reopenListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the reopen.'
        example: '52'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/search-suggestion':
    get:
      summary: ''
      operationId: getApiVerMarketplaceSearchSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                listing_id:
                  type: number
                  description: ''
                  example: 639880218.0
                q:
                  type: string
                  description: ''
                  example: sed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: optio
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor in feed.'
      operationId: sponsorInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 0.612
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '86'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/sponsor/{id}':
    patch:
      summary: 'Sponsor listing.'
      operationId: sponsorListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: sit
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/{id}':
    get:
      summary: 'View listing.'
      operationId: viewListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    delete:
      summary: 'Remove listing.'
      operationId: removeListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace.'
        example: '485'
        required: true
        schema:
          type: string
  '/api/{ver}/menu/{menuName}':
    get:
      summary: 'Show Menu.'
      operationId: showMenu
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Menu
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: menuName
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/service':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth':
    post:
      summary: 'Auth user.'
      operationId: authUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: quae
                password:
                  type: string
                  description: ''
                  example: 'i3XgkJtn!U?ksW{Vh|M('
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '038064'
              required:
                - service
                - password
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth/form':
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: cumque
                service:
                  type: string
                  description: ''
                  example: rerum
                resolution:
                  type: string
                  description: ''
                  example: commodi
              required:
                - mfa_token
      security: []
    post:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: repudiandae
                service:
                  type: string
                  description: ''
                  example: quia
                resolution:
                  type: string
                  description: ''
                  example: ex
              required:
                - mfa_token
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iusto
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth/resend':
    post:
      summary: ''
      operationId: postApiVerMfaUserAuthResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: et
                action:
                  type: string
                  description: ''
                  example: iusto
                password:
                  type: string
                  description: ''
                  example: ')d3A%N"^**'
              required:
                - service
                - action
                - password
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quisquam
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/activate':
    post:
      summary: 'Activate service.'
      operationId: activateService
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: et
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '896217'
              required:
                - service
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/setup':
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: odit
                resolution:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - service
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/setup/resend':
    post:
      summary: ''
      operationId: postApiVerMfaUserServiceSetupResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: necessitatibus
                action:
                  type: string
                  description: ''
                  example: inventore
              required:
                - service
                - action
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
  '/api/{ver}/music-genre':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 2791.2232343
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 35
                q:
                  type: string
                  description: ''
                  example: ullam
                level:
                  type: number
                  description: ''
                  example: 3.9
                limit:
                  type: number
                  description: ''
                  example: 39236.3
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/{ver}/music/album':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ducimus
                view:
                  type: string
                  description: ''
                  example: aut
                sort:
                  type: string
                  description: ''
                  example: corrupti
                sort_type:
                  type: string
                  description: ''
                  example: ipsa
                when:
                  type: string
                  description: ''
                  example: est
                owner_id:
                  type: integer
                  description: ''
                  example: 9
                user_id:
                  type: number
                  description: ''
                  example: 140364056.135
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 51
                limit:
                  type: number
                  description: ''
                  example: 234731767.602
                genre_id:
                  type: number
                  description: ''
                  example: 14213534.0
                category_id:
                  type: number
                  description: ''
                  example: 89075748.008284
                is_featured:
                  type: number
                  description: ''
                  example: 2629182.8458856
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quisquam
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: earum
                sort_type:
                  type: string
                  description: ''
                  example: voluptates
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                limit:
                  type: number
                  description: ''
                  example: 27620.527
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '86'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 69716261.319027
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: quaerat
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '63449665'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicAlbumId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the album.'
        example: '8658'
        required: true
        schema:
          type: string
  '/api/{ver}/music/genre':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 27363073.57742
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 12
                q:
                  type: string
                  description: ''
                  example: fuga
                level:
                  type: number
                  description: ''
                  example: 532.0360067
                limit:
                  type: number
                  description: ''
                  example: 70.794284
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: libero
                view:
                  type: string
                  description: ''
                  example: commodi
                sort:
                  type: string
                  description: ''
                  example: et
                sort_type:
                  type: string
                  description: ''
                  example: non
                when:
                  type: string
                  description: ''
                  example: rerum
                user_id:
                  type: number
                  description: ''
                  example: 7.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 88
                limit:
                  type: number
                  description: ''
                  example: 38262009.256702
                genre_id:
                  type: integer
                  description: ''
                  example: 12
                category_id:
                  type: integer
                  description: ''
                  example: 19
      security: []
    post:
      summary: ''
      operationId: postApiVerMusicPlaylist
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: magnam
                description:
                  type: string
                  description: ''
                  example: 'Molestiae debitis suscipit sapiente possimus itaque quo quia.'
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 388740892.05
                owner_id:
                  type: number
                  description: ''
                  example: 1861449.503266
                privacy:
                  type: string
                  description: ''
                  example: est
                attachments:
                  type: array
                  description: ''
                  example:
                    - at
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cum
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/add-song':
    post:
      summary: ''
      operationId: postApiVerMusicPlaylistAddSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 43.68678831
                playlist_ids:
                  type: array
                  description: ''
                  example:
                    - 433.429165
                  items:
                    type: number
              required:
                - item_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: consectetur
                sort_type:
                  type: string
                  description: ''
                  example: neque
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
                limit:
                  type: number
                  description: ''
                  example: 0.7
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicPlaylistId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: laboriosam
                description:
                  type: string
                  description: ''
                  example: 'Enim enim earum amet quis pariatur praesentium consequatur.'
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 26800518.3
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: et
                owner_id:
                  type: number
                  description: ''
                  example: 7888419.51
                privacy:
                  type: string
                  description: ''
                  example: explicabo
                attachments:
                  type: array
                  description: ''
                  example:
                    - facilis
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the playlist.'
        example: '041450580'
        required: true
        schema:
          type: string
  '/api/{ver}/music/search':
    get:
      summary: ''
      operationId: getApiVerMusicSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
  '/api/{ver}/music/song':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ut
                view:
                  type: string
                  description: ''
                  example: nam
                sort:
                  type: string
                  description: ''
                  example: voluptatibus
                sort_type:
                  type: string
                  description: ''
                  example: qui
                when:
                  type: string
                  description: ''
                  example: qui
                owner_id:
                  type: integer
                  description: ''
                  example: 17
                user_id:
                  type: number
                  description: ''
                  example: 44.1
                genre_id:
                  type: number
                  description: ''
                  example: 18165.0
                category_id:
                  type: integer
                  description: ''
                  example: 19
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 90
                limit:
                  type: number
                  description: ''
                  example: 21453142.738
                is_featured:
                  type: number
                  description: ''
                  example: 7957956.62742
      security: []
    post:
      summary: ''
      operationId: postApiVerMusicSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: molestiae
                description:
                  type: string
                  description: ''
                  example: 'Ut dolor iusto dolor sint repellendus id.'
                file:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: string
                  description: ''
                  example: null
                genres:
                  type: array
                  description: 'This field is required when <code>genres</code> is present.'
                  example:
                    - 3896.0
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 1424725.824659
                privacy:
                  type: string
                  description: ''
                  example: velit
                attachments:
                  type: array
                  description: ''
                  example:
                    - corrupti
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: soluta
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/approve/{id}':
    patch:
      summary: 'Approve song.'
      operationId: approveSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '023'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '880'
  '/api/{ver}/music/song/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 95885964.0
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '904'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: ab
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestias
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '1257'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}/remove-from-playlist/{playlist_id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongIdRemoveFromPlaylistPlaylist_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '20'
        required: true
        schema:
          type: string
      -
        in: path
        name: playlist_id
        description: 'The ID of the playlist.'
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}/statistic/total-play':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongIdStatisticTotalPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicSongId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/notification':
    get:
      summary: "Browse current user's notifications."
      operationId: browseCurrentUsersNotifications
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'The page number.'
                  example: 1
                limit:
                  type: integer
                  description: 'The max item per page.'
                  example: 4
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/{ver}/notification/all':
    delete:
      summary: ''
      operationId: deleteApiVerNotificationAll
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/notification/markAllAsRead':
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/notification/{id}':
    put:
      summary: 'Mark as read.'
      operationId: markAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    delete:
      summary: 'Delete notification.'
      operationId: deleteNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: '230705'
        required: true
        schema:
          type: string
  '/api/{ver}/page':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: earum
                view:
                  type: string
                  description: ''
                  example: tempora
                sort:
                  type: string
                  description: ''
                  example: similique
                sort_type:
                  type: string
                  description: ''
                  example: eum
                when:
                  type: string
                  description: ''
                  example: illum
                category_id:
                  type: number
                  description: ''
                  example: 0.0087342
                owner_id:
                  type: integer
                  description: ''
                  example: 15
                user_id:
                  type: number
                  description: ''
                  example: 9227704.4448589
                is_featured:
                  type: number
                  description: ''
                  example: 32762.26409
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 52
                limit:
                  type: number
                  description: ''
                  example: 1718.4816918
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aut
                category_id:
                  type: number
                  description: ''
                  example: 415.9080493
                text:
                  type: string
                  description: ''
                  example: aspernatur
                users:
                  type: array
                  description: ''
                  example:
                    - hic
                  items:
                    type: number
              required:
                - name
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/page-admin':
    get:
      summary: 'Display a listing of the admin resource.'
      operationId: displayAListingOfTheAdminResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sunt
                page_id:
                  type: number
                  description: ''
                  example: 0.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                limit:
                  type: number
                  description: ''
                  example: 7.0
                view:
                  type: string
                  description: ''
                  example: aut
                not_invite_role:
                  type: number
                  description: ''
                  example: 253.56227
                excluded_user_id:
                  type: number
                  description: ''
                  example: 1189106.0244731
              required:
                - page_id
      security: []
    post:
      summary: ''
      operationId: postApiVerPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 1042.0
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 3.94181
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 4664112.1754864
                user_id:
                  type: number
                  description: ''
                  example: 0.164053
                is_delete:
                  type: number
                  description: ''
                  example: 2203.0
              required:
                - page_id
                - user_id
                - is_delete
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
  '/api/{ver}/page-block':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 1.6814
                view:
                  type: string
                  description: ''
                  example: in
                q:
                  type: string
                  description: ''
                  example: unde
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 56
                limit:
                  type: number
                  description: ''
                  example: 473591.18289877
              required:
                - page_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 8170.2798
                user_id:
                  type: number
                  description: ''
                  example: 393614.08605392
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: est
                sort:
                  type: string
                  description: ''
                  example: dolor
                sort_type:
                  type: string
                  description: ''
                  example: eaque
                when:
                  type: string
                  description: ''
                  example: ipsum
                status:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: 6.4913773
                owner_id:
                  type: integer
                  description: ''
                  example: 14
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 29
                limit:
                  type: number
                  description: ''
                  example: 18543316.0401
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: qui
                page_id:
                  type: number
                  description: ''
                  example: 3952.6967
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magnam
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim/resubmit/{id}':
    put:
      summary: ''
      operationId: putApiVerPageClaimResubmitId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: hic
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the resubmit.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim/{id}':
    get:
      summary: ''
      operationId: getApiVerPageClaimId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: qui
                status:
                  type: integer
                  description: ''
                  example: 20
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page claim.'
        example: '8212860'
        required: true
        schema:
          type: string
  '/api/{ver}/page-info/{id}':
    get:
      summary: 'Display the specified resource info.'
      operationId: displayTheSpecifiedResourceInfo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page info.'
        example: '347'
        required: true
        schema:
          type: string
  '/api/{ver}/page-integrated/order':
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 124.752
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/{ver}/page-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page integrated.'
        example: '07'
        required: true
        schema:
          type: string
  '/api/{ver}/page-invite':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quae
                page_id:
                  type: number
                  description: ''
                  example: 144.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 85
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 68
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 14.4219
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - page_id
                - user_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: commodi
        required: true
        schema:
          type: string
  '/api/{ver}/page-invite/{id}':
    put:
      summary: 'Used to accept/decline a request to like a page.'
      operationId: usedToAcceptdeclineARequestToLikeAPage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  type: number
                  description: ''
                  example: 14281412.512968
              required:
                - accept
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 55
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page invite.'
        example: '80'
        required: true
        schema:
          type: string
  '/api/{ver}/page-member':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                page_id:
                  type: number
                  description: ''
                  example: 0.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 59
                limit:
                  type: number
                  description: ''
                  example: 231.71398
                view:
                  type: string
                  description: ''
                  example: corporis
                not_invite_role:
                  type: number
                  description: ''
                  example: 808.0
                excluded_user_id:
                  type: number
                  description: ''
                  example: 5.870024161
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 33700972.107635
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/add-page-admin':
    post:
      summary: ''
      operationId: postApiVerPageMemberAddPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 5.1488304
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 22.496467944
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/cancel-invite':
    delete:
      summary: ''
      operationId: deleteApiVerPageMemberCancelInvite
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 5203669.43293
                user_id:
                  type: number
                  description: ''
                  example: 22332.2068559
                invite_type:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/reassign-owner':
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 90420.0
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 108668944.88155
                users:
                  type: array
                  description: ''
                  example:
                    - quaerat
                  items:
                    type: number
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/remove-page-admin':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 198168578.50825
                user_id:
                  type: number
                  description: ''
                  example: 447555672.0
                is_delete:
                  type: number
                  description: ''
                  example: 13939287.350897
              required:
                - page_id
                - user_id
                - is_delete
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cupiditate
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/remove-page-member':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 214.154
                user_id:
                  type: number
                  description: ''
                  example: 71336606.812335
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusantium
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page member.'
        example: '337'
        required: true
        schema:
          type: string
  '/api/{ver}/page-to-post':
    get:
      summary: ''
      operationId: getApiVerPageToPost
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/page-unblock':
    delete:
      summary: ''
      operationId: deleteApiVerPageUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 571.111723186
                user_id:
                  type: number
                  description: ''
                  example: 7.0731
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
  '/api/{ver}/page/about-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerPageAboutSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/page/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/page/avatar/{id}':
    post:
      summary: ''
      operationId: postApiVerPageAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                image_crop:
                  type: string
                  description: ''
                  example: corrupti
                temp_file:
                  type: number
                  description: ''
                  example: 19774652.744834
                photo_id:
                  type: number
                  description: ''
                  example: 113.047461
              required:
                - image_crop
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '408'
        required: true
        schema:
          type: string
  '/api/{ver}/page/category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
                parent_id:
                  type: number
                  description: ''
                  example: 3.0
                q:
                  type: string
                  description: ''
                  example: maiores
                level:
                  type: number
                  description: ''
                  example: 3.661536
                limit:
                  type: number
                  description: ''
                  example: 538649.65545976
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
  '/api/{ver}/page/cover/{id}':
    post:
      summary: ''
      operationId: postApiVerPageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 142915.13626
                position:
                  type: string
                  description: ''
                  example: qui
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerPageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '82'
        required: true
        schema:
          type: string
  '/api/{ver}/page/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/page/info-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerPageInfoSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptates
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '67'
        required: true
        schema:
          type: string
  '/api/{ver}/page/mention':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptas
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 7.10466
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/page/privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: ''
      operationId: putApiVerPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '36990'
        required: true
        schema:
          type: string
  '/api/{ver}/page/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerPageShareSuggestion
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quasi
                view:
                  type: string
                  description: ''
                  example: id
                sort:
                  type: string
                  description: ''
                  example: dolorem
                sort_type:
                  type: string
                  description: ''
                  example: sequi
                when:
                  type: string
                  description: ''
                  example: excepturi
                category_id:
                  type: number
                  description: ''
                  example: 1118839.88552
                owner_id:
                  type: integer
                  description: ''
                  example: 13
                user_id:
                  type: number
                  description: ''
                  example: 0.56285
                is_featured:
                  type: number
                  description: ''
                  example: 1975597.4143
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 61
                limit:
                  type: number
                  description: ''
                  example: 27598.149163461
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
  '/api/{ver}/page/similar':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 680480.9979
                category_id:
                  type: number
                  description: ''
                  example: 68303441.643516
                sort:
                  type: string
                  description: ''
                  example: nisi
                when:
                  type: string
                  description: ''
                  example: in
                limit:
                  type: number
                  description: ''
                  example: 27011.91
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sequi
        required: true
        schema:
          type: string
  '/api/{ver}/page/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: adipisci
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/page/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: error
                category_id:
                  type: number
                  description: ''
                  example: 96256.23384269
                vanity_url:
                  type: string
                  description: ''
                  example: 'http://www.bayer.org/'
                text:
                  type: string
                  description: ''
                  example: rerum
                landing_page:
                  type: string
                  description: ''
                  example: eaque
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                phone:
                  type: string
                  description: ''
                  example: ducimus
                external_link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://hirthe.com/distinctio-architecto-nulla-rerum-ullam-accusamus-maiores.html'
              required:
                - name
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '47'
        required: true
        schema:
          type: string
  '/api/{ver}/search-page-member':
    get:
      summary: ''
      operationId: getApiVerSearchPageMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: velit
                page_id:
                  type: number
                  description: ''
                  example: 58.64
                view:
                  type: string
                  description: ''
                  example: similique
                limit:
                  type: number
                  description: ''
                  example: 59266.93247542
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/paypal/notify':
    post:
      summary: notify.
      operationId: notify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - PayPal
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 19
                limit:
                  type: number
                  description: ''
                  example: 370.7394
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration':
    get:
      summary: ''
      operationId: getApiVerPaymentGatewayConfiguration
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration-form/{driver}/{id}':
    get:
      summary: ''
      operationId: getApiVerPaymentGatewayConfigurationFormDriverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: driver
        description: ''
        example: soluta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the {driver}.'
        example: '954344'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration-multiple':
    put:
      summary: ''
      operationId: putApiVerPaymentGatewayConfigurationMultiple
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusantium
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration/{id}':
    put:
      summary: ''
      operationId: putApiVerPaymentGatewayConfigurationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 2.156834987
                value:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the configuration.'
        example: '795'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-order':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
  '/api/{ver}/payment-order/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 1133.41509
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment order.'
        example: '720488'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-processor/callback/{processor}':
    post:
      summary: ''
      operationId: postApiVerPaymentProcessorCallbackProcessor
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Processor'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: processor
        description: ''
        example: saepe
        required: true
        schema:
          type: string
  '/api/{ver}/photo':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 5
                user_id:
                  type: number
                  description: ''
                  example: 2815342.54
                category_id:
                  type: number
                  description: ''
                  example: 41616291.48
                album_id:
                  type: number
                  description: ''
                  example: 4622.105666696
                group_id:
                  type: number
                  description: ''
                  example: 3576.4814991
                q:
                  type: string
                  description: ''
                  example: accusamus
                tag:
                  type: string
                  description: ''
                  example: ut
                feed_id:
                  type: number
                  description: ''
                  example: 4407.6
                view:
                  type: string
                  description: ''
                  example: vero
                sort:
                  type: string
                  description: ''
                  example: deleniti
                sort_type:
                  type: string
                  description: ''
                  example: vel
                when:
                  type: string
                  description: ''
                  example: placeat
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 17
                limit:
                  type: number
                  description: ''
                  example: 0.126618
                is_featured:
                  type: number
                  description: ''
                  example: 623564.882789
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sint
                owner_id:
                  type: integer
                  description: ''
                  example: 17
                user_id:
                  type: number
                  description: ''
                  example: 2189.999156
                view:
                  type: string
                  description: ''
                  example: enim
                sort:
                  type: string
                  description: ''
                  example: quod
                sort_type:
                  type: string
                  description: ''
                  example: facere
                when:
                  type: string
                  description: ''
                  example: non
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 8
                limit:
                  type: number
                  description: ''
                  example: 140443788.7
                is_featured:
                  type: number
                  description: ''
                  example: 86259.8098
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: esse
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '9177441'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/create':
    get:
      summary: ''
      operationId: getApiVerPhotoAlbumCreate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '32400'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: et
                sort_type:
                  type: string
                  description: ''
                  example: quod
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                limit:
                  type: number
                  description: ''
                  example: 324662349.7413
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '56697'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 3202.27
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '184'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: quas
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '09'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo album.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/{photo_album}/edit':
    get:
      summary: ''
      operationId: getApiVerPhotoAlbumPhoto_albumEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deserunt
        required: true
        schema:
          type: string
      -
        in: path
        name: photo_album
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
  '/api/{ver}/photo-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 0.128228
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 18
                q:
                  type: string
                  description: ''
                  example: maiores
                level:
                  type: number
                  description: ''
                  example: 263.70102
                limit:
                  type: number
                  description: ''
                  example: 7.813
                parent_id:
                  type: number
                  description: ''
                  example: 40500.706613
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/{ver}/photo-set/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo set.'
        example: '1748'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-tag':
    get:
      summary: ''
      operationId: getApiVerPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 284179.38
              required:
                - item_id
      security: []
    post:
      summary: ''
      operationId: postApiVerPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 73969.3423326
                tag_user_id:
                  type: number
                  description: ''
                  example: 15.298672
                px:
                  type: number
                  description: 'Must be at least 0.'
                  example: 60
                py:
                  type: number
                  description: 'Must be at least 0.'
                  example: 33
              required:
                - item_id
                - tag_user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magni
        required: true
        schema:
          type: string
  '/api/{ver}/photo-tag/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerPhotoTagId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minima
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo tag.'
        example: '3644460'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '63'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '132996'
  '/api/{ver}/photo/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '5410'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/form/{id}':
    get:
      summary: ''
      operationId: getApiVerPhotoFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 19201.561
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '626'
  '/api/{ver}/photo/parent-avatar/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoParentAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the parent avatar.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/parent-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoParentCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the parent cover.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/profile-avatar/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoProfileAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: mollitia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the profile avatar.'
        example: '87'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/profile-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoProfileCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 14
                position:
                  type: string
                  description: ''
                  example: facilis
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the profile cover.'
        example: '5745537'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 6.25231382
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: enim
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptate
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '61474'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: architecto
                categories:
                  type: array
                  description: ''
                  example:
                    - 558657671.0
                  items:
                    type: number
                album:
                  type: number
                  description: ''
                  example: 2093066.04
                tags:
                  type: array
                  description: ''
                  example:
                    - ad
                  items:
                    type: string
                text:
                  type: string
                  description: ''
                  example: sunt
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: in
                    lat:
                      type: number
                      description: ''
                      example: 5.988448
                    lng:
                      type: number
                      description: ''
                      example: 158559.60038458
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo.'
        example: '40645'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/{photo}/edit':
    get:
      summary: ''
      operationId: getApiVerPhotoPhotoEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: photo
        description: 'The photo.'
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/poll':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: mollitia
                view:
                  type: string
                  description: ''
                  example: aut
                sort:
                  type: string
                  description: ''
                  example: ad
                sort_type:
                  type: string
                  description: ''
                  example: consequatur
                when:
                  type: string
                  description: ''
                  example: ut
                owner_id:
                  type: integer
                  description: ''
                  example: 10
                user_id:
                  type: number
                  description: ''
                  example: 20.769747
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 55
                limit:
                  type: number
                  description: ''
                  example: 4173112.1522
                is_featured:
                  type: number
                  description: ''
                  example: 893807.1043
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
  '/api/{ver}/poll-result':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'This field is required when <code>answer_id</code> is not present. Must be at least 1.'
                  example: 12
                answer_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 59
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 15
                limit:
                  type: number
                  description: ''
                  example: 1651359.0
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 50
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: []
                  properties: []
              required:
                - poll_id
                - answers
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: placeat
        required: true
        schema:
          type: string
  '/api/{ver}/poll-result/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: placeat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the poll result.'
        example: '55009098'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '45'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/integration-form':
    get:
      summary: ''
      operationId: getApiVerPollIntegrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: ''
                  example: 2.9557
                is_edit:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
  '/api/{ver}/poll/search-form':
    get:
      summary: ''
      operationId: getApiVerPollSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
  '/api/{ver}/poll/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 2.0
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: esse
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '07'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: labore
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/status-form':
    get:
      summary: ''
      operationId: getApiVerPollStatusForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
  '/api/{ver}/poll/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the poll.'
        example: '05965896'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: dicta
                view:
                  type: string
                  description: ''
                  example: voluptatem
                sort:
                  type: string
                  description: ''
                  example: et
                sort_type:
                  type: string
                  description: ''
                  example: aut
                when:
                  type: string
                  description: ''
                  example: non
                owner_id:
                  type: integer
                  description: ''
                  example: 12
                user_id:
                  type: number
                  description: ''
                  example: 0.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 90
                limit:
                  type: number
                  description: ''
                  example: 1084225.692306
                is_featured:
                  type: number
                  description: ''
                  example: 86070195.46646
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ex
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-question/view-plays':
    get:
      summary: ''
      operationId: getApiVerQuizQuestionViewPlays
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: number
                  description: ''
                  example: 50126.0
              required:
                - question_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-result':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 33
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 74
                limit:
                  type: number
                  description: ''
                  example: 5.345876957
              required:
                - quiz_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: libero
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-result/view-individual-play':
    get:
      summary: ''
      operationId: getApiVerQuizResultViewIndividualPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 34
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 90
              required:
                - quiz_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '162448'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '24436'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/search-form':
    get:
      summary: ''
      operationId: getApiVerQuizSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 325.65
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '9512551'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: aut
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: possimus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the quiz.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/like':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1.6217251
                item_type:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - item_id
                - item_type
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 6913.2
                item_type:
                  type: string
                  description: ''
                  example: unde
                react_id:
                  type: number
                  description: ''
                  example: 9241.7
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 2
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 20
              required:
                - item_id
                - item_type
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 306009534.71156
                item_type:
                  type: string
                  description: ''
                  example: non
                reaction_id:
                  type: number
                  description: ''
                  example: 22.243
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
  '/api/{ver}/like-tabs':
    get:
      summary: ''
      operationId: getApiVerLikeTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 38
                item_type:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/{ver}/like/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the like.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/preaction':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/preaction/get-reacted-lists':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 66.0
                item_type:
                  type: string
                  description: ''
                  example: repudiandae
                react_id:
                  type: number
                  description: ''
                  example: 13.123544
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 29
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 85
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
  '/api/{ver}/preaction/reaction-tabs':
    get:
      summary: ''
      operationId: getApiVerPreactionReactionTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 85
                item_type:
                  type: string
                  description: ''
                  example: odit
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/{ver}/reaction':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/report':
    post:
      summary: 'Store a new report.'
      operationId: storeANewReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 15409.0167
                feedback:
                  type: string
                  description: ''
                  example: sit
                item_id:
                  type: number
                  description: ''
                  example: 35141.65927
                item_type:
                  type: string
                  description: ''
                  example: amet
              required:
                - reason
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner':
    get:
      summary: 'Browse reports.'
      operationId: browseReports
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 17189634.69
                sort_type:
                  type: string
                  description: ''
                  example: aut
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 25
                limit:
                  type: number
                  description: ''
                  example: 729409.4
              required:
                - owner_id
    post:
      summary: 'Post a report to owner.'
      operationId: postAReportToOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 1376.63
                feedback:
                  type: string
                  description: ''
                  example: velit
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 68
                item_type:
                  type: string
                  description: ''
                  example: quibusdam
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/form':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 78
                item_type:
                  type: string
                  description: ''
                  example: id
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/reporters/{id}':
    get:
      summary: ''
      operationId: getApiVerReportOwnerReportersId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the reporter.'
        example: '00'
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/{id}':
    put:
      summary: 'Update a report.'
      operationId: updateAReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keep_post:
                  type: string
                  description: ''
                  example: aut
              required:
                - keep_post
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: optio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the report owner.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/report/form':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 3
                item_type:
                  type: string
                  description: ''
                  example: neque
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quaerat
        required: true
        schema:
          type: string
  '/api/{ver}/report/form/mobile':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 23
                item_type:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iste
        required: true
        schema:
          type: string
  '/api/{ver}/report/reason':
    get:
      summary: 'Browse report reasons.'
      operationId: browseReportReasons
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 41
                limit:
                  type: number
                  description: ''
                  example: 25652821.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
  '/api/{ver}/seo/meta':
    get:
      summary: ''
      operationId: getApiVerSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    post:
      summary: ''
      operationId: postApiVerSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/api/{ver}/seo/meta/{metaName}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: metaName
        description: 'Page meta name.'
        example: blog.browse.home
        required: true
        schema:
          type: string
  '/api/{ver}/sms/notify':
    post:
      summary: notify.
      operationId: notify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'SMS Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: amet
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                collection_id:
                  type: number
                  description: ''
                  example: 77.1
                sort_type:
                  type: string
                  description: ''
                  example: cumque
                open:
                  type: string
                  description: ''
                  example: et
                when:
                  type: string
                  description: ''
                  example: deleniti
                type:
                  type: string
                  description: ''
                  example: ut
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 2
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 18
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 755197.41265619
                item_type:
                  type: string
                  description: ''
                  example: qui
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 2254.3
                  items:
                    type: number
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection':
    get:
      summary: 'Browse list.'
      operationId: browseList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 76
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 53
                type:
                  type: string
                  description: ''
                  example: exercitationem
                saved_id:
                  type: number
                  description: ''
                  example: 6768.33
    post:
      summary: 'Create list.'
      operationId: createList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: mrxkiahugueaqh
                privacy:
                  type: string
                  description: ''
                  example: illum
              required:
                - name
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/add-friend/{id}':
    post:
      summary: ''
      operationId: postApiVerSaveditemsCollectionAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '868856'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/form':
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illum
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '98936850'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/item/{id}':
    get:
      summary: ''
      operationId: getApiVerSaveditemsCollectionItemId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 17
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 68
                type:
                  type: string
                  description: ''
                  example: enim
                saved_id:
                  type: number
                  description: ''
                  example: 86.541449
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '13'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/leave-collection/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionLeaveCollectionId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the leave collection.'
        example: '9498431'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/remove-member/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionRemoveMemberId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 1.18
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: debitis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove member.'
        example: '60'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/view-friend/{id}':
    get:
      summary: ''
      operationId: getApiVerSaveditemsCollectionViewFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the view friend.'
        example: '8163'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/{id}':
    get:
      summary: 'View list.'
      operationId: viewList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update list.'
      operationId: updateList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: jzowtxtajlbvudwjoqruxlkn
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - name
    delete:
      summary: 'Remove list.'
      operationId: removeList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the saveditems collection.'
        example: '86495'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/collection':
    put:
      summary: 'Move item.'
      operationId: moveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1.23976878
                collection_ids:
                  type: array
                  description: ''
                  example:
                    - 4405.09494103
                  items:
                    type: number
              required:
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/collection/{list_id}/save/{saved_id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionList_idSaveSaved_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: list_id
        description: 'The ID of the list.'
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: saved_id
        description: 'The ID of the saved.'
        example: ex
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/get-tab':
    get:
      summary: 'Browse tabs.'
      operationId: browseTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/read/{id}':
    patch:
      summary: 'Mark as opened.'
      operationId: markAsOpened
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saved_id:
                  type: number
                  description: ''
                  example: 877.9
                status:
                  type: number
                  description: ''
                  example: 533.42228067
                collection_id:
                  type: number
                  description: ''
                  example: 112.2394
              required:
                - saved_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the read.'
        example: '4624'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/save':
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 27.62
                item_type:
                  type: string
                  description: ''
                  example: dolorem
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 182.62986872
                  items:
                    type: number
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/unsave':
    delete:
      summary: 'Unsave item.'
      operationId: unsaveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 10210.36336555
                item_type:
                  type: string
                  description: ''
                  example: laborum
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_unopened:
                  type: number
                  description: ''
                  example: 37271098.0
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 2455.0
                  items:
                    type: number
    delete:
      summary: 'Remove item.'
      operationId: removeItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the saveditem.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/search':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: fjvbccqioomzjx
                owner_id:
                  type: number
                  description: ''
                  example: 76.32022775
                from:
                  type: string
                  description: ''
                  example: porro
                hashtag:
                  type: string
                  description: ''
                  example: ut
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 2.'
                  example: 4
                last_search_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
                view:
                  type: string
                  description: ''
                  example: libero
              required:
                - q
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: possimus
        required: true
        schema:
          type: string
  '/api/{ver}/search/group':
    get:
      summary: ''
      operationId: getApiVerSearchGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ivjvxxbjskperrthrfvszwihacxkfcdfpchgcgcuqyfjtodwhfagfbsuhrw
                owner_id:
                  type: number
                  description: ''
                  example: 4564.415
                from:
                  type: string
                  description: ''
                  example: veniam
                hashtag:
                  type: string
                  description: ''
                  example: et
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
              required:
                - q
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: soluta
        required: true
        schema:
          type: string
  '/api/{ver}/search/hashtag/trending':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 53
                limit:
                  type: integer
                  description: ''
                  example: 9
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
  '/api/{ver}/search/suggestion':
    get:
      summary: 'View Suggestions.'
      operationId: viewSuggestions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 39
                q:
                  type: string
                  description: ''
                  example: explicabo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
  '/api/{ver}/socialite/callback/{provider}':
    get:
      summary: ''
      operationId: getApiVerSocialiteCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: iure
                token:
                  type: string
                  description: ''
                  example: laboriosam
                code_verifier:
                  type: string
                  description: ''
                  example: quia
                display_name:
                  type: string
                  description: ''
                  example: rem
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
  '/api/{ver}/socialite/login/{provider}':
    get:
      summary: ''
      operationId: getApiVerSocialiteLoginProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: ''
                  example: sed
              required:
                - provider
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: officia
        required: true
        schema:
          type: string
  '/api/{ver}/static-page':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/{ver}/static-page/page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '235772'
        required: true
        schema:
          type: string
  '/api/{ver}/static-page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the static page.'
        example: '08'
        required: true
        schema:
          type: string
  '/api/{ver}/bgs-background':
    get:
      summary: 'Get background.'
      operationId: getBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: number
                  description: ''
                  example: 380.34
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 24
                limit:
                  type: number
                  description: ''
                  example: 1724573.37178
              required:
                - collection_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
  '/api/{ver}/pstatusbg-collection':
    get:
      summary: 'Browse collection.'
      operationId: browseCollection
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 67
                limit:
                  type: number
                  description: ''
                  example: 674390.0
    post:
      summary: 'Create background.'
      operationId: createBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: dva
                is_active:
                  type: number
                  description: ''
                  example: 520.9
                is_default:
                  type: number
                  description: ''
                  example: 146174.3439181
                background_temp_file:
                  type: array
                  description: ''
                  example:
                    - 48280525.551708
                  items:
                    type: number
              required:
                - title
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/pstatusbg-collection/{id}':
    get:
      summary: 'View background.'
      operationId: viewBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pstatusbg collection.'
        example: '96'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                set_id:
                  type: number
                  description: ''
                  example: 0.3654262
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 19
                limit:
                  type: number
                  description: ''
                  example: 3752.9313883
              required:
                - set_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/recent':
    get:
      summary: ''
      operationId: getApiVerStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 8
                limit:
                  type: number
                  description: ''
                  example: 13.0
    post:
      summary: ''
      operationId: postApiVerStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sticker_id:
                  type: number
                  description: ''
                  example: 83022.2
              required:
                - sticker_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set':
    get:
      summary: 'Browse sticker.'
      operationId: browseSticker
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: voluptates
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 79
                limit:
                  type: number
                  description: ''
                  example: 11.17
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/active/{sticker_set}':
    patch:
      summary: 'Active sticker set.'
      operationId: activeStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: number
                  description: ''
                  example: 2167.45120884
              required:
                - active
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: sticker_set
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/default/{sticker_set}':
    patch:
      summary: ''
      operationId: patchApiVerStickerStickerSetDefaultSticker_set
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: sticker_set
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/user':
    post:
      summary: ''
      operationId: postApiVerStickerStickerSetUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 66.94
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/user/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerStickerStickerSetUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/{id}':
    get:
      summary: 'View sticker set.'
      operationId: viewStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: natus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sticker set.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sticker.'
        example: '713148995'
        required: true
        schema:
          type: string
  '/api/{ver}/story':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: aliquam
                lifespan:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 24.'
                  example: 22
                text:
                  type: string
                  description: ''
                  example: explicabo
                font_style:
                  type: string
                  description: ''
                  example: voluptatem
                background_id:
                  type: integer
                  description: ''
                  example: 5
                extra:
                  type: object
                  description: ''
                  example: null
                  properties: []
                type:
                  type: string
                  description: ''
                  example: nam
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 28183035.01412
                thumb_file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumb_file</code> is present.'
                      example: 83609.0
              required:
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
  '/api/{ver}/story-archive':
    get:
      summary: ''
      operationId: getApiVerStoryArchive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 13
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 59
                limit:
                  type: number
                  description: ''
                  example: 3165515.34347
      security: []
    post:
      summary: ''
      operationId: postApiVerStoryArchive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 51.01924
              required:
                - story_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
  '/api/{ver}/story-archive/setting':
    post:
      summary: ''
      operationId: postApiVerStoryArchiveSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
  '/api/{ver}/story-background':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 59
                limit:
                  type: number
                  description: ''
                  example: 16.154662
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
  '/api/{ver}/story-background/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the story background.'
        example: '11'
        required: true
        schema:
          type: string
  '/api/{ver}/story-reaction':
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 66601018.338787
                reaction_id:
                  type: number
                  description: ''
                  example: 12.0
              required:
                - story_id
                - reaction_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
  '/api/{ver}/story-view':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 25362.69522383
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                limit:
                  type: number
                  description: ''
                  example: 0.372178531
              required:
                - story_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 233217.399
              required:
                - story_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
  '/api/{ver}/story/{id}':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the story.'
        example: '449'
        required: true
        schema:
          type: string
  '/api/{ver}/user_story':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                related_user_id:
                  type: integer
                  description: ''
                  example: 13
                user_id:
                  type: integer
                  description: ''
                  example: 7
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 86
                limit:
                  type: number
                  description: ''
                  example: 30740.696
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-comparison':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 48
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 74
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 53.26305
                renew_type:
                  type: string
                  description: ''
                  example: maiores
                payment_gateway:
                  type: number
                  description: ''
                  example: 24922423.387688
              required:
                - id
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/cancel-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoiceCancelFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel form.'
        example: '8300'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_id:
                  type: number
                  description: ''
                  example: 69623478.591106
              required:
                - reason_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '6297300'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/change-invoice/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoiceChangeInvoiceId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the change invoice.'
        example: '12'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/payment-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoicePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: corrupti
                action_type:
                  type: string
                  description: ''
                  example: unde
              required:
                - action_type
      security: []
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoicePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: et
                action_type:
                  type: string
                  description: ''
                  example: molestiae
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoiceRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '0790'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew-method-form/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoiceRenewMethodFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: harum
                action_type:
                  type: string
                  description: ''
                  example: dolorem
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew method form.'
        example: '77'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceRenewId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 187166272.2
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/upgrade/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceUpgradeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: 4091.559668951
                action_type:
                  type: string
                  description: ''
                  example: deleniti
              required:
                - payment_gateway
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the upgrade.'
        example: '41'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscription invoice.'
        example: '54'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ut
                view:
                  type: string
                  description: ''
                  example: voluptatem
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/payment-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionPackagePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: iure
      security: []
    post:
      summary: ''
      operationId: postApiVerSubscriptionPackagePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: fugiat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '40285'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/renew-form/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionPackageRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '80679'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscription package.'
        example: '25'
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/history/purge/{name}':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetHistoryPurgeName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
      -
        in: path
        name: name
        description: ''
        example: accusantium
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/history/{name}':
    get:
      summary: ''
      operationId: getApiVerLayoutSnippetHistoryName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: name
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/ping':
    get:
      summary: ''
      operationId: getApiVerLayoutSnippetPing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/publish':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetPublish
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/purge':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetPurge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/revert/{id}':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetRevertId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the revert.'
        example: '8942'
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/theme':
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: maiores
                name:
                  type: string
                  description: ''
                  example: velit
                variant:
                  type: string
                  description: ''
                  example: reiciendis
                files:
                  type: object
                  description: ''
                  example: []
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - files
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/variant':
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: quia
                variant:
                  type: string
                  description: ''
                  example: voluptatem
                files:
                  type: object
                  description: ''
                  example: []
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - variant
                - files
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fuga
        required: true
        schema:
          type: string
  '/api/{ver}/account/blocked-user':
    get:
      summary: ''
      operationId: getApiVerAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    post:
      summary: ''
      operationId: postApiVerAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: distinctio
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/account/blocked-user/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerAccountBlockedUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the blocked user.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/account/invisible':
    get:
      summary: ''
      operationId: getApiVerAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    put:
      summary: ''
      operationId: putApiVerAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invisible:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 0
              required:
                - invisible
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: natus
        required: true
        schema:
          type: string
  '/api/{ver}/account/item-privacy':
    put:
      summary: ''
      operationId: putApiVerAccountItemPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
  '/api/{ver}/account/item-privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountItemPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 275.77212
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '2'
  '/api/{ver}/account/notification':
    get:
      summary: ''
      operationId: getApiVerAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ''
                  example: quo
    put:
      summary: ''
      operationId: putApiVerAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                module_id:
                  type: string
                  description: ''
                  example: maiores
                value:
                  type: integer
                  description: ''
                  example: 2
                var_name:
                  type: string
                  description: ''
                  example: ut
                channel:
                  type: string
                  description: ''
                  example: dignissimos
              required:
                - channel
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-menu':
    put:
      summary: ''
      operationId: putApiVerAccountProfileMenu
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-menu/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountProfileMenuId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 6368.153164
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '9'
  '/api/{ver}/account/profile-privacy':
    put:
      summary: ''
      operationId: putApiVerAccountProfilePrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: error
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountProfilePrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 261299980.90879
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '3'
  '/api/{ver}/account/setting':
    get:
      summary: ''
      operationId: getApiVerAccountSetting
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/account/setting/video':
    get:
      summary: ''
      operationId: getApiVerAccountSettingVideo
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/account/setting/video/{id}':
    put:
      summary: ''
      operationId: putApiVerAccountSettingVideoId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '518103'
        required: true
        schema:
          type: string
  '/api/{ver}/account/timezone':
    get:
      summary: ''
      operationId: getApiVerAccountTimezone
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: architecto
        required: true
        schema:
          type: string
  '/api/{ver}/auth/logout':
    get:
      summary: ''
      operationId: getApiVerAuthLogout
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
  '/api/{ver}/auth/profile':
    get:
      summary: ''
      operationId: getApiVerAuthProfile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/me':
    get:
      summary: 'View current logged in user.'
      operationId: viewCurrentLoggedInUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: veritatis
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magnam
        required: true
        schema:
          type: string
  '/api/{ver}/register':
    post:
      summary: MetaFox
      operationId: metaFox
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: allen09@example.org
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: quibusdam
                password:
                  type: string
                  description: ''
                  example: 'OI/#{!;qa\CXsX9'
                full_name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 25 characters.'
                  example: mzdfblzwfvaduifxurzkuarq
                user_name:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 25 characters.'
                  example: lsph
                agree:
                  type: boolean
                  description: 'Must be accepted.'
                  example: true
                captcha:
                  type: string
                  description: ''
                  example: null
                code:
                  type: string
                  description: ''
                  example: omnis
                invite_code:
                  type: string
                  description: ''
                  example: facere
              required:
                - password
                - full_name
                - user_name
                - agree
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
  '/api/{ver}/user':
    get:
      summary: 'Browse user.'
      operationId: browseUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ducimus
                view:
                  type: string
                  description: ''
                  example: beatae
                gender:
                  type: number
                  description: ''
                  example: 588997058.493
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 35
                limit:
                  type: number
                  description: ''
                  example: 158104.842
                sort:
                  type: string
                  description: ''
                  example: porro
                sort_type:
                  type: string
                  description: ''
                  example: omnis
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: zbowdyyxkrjctesdctpdrtwbhzs
                country_state_id:
                  type: string
                  description: ''
                  example: veritatis
                city:
                  type: string
                  description: ''
                  example: null
                city_code:
                  type: string
                  description: ''
                  example: voluptatem
                is_featured:
                  type: number
                  description: ''
                  example: 3298.93152
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/user/account':
    get:
      summary: ''
      operationId: getApiVerUserAccount
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/email-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountEmailForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: nulla
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/phone-number-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountPhoneNumberForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: quaerat
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellat
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/review-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountReviewForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quam
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/timezone-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountTimezoneForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/user/activity':
    get:
      summary: ''
      operationId: getApiVerUserActivity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
  '/api/{ver}/user/avatar/{user}':
    post:
      summary: 'Upload avatar.'
      operationId: uploadAvatar
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image_crop:
                  type: string
                  description: ''
                  example: molestiae
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 41587.2
                photo_id:
                  type: number
                  description: ''
                  example: 0.857997381
              required:
                - image_crop
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: repellat
        required: true
        schema:
          type: string
  '/api/{ver}/user/ban':
    post:
      summary: 'Ban user.'
      operationId: banUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 47642095.283045
                day:
                  type: number
                  description: 'Must be at least 0.'
                  example: 20
                reason:
                  type: string
                  description: ''
                  example: null
                return_user_group:
                  type: number
                  description: 'Must be at least 1.'
                  example: 57
              required:
                - user_id
                - day
                - return_user_group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/{ver}/user/ban/{id}':
    delete:
      summary: 'Un-ban user.'
      operationId: unBanUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ban.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/user/city':
    get:
      summary: ''
      operationId: getApiVerUserCity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: oexqaivwnobbwzehxznqquuulplnccyqedncilgbrfemfgaj
                state:
                  type: string
                  description: ''
                  example: consequuntur
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 2
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
  '/api/{ver}/user/country/state':
    get:
      summary: ''
      operationId: getApiVerUserCountryState
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: consequatur
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: mdplkqit
                state:
                  type: string
                  description: ''
                  example: rem
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 1
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/user/cover/{user}':
    post:
      summary: 'Update cover.'
      operationId: updateCover
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 4390606.6644734
                position:
                  type: string
                  description: ''
                  example: ut
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: reprehenderit
        required: true
        schema:
          type: string
  '/api/{ver}/user/exist':
    get:
      summary: ''
      operationId: getApiVerUserExist
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when none of <code>user_name</code> and <code>phone_number</code> are present.  Must be a valid email address.'
                  example: chance.nienow@example.com
                phone_number:
                  type: string
                  description: 'This field is required when none of <code>user_name</code> and <code>email</code> are present.'
                  example: nam
                user_name:
                  type: string
                  description: 'This field is required when none of <code>email</code> and <code>phone_number</code> are present.'
                  example: et
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
  '/api/{ver}/user/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerUserFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/user/form':
    get:
      summary: 'Get user registration form.'
      operationId: getUserRegistrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
  '/api/{ver}/user/info/{user}':
    get:
      summary: ''
      operationId: getApiVerUserInfoUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/{ver}/user/login':
    post:
      summary: /login.
      operationId: login
      description: 'Logged in by email and password.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The email of user.'
                  example: metafoxtest1@phpfox.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: '12345678'
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - username
                - password
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/edit/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordEditResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: at
                user_id:
                  type: number
                  description: ''
                  example: 34.6958833
              required:
                - token
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/request-method/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordRequestMethodResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: howe.vincent@example.net
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - email
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/request-verify/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordRequestVerifyResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_method:
                  type: string
                  description: ''
                  example: vel
                user_id:
                  type: number
                  description: ''
                  example: 64627.0
              required:
                - request_method
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: tempora
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/{resolution}':
    patch:
      summary: ''
      operationId: patchApiVerUserPasswordResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 9481.126169471
                token:
                  type: string
                  description: ''
                  example: itaque
                new_password:
                  type: string
                  description: ''
                  example: consequuntur
                new_password_confirmation:
                  type: string
                  description: 'This field is required when <code>new_password</code> is present.  The value and <code>new_password</code> must match.'
                  example: null
              required:
                - user_id
                - token
                - new_password
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ad
  '/api/{ver}/user/profile/form':
    get:
      summary: ''
      operationId: getApiVerUserProfileForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 66.89471323
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/user/profile/gender':
    get:
      summary: ''
      operationId: getApiVerUserProfileGender
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: assumenda
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 53
                is_custom:
                  type: number
                  description: ''
                  example: 266498.423
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/{ver}/user/quick-preview/{id}':
    get:
      summary: ''
      operationId: getApiVerUserQuickPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the quick preview.'
        example: '59'
        required: true
        schema:
          type: string
  '/api/{ver}/user/refresh':
    post:
      summary: ''
      operationId: postApiVerUserRefresh
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: ''
                  example: rem
              required:
                - refresh_token
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
  '/api/{ver}/user/remove-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerUserRemoveCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '79457'
  '/api/{ver}/user/shortcut':
    get:
      summary: 'Browse shortcuts.'
      operationId: browseShortcuts
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 68
                limit:
                  type: number
                  description: ''
                  example: 5538092.26041
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
  '/api/{ver}/user/shortcut/edit':
    get:
      summary: 'View shortcut.'
      operationId: viewShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 38
                limit:
                  type: number
                  description: ''
                  example: 5.293213944
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  '/api/{ver}/user/shortcut/manage/{id}':
    put:
      summary: 'Update shortcut.'
      operationId: updateShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sort_type:
                  type: string
                  description: ''
                  example: expedita
              required:
                - sort_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the manage.'
        example: '08956'
        required: true
        schema:
          type: string
  '/api/{ver}/user/simple/{user}':
    get:
      summary: 'View minimized user information.'
      operationId: viewMinimizedUserInformation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify':
    post:
      summary: ''
      operationId: postApiVerUserVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: iure
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '920170'
              required:
                - action
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/form':
    get:
      summary: ''
      operationId: getApiVerUserVerifyForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: nobis
                user_id:
                  type: number
                  description: ''
                  example: 401384.0495656
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: samanta40@example.net
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: aut
                resolution:
                  type: string
                  description: ''
                  example: tempora
              required:
                - action
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/resend':
    post:
      summary: ''
      operationId: postApiVerUserVerifyResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: necessitatibus
                user_id:
                  type: number
                  description: ''
                  example: 3391849.6237232
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: jalyn17@example.org
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: laborum
              required:
                - action
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/resendLink':
    post:
      summary: ''
      operationId: postApiVerUserVerifyResendLink
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: kozey.garrick@example.org
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: perspiciatis
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptate
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/{hash}':
    post:
      summary: ''
      operationId: postApiVerUserVerifyHash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/user/{id}/item-stats':
    get:
      summary: ''
      operationId: getApiVerUserIdItemStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: assumenda
                item_id:
                  type: number
                  description: ''
                  example: 6.0
              required:
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: beatae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '43809'
        required: true
        schema:
          type: string
  '/api/{ver}/user/{id}':
    get:
      summary: 'View user.'
      operationId: viewUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: perferendis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '401'
        required: true
        schema:
          type: string
  '/api/{ver}/video':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: dolores
                view:
                  type: string
                  description: ''
                  example: aliquam
                sort:
                  type: string
                  description: ''
                  example: reprehenderit
                sort_type:
                  type: string
                  description: ''
                  example: voluptatem
                when:
                  type: string
                  description: ''
                  example: similique
                category_id:
                  type: number
                  description: ''
                  example: 0.51
                owner_id:
                  type: integer
                  description: ''
                  example: 20
                user_id:
                  type: number
                  description: ''
                  example: 3.11741
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 66
                limit:
                  type: number
                  description: ''
                  example: 4.69957
                is_featured:
                  type: number
                  description: ''
                  example: 52730341.483918
    post:
      summary: 'Create a resource.'
      operationId: createAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: consequatur
                text:
                  type: string
                  description: ''
                  example: voluptatem
                file:
                  type: string
                  description: 'This field is required when <code>video_url</code> is not present.'
                  example: null
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 0.0
                video_url:
                  type: string
                  description: 'This field is required when <code>file</code> is not present.  Must be a valid URL.'
                  example: 'https://www.turcotte.com/aut-beatae-ipsam-nihil-doloremque-temporibus-pariatur-porro'
                categories:
                  type: array
                  description: ''
                  example:
                    - 29.19
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 7785516.755
                privacy:
                  type: string
                  description: ''
                  example: omnis
                is_posted_from_feed:
                  type: number
                  description: ''
                  example: 2.5286956
              required:
                - title
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
  '/api/{ver}/video/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '42'
        required: true
        schema:
          type: string
  '/api/{ver}/video/callback/{provider}':
    post:
      summary: ''
      operationId: postApiVerVideoCallbackProvider
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: minima
        required: true
        schema:
          type: string
  '/api/{ver}/video/category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 665976.09797444
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 79
                q:
                  type: string
                  description: ''
                  example: velit
                level:
                  type: number
                  description: ''
                  example: 55017.374922698
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 23
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  description: ''
                  example: []
                  properties: []
                name_url:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: 'http://www.turcotte.biz/'
                is_active:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 0
                ordering:
                  type: number
                  description: 'Must be at least 0.'
                  example: 31
                parent_id:
                  type: number
                  description: ''
                  example: 2600.19691346
              required:
                - name
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloribus
        required: true
        schema:
          type: string
  '/api/{ver}/video/category/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/video/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/video/fetch':
    post:
      summary: 'View link.'
      operationId: viewLink
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://collins.net/'
              required:
                - link
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellat
        required: true
        schema:
          type: string
  '/api/{ver}/video/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 3.382
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '7329'
        required: true
        schema:
          type: string
  '/api/{ver}/video/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: repellendus
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '0981'
        required: true
        schema:
          type: string
  '/api/{ver}/video/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: harum
                text:
                  type: string
                  description: ''
                  example: minus
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 3.0
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: omnis
                categories:
                  type: array
                  description: ''
                  example:
                    - 8655.0
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 5765744.4
                privacy:
                  type: string
                  description: ''
                  example: aliquam
              required:
                - privacy
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '9056'
        required: true
        schema:
          type: string
tags:
  -
    name: 'Activity Point'
    description: "App name: Activity Point\nVersion: 5.1.1\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Advertise
    description: "App name: Advertise\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Announcement
    description: "App name: Announcement\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Attachments
    description: "App name: Attachments\nVersion: 5.0.2\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Authorization
    description: "App name: Authorization\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Blog
    description: "App name: Blog\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: CAPTCHA
    description: "App name: CAPTCHA\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Chat
    description: "App name: Chat\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: ChatPlus
    description: "App name: ChatPlus\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Comment
    description: "App name: Comment\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Contact
    description: "App name: Contact\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Core
    description: "App name: Core\nVersion: 5.1.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: E-Wallet
    description: "App name: E-Wallet\nVersion: 5.1.0\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Event
    description: "App name: Event\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Feed
    description: "App name: Feed\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Follow
    description: "App name: Follow\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Forum
    description: "App name: Forum\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Friend
    description: "App name: Friend\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Group
    description: "App name: Group\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Hashtags
    description: "App name: Hashtags\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Invitations
    description: "App name: Invitations\nVersion: 5.0.4\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Live Video'
    description: "App name: Live Video\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Marketplace
    description: "App name: Marketplace\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Menu
    description: "App name: Menu\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Multi-Factor Authentication'
    description: "App name: Multi-Factor Authentication\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Music
    description: "App name: Music\nVersion: 5.0.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Notification
    description: "App name: Notification\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Page
    description: "App name: Page\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: PayPal
    description: "App name: PayPal\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Payment Gateway'
    description: "App name: Payment Gateway\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Payment Processor'
    description: "App name: Payment Processor\nVersion: 5.0.2\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Photo
    description: "App name: Photo\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Poll
    description: "App name: Poll\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Quiz
    description: "App name: Quiz\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Reactions
    description: "App name: Reactions\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Report
    description: "App name: Report\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: SEO
    description: "App name: SEO\nVersion: 5.0.8\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'SMS Gateway'
    description: "App name: SMS Gateway\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Saved
    description: "App name: Saved\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Search
    description: "App name: Search\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Social Connect'
    description: "App name: Social Connect\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Static Page'
    description: "App name: Static Page\nVersion: 5.0.9\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: 'Status Background'
    description: "App name: Status Background\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Sticker
    description: "App name: Sticker\nVersion: 5.1.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Story
    description: "App name: Story\nVersion: 5.0.1\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Subscription
    description: "App name: Subscription\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Theme
    description: "App name: Theme\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: User
    description: "App name: User\nVersion: 5.1.6\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
  -
    name: Video
    description: "App name: Video\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Dec 26, 2023"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
