(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{PuJo:function(e,n,o){"use strict";o.r(n),o.d(n,"_frontmatter",(function(){return a})),o.d(n,"default",(function(){return u}));var t=o("Fcif"),c=o("+I+c"),l=(o("mXGw"),o("/FXl")),r=o("TjRS"),a=(o("aD51"),{});void 0!==a&&a&&a===Object(a)&&Object.isExtensible(a)&&!a.hasOwnProperty("__filemeta")&&Object.defineProperty(a,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/public/backend/policy.mdx"}});var i={_frontmatter:a},s=r.a;function u(e){var n=e.components,o=Object(c.a)(e,["components"]);return Object(l.b)(s,Object(t.a)({},i,o,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"policy"},"Policy"),Object(l.b)("h2",{id:"policy-interface"},"Policy Interface"),Object(l.b)("p",null,"This is the main interface for all Policies."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-php"},"namespace FoxSocial\\Platform\\Contracts\\Policy;\n\nuse FoxSocial\\Platform\\Contracts\\User;\nuse FoxSocial\\Platform\\Contracts\\Content;\n\ninterface ResourcePolicyInterface\n{\n    public function viewAny(User $user, ?User $owner = null): bool;\n\n    public function view(User $user, Content $resource): bool;\n\n    public function viewOwner(User $user, User $owner): bool;\n\n    public function create(User $user, ?User $owner = null): bool;\n\n    public function update(User $user, ?Content $resource = null): bool;\n\n    public function delete(User $user, ?Content $resource = null): bool;\n\n    public function deleteOwn(User $user, ?Content $resource = null): bool;\n}\n\n")),Object(l.b)("h2",{id:"global-policy"},"Global Policy"),Object(l.b)("p",null,"When you want to set a global policy to every resource, you should create in path: modules/company/package/src/Policies/Handlers"),Object(l.b)("p",null,'Example CanComment will add policy "comment" to every policy class'),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-php"},"\nnamespace Modules\\Comment\\Policies\\Handlers;\n\nuse MetaFox\\Platform\\Contracts\\Content;\nuse MetaFox\\Platform\\Contracts\\HasTotalComment;\nuse MetaFox\\Platform\\Contracts\\User;\nuse MetaFox\\Platform\\Support\\Facades\\PrivacyPolicy;\n\nclass CanComment\n{\n    public function check(string $entityType, User $user, Content $resource): bool\n    {\n        // Code here\n    }\n}\n\n")),Object(l.b)("p",null,'If your policy has its own "comment" method, it will override global policy method.'))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/public/backend/policy.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-public-backend-policy-mdx-af182da41b28f07afab9.js.map