{"version":3,"sources":["webpack:///../src/public/frontend/cookie.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAQaA,G,UAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,UADR,UAGA,mDAAkC,iBAAGC,WAAW,IAC5C,KAAQ,0CADsB,cAGlC,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,qHAQL,kBACE,GAAM,QADR,QAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,8LAUL,kBACE,GAAM,QADR,QAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,kMAaL,mI,8MAKJJ,EAAWK,gBAAiB","file":"component---src-public-frontend-cookie-mdx-cde504a2736f99c35466.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/namnv/Sites/foxsocial/metafox-dev-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"cookie\"\n    }}>{`Cookie`}</h2>\n    <p>{`cookieBackend a wrapper of `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/js-cookie/js-cookie\"\n      }}>{`js-cookie`}</a></p>\n    <h2 {...{\n      \"id\": \"hooks\"\n    }}>{`Hooks`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const ComponentWithCookieBackend = () => {\n  const { cookieBackend } = useGlobal();\n\n  // ... your code\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"saga\"\n    }}>{`Saga`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { getContext } from 'redux-saga/effects';\n\nexport function* functionWithCookieBackend() {\n  const { cookieBackend } = yield getContext('useGlobal');\n\n  // ... your code\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"apis\"\n    }}>{`Apis`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`\n# Get a cookie value\ncookieBackend.get(\"name\");\n\n// Set a string to name\ncookieBackend.set(\"name\", \"string value\");\n\n// return number or undefined\ncookieBackend.getInt(\"name\");\n\n`}</code></pre>\n    <p>{`Cookie is send back to server in every request, so do not storage more data than you need to cookie.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}