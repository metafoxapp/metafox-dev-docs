{"version":3,"sources":["webpack:///../src/public/frontend/router.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-public-frontend-router-mdx-de176e1071fc1f0fef7c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/phongbn/Documents/Sites/mfdocs-dev/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"router\"\n    }}>{`Router`}</h1>\n    <p>{`Table of Contents`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Dynamic/Async Routing`}</li>\n      <li parentName=\"ul\">{`Router and Code Splitting`}</li>\n      <li parentName=\"ul\">{`Router and Transition`}</li>\n      <li parentName=\"ul\">{`Router and Loading progress`}</li>\n      <li parentName=\"ul\">{`Router and Modal`}</li>\n    </ul>\n    <p>{`Let's take a look at phpfox's url structure`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`home`}</inlineCode>{` page or `}<inlineCode parentName=\"li\">{`user.home`}</inlineCode>{` page depend on user authentication state.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/blog`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`user.browse`}</inlineCode>{` page.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/blog/my`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`user.browse.my`}</inlineCode>{` page.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/user`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`user.browse`}</inlineCode>{` page.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/user/profile/1`}</inlineCode>{`: Display profile of user`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/pages/profile/14`}</inlineCode>{`: Display profile of pages`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/groups/profile/12`}</inlineCode>{`: Display profile of groups`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/jack`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`user.profile`}</inlineCode>{` page, alias of `}<inlineCode parentName=\"li\">{`/user/profile/1`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/jack/photo`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`user.profile.photo`}</inlineCode>{` page, alias of `}<inlineCode parentName=\"li\">{`/user/profile/1/photo`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/barca`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`pages.profile`}</inlineCode>{` as alias of `}<inlineCode parentName=\"li\">{`/pages/profile/14`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/barca/groups`}</inlineCode>{`: Display `}<inlineCode parentName=\"li\">{`pages.profile.groups`}</inlineCode>{` as alias of `}<inlineCode parentName=\"li\">{`/pages/profile/14/photo`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/nancy-club`}</inlineCode>{`: Display private `}<inlineCode parentName=\"li\">{`groups.profile`}</inlineCode>{` as alias of `}<inlineCode parentName=\"li\">{`/group/profile/12`}</inlineCode></li>\n    </ul>\n    <p>{`Using react-router-dom and React.lazy we can structure react component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Router>\n  <Switch>\n    <Route path=\"/\" component={HomePage} />\n    <Route path=\"/blog\" component={BlogPage} />\n    <Route path=\"/blog/my\" component={MyBlogPage} />\n    <Route path=\"/user/profile/:userId\" component={UserProfilePage} />\n    <Route\n      path=\"/user/profile/:userId/photo\"\n      component={UserProfilePhotoPage}\n    />\n    <Route path=\"/pages/profile/:pageId\" component={PageProfilePage} />\n    <Route\n      path=\"/pages/profile/:pageId/photo\"\n      component={PageProfilePhotoPage}\n    />\n    <Route path=\"/groups/profile/:groupId\" component={GroupProfilePage} />\n    ... Others Routes\n    <NoMatchRoute />\n  </Switch>\n</Router>\n`}</code></pre>\n    <p>{`As you see `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`blog`}</inlineCode>{`,`}<inlineCode parentName=\"p\">{`blog/my`}</inlineCode>{` is static regex url, its solve by regex or literal string.`}</p>\n    <p>{`While `}<inlineCode parentName=\"p\">{`/jack`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`jack/photo`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`/barca`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`/barca/groups`}</inlineCode>{` is difficult, we have to query database to know\nterms of `}<inlineCode parentName=\"p\">{`jack`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`barca`}</inlineCode>{` is a username or pages slug.`}</p>\n    <p><strong parentName=\"p\">{`Challenges`}</strong></p>\n    <p>{`We must send an async request to APIS server, get a result after 1-5 seconds depend on network speed and server capability. etc we get result\n`}<inlineCode parentName=\"p\">{`/jack/photo`}</inlineCode>{` should be `}<inlineCode parentName=\"p\">{`/profile/user/1/photo`}</inlineCode>{`. We hate to update current browser address to `}<inlineCode parentName=\"p\">{`user/profile/1/photo`}</inlineCode>{`, so we must replace current its state and keep origin path.`}</p>\n    <p>{`During of waiting to solve `}<inlineCode parentName=\"p\">{`/jack/photo`}</inlineCode>{` what should be displaying to end users, `}<inlineCode parentName=\"p\">{`NoMatchRoute`}</inlineCode>{` it depend on result of `}<inlineCode parentName=\"p\">{`NoMatchRoute`}</inlineCode>{` component, simple solution is display a loading screen. Try to implement solution, when waiting time is 3-5 seconds, it looks good but flash screen if network is faster. Look at instagram and youtube, they have another better solution, browser keeps old screens during loading next, Try with react-router but implement is very difficult. `}<inlineCode parentName=\"p\">{`react-navi`}</inlineCode>{` supports this feature but we don't like their syntax, it's not popular too.\nOther popular router lib such as `}<inlineCode parentName=\"p\">{`@reach/router`}</inlineCode>{` does not help to solve our requirement, so we decide to folk `}<inlineCode parentName=\"p\">{`reac-router-dom`}</inlineCode>{` and do our customization.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{` 1. Router got /jack/photo pathname\n 2. Try other router path but no matched,\n 3. Keep previous matched Route, showing loading progress bar/empty/loading screen.\n 4. Async request to get canonical pathname of /jack/photo\n 5. If got /user/profile/1/photo => replace current location state, keep location pathname.\n 6. Router try re-run and UI update.\n`}</code></pre>\n    <p>{`NOTE:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Application is configurable using Loading progress bar or Empty waiting screen?`}</li>\n      <li parentName=\"ul\">{`Should use nested route in user/pages/event profile page. TBD.`}</li>\n    </ul>\n    <p>{`Caveat:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Do not trust browse location.`}</li>\n      <li parentName=\"ul\">{`When develop UI, we use \\\\$PageContext to ask the context to query content instead of location.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"code-splitting\"\n    }}>{`Code Splitting`}</h2>\n    <p>{`Because of app sizing, we have to split code of every Page components. `}<a parentName=\"p\" {...{\n        \"href\": \"/technical/code-splitting\"\n      }}>{`read more`}</a></p>\n    <p>{`At the first time visit `}<inlineCode parentName=\"p\">{`/user`}</inlineCode>{`, the associate chunk file is not ready, if network around 1 seconds, end users can see a flash animate.`}</p>\n    <h2 {...{\n      \"id\": \"router-and-transition\"\n    }}>{`Router and Transition`}</h2>\n    <p>{`TBD`}</p>\n    <h2 {...{\n      \"id\": \"modal-route\"\n    }}>{`Modal Route`}</h2>\n    <p>{`Visit `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.instagram.com/leomessi/\"\n      }}>{`https://www.instagram.com/leomessi/`}</a>{`, click on photo item, it shows a modal photo viewer.\nrefresh browser, it shows another screens.`}</p>\n    <p>{`It helps to improving user experience, Facebook uses the same solutions for photo viewer.`}</p>\n    <p>{`Our routing support to check any pathname prefix by `}<inlineCode parentName=\"p\">{`/m/`}</inlineCode>{` to be display modal overlay on last UI. and display original /ui/.`}</p>\n    <p>{`Then separate modals and pages to 2 Switch, we solve related issues.`}</p>\n    <p><strong parentName=\"p\">{`Cons`}</strong></p>\n    <p>{`Developer have to create two routes, 01 is ModalRoute, and the seconds is Page Route. Declare theme all in 'routes.ts', with the same path but add property \"modal\".`}</p>\n    <p>{`How to disable modal dialog on mobile device?`}</p>\n    <p><strong parentName=\"p\">{`Pros`}</strong></p>\n    <p>{`Re-use user experience.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`{\n  sampleModalDialog: {\n    modal: true,\n    path: '/m/example/simple-modal',\n    component: loadable(() => import('./pages/ExampleModal')),\n  },\n  sampleModalPage: {\n    path: '/m/example/simple-modal',\n    component: loadable(() => import('./pages/ExampleModalPage')),\n  },\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}