{"version":3,"sources":["webpack:///../src/public/backend/tags.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,6MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,8DACA,sBACE,kBAAIC,WAAW,MAAf,mCAAwD,0BAAYA,WAAW,MAAvB,KAAxD,+BACA,kBAAIA,WAAW,MAAf,uEAEF,4DACA,gCACA,4BAAW,0BAAYA,WAAW,KAAvB,cAAX,0BACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,4DAKL,qDAAoC,0BAAYA,WAAW,KAAvB,SACpC,gCACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,sKAUL,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,qBACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,mnBAsCL,gCACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,mTAkBL,gCACA,wEACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,kGAML,gCACA,wHACA,2EACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,ga,2MA2BTJ,EAAWK,gBAAiB","file":"component---src-public-backend-tags-mdx-23fbc4cd132bede0bfb4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/phongbn/Documents/Sites/mfdocs-dev/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Each content support hashtag and tags`}</p>\n    <ul>\n      <li parentName=\"ul\">{`hashtag is tagged word start by `}<inlineCode parentName=\"li\">{`#`}</inlineCode>{` in description or content.`}</li>\n      <li parentName=\"ul\">{`tag (sometime named topics) is separated word directly in database`}</li>\n    </ul>\n    <p>{`in order to support tags and search`}</p>\n    <p>{`step 1:`}</p>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`*_tag_data`}</inlineCode>{` relation to migration`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`DbTableHelper::createTagDataTable('blog_tag_data');\n\n`}</code></pre>\n    <p>{`Modify content table to have `}<inlineCode parentName=\"p\">{`tags`}</inlineCode></p>\n    <p>{`step 2:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`class CreateBlogTables extends Migration{\n\n    function up(){\n        // add this line to up() method\n        DbTableHelper::tagsColumns($table);\n    }\n}\n`}</code></pre>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`*TagData`}</inlineCode>{` table class, etc`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nnamespace Modules\\\\Blog\\\\Models;\n\nuse Illuminate\\\\Database\\\\Eloquent\\\\Builder;\nuse Illuminate\\\\Database\\\\Eloquent\\\\Relations\\\\Pivot;\n\n/**\n * Class BlogTagData.\n * @mixin Builder\n * @property int    $id\n * @property int    $item_id\n * @property int    $tag_id\n * @property string $tag_text\n */\nclass BlogTagData extends Pivot\n{\n    /**\n     * @var bool\n     */\n    public $timestamps = false;\n\n    /**\n     * @var string\n     */\n    protected $table = 'blog_tag_data';\n\n    /**\n     * @var string[]\n     */\n    protected $fillable = [\n        'item_id',\n        'tag_id',\n    ];\n}\n`}</code></pre>\n    <p>{`step 3.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`class Blog {\n  /**\n   * @return BelongsToMany\n   */\n  public function tagData(): BelongsToMany\n  {\n      return $this->belongsToMany(\n          Tag::class,\n          'blog_tag_data',\n          'item_id',\n          'tag_id'\n      )->using(BlogTagData::class);\n  }\n  // ... other method\n}\n`}</code></pre>\n    <p>{`step 4:`}</p>\n    <p>{`add tag scope to associate query to filter tag.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`  if ($searchTag != '') {\n       $query = $query->addScope(new TagScope($searchTag));\n  }\n`}</code></pre>\n    <p>{`step 5:`}</p>\n    <p>{`On search form, there are no tag field, so users used to type \"#\" before query field to search.`}</p>\n    <p>{`WARNING: this step should be improve to skip ASAP.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`\nclass IndexRequest{\n\n    /**\n     * @return array<string, mixed>\n     */\n    public function validated(): array\n    {\n        $data = parent::validated();\n\n        // .. other process\n\n        if (Str::startsWith($data['q'], '#')) {\n            $data['tag'] = Str::substr($data['q'], 1);\n            $data['q'] = PhpfoxConstant::EMPTY_STRING;\n        }\n\n        return $data;\n    }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}