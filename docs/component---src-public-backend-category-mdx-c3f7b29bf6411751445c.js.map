{"version":3,"sources":["webpack:///../src/public/backend/category.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uPAQaA,G,UAAe,S,iNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,SADR,SAGA,qGAAoF,kBAAIC,WAAW,MAAnG,KACF,0BAAYA,WAAW,KAAvB,mBADE,QACkE,0BAAYA,WAAW,KAAvB,sBADlE,qCACsK,0BAAYA,WAAW,KAAvB,SADtK,QACgO,0BAAYA,WAAW,KAAvB,eAChO,kBACE,GAAM,UADR,UAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,+UAiBL,qCACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,keAgBL,0CACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,iO,+MAcTJ,EAAWK,gBAAiB","file":"component---src-public-backend-category-mdx-c3f7b29bf6411751445c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/phongbn/Documents/Sites/mfdocs-dev/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h3>\n    <p>{`Example you want to organanize note items into categorize, you need 02 schema`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`note_categories`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`note_category_data`}</inlineCode>{` to keep relation many to many of `}<inlineCode parentName=\"p\">{`notes`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`categories`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"schema\"\n    }}>{`Schema`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`\nclass NoteMigration extends Migration{\n\n  public function up (){\n    DbTableHelper::categoryTable('note_categories', true);\n    DbTableHelper::categoryDataTable('blog_category_data');\n  }\n\n  public function down(){\n    Schema::dropIfExists('note_categories');\n    Schema::dropIfExists('note_category_data');\n  }\n}\n\n`}</code></pre>\n    <p>{`Category DDL`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sql\"\n      }}>{`-- auto-generated definition\nCREATE TABLE note_categories\n(\n    id         serial CONSTRAINT note_categories_pkey PRIMARY KEY,\n    parent_id  integer,\n    name       varchar(255)                   NOT NULL,\n    name_url   varchar(255),\n    is_active  smallint DEFAULT '1'::smallint NOT NULL,\n    ordering   integer  DEFAULT 0             NOT NULL,\n    total_item integer  DEFAULT 0             NOT NULL,\n    created_at timestamp(0),\n    updated_at timestamp(0)\n);\n`}</code></pre>\n    <p>{`Category Data DDL`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sql\"\n      }}>{`-- auto-generated definition\nCREATE TABLE note_category_data\n(\n    id          bigserial CONSTRAINT blog_category_data_pkey PRIMARY KEY,\n    item_id     bigint  NOT NULL,\n    category_id integer NOT NULL\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}